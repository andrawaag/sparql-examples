@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-4976d9e694e56b799f5a65e9b3c5c895> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org//wiki/Wikidata:Request_a_query/Archive/2017/06>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d859903-wikidata_prefixes, _:genid-4e694113159d4e3db4a1a913894a81d859903-8D4C87947A69DF734A28B43EDFCA11C3;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT (GROUP_CONCAT(DISTINCT ?songdesc; separator=\"; \") as ?s)
{
  SELECT ?song ?songLabel
    (GROUP_CONCAT(DISTINCT ?composerLabel; separator=\" and \") as ?comp)
    (GROUP_CONCAT(DISTINCT ?lyrics_byLabel; separator=\" and \") as ?lyri)
    (CONCAT('\"', str(?songLabel), '\" by ', str(?comp), \" (comp.), \", str(?lyri), \" (lyrics)\") as ?songdesc)
  WHERE
  {
    BIND(wd:Q530546 AS ?item) # this is the item of the album
    ?item wdt:P658 ?song.
    ?song wdt:P86 ?composer. # need concatenate all the composer
    ?song wdt:P676 ?lyrics_by # need concatenate all the lyrics by
     SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,it\" .  ?composer rdfs:label ?composerLabel . ?lyrics_by rdfs:label ?lyrics_byLabel . ?song rdfs:label ?songLabel }
  }
  GROUP BY ?song ?songLabel
}""" .
