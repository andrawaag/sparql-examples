@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-a2fbdf63019163462069707f10ef18bd> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org//wiki/Wikidata:WikiProject_Performing_arts/Typologies>,
    <https://www.wikidata.org//wiki/Wikidata:WikiProject_Performing_arts/Typologies/nl>,
    <https://www.wikidata.org//wiki/Wikidata:WikiProject_Performing_arts/Typologies/tr>,
    <https://www.wikidata.org//wiki/Wikidata:WikiProject_Performing_arts/Typologies/da>,
    <https://www.wikidata.org//wiki/Wikidata:WikiProject_Performing_arts/Typologies/pl>,
    <https://www.wikidata.org//wiki/Wikidata:WikiProject_Performing_arts/Typologies/fr>,
    <https://www.wikidata.org//wiki/Wikidata:WikiProject_Performing_arts/Typologies/en>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d842500-wikidata_prefixes, _:genid-4e694113159d4e3db4a1a913894a81d842500-476AB5D1270219652CAA60242B00EBC0,
    _:genid-4e694113159d4e3db4a1a913894a81d842500-8C1CAC0B1380150D7D07959705162944, _:genid-4e694113159d4e3db4a1a913894a81d842500-AB1D01D610A81F5B1503AB090CFF9568,
    _:genid-4e694113159d4e3db4a1a913894a81d842500-2B0BC2FBD4F5E368D31042D371E9CF42, _:genid-4e694113159d4e3db4a1a913894a81d842500-AAA7EDE8D28FE17647A23EEE167D55B6,
    _:genid-4e694113159d4e3db4a1a913894a81d842500-819B1B5A6708DBC5799A656C48C5C5AE, _:genid-4e694113159d4e3db4a1a913894a81d842500-F4519C1A3720E78C98990828466B0E77;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT DISTINCT ?type 
 (COUNT(DISTINCT ?instance) AS ?count)
 ?Label_en
 (group_concat(distinct ?occupationType1_en;separator=\"; \") as ?occupationTypes1_en) 
 (group_concat(distinct ?occupationType2_en;separator=\"; \") as ?occupationTypes2_en)
 (group_concat(distinct ?occupationType3_en;separator=\"; \") as ?occupationTypes3_en)
 (group_concat(distinct ?occupationType4_en;separator=\"; \") as ?occupationTypes4_en)
WHERE {
 ?type wdt:P279* wd:Q36180.
 OPTIONAL { ?instance wdt:P106 ?type }  
 OPTIONAL { ?type rdfs:label ?Label_en . FILTER (lang(?Label_en) = \"en\") }
 OPTIONAL { ?type wdt:P279+ ?occupationType1 . ?occupationType1 wdt:P279/^wdt:P279 wd:Q36180 . ?occupationType1 rdfs:label ?occupationType1_en . FILTER (lang(?occupationType1_en) = \"en\") }
 OPTIONAL { ?type wdt:P279+ ?occupationType2 . ?occupationType2 wdt:P279 wd:Q36180 . ?occupationType2 rdfs:label ?occupationType2_en . FILTER (lang(?occupationType2_en) = \"en\") }
 OPTIONAL { ?type wdt:P279+ ?occupationType3 . ?occupationType3 wdt:P279/wdt:P279 wd:Q36180 . ?occupationType3 rdfs:label ?occupationType3_en . FILTER (lang(?occupationType3_en) = \"en\") }
 OPTIONAL { ?type wdt:P279+ ?occupationType4 . ?occupationType4 wdt:P279/wdt:P279/wdt:P279 wd:Q36180 . ?occupationType4 rdfs:label ?occupationType4_en . FILTER (lang(?occupationType4_en) = \"en\") }
}
GROUP BY ?type 						#List all the variables for which the values are not concatenated!
  ?count
  ?Label_en 
ORDER BY DESC(?count)
LIMIT 100""" .
