@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-d01b8e093bb70b34e7877c96df1a0c07> a sh:SPARQLExecutable;
  rdfs:comment """ This page is an archive. Please do not modify it. Use the current page, even to continue an old discussion. Contents 1 All humans with an image and a sitelink to a Commons category 2 Preferred / deprecated 3 MWAPI Woe 4 Wikidata items I created 5 Query labels in multiple languages in one request 6 Help needed with Commons query 7 Female form of label 8 Oldest male living tennis players who won a Grand Slam singles title 9 Using Wikipedia category in query 10 Property usage 11 Find missing articles in language Wikipedia given a list of article names in another language 12 Edit a date 13 Query all coordinate locations 14 Current US legislators sorted by age and schools in the Philippines named after persons 15 Hebrew WP subset of Israeli Women in Red 16 Query for games with Steam App IDs that have platform qualifiers but no corresponding platform 17 querying all the objects having a qualified property with a subject 18 Return all subcategories from a category 19 Interwiki import 20 Items with published in (P1433), but without a page(s) (P304) qualifier 21 Query all battles with war and geo coords 22 Articles that are missing in a certain language 23 Taxa, Wikispecies links and synonymy 24 For an International Women's Day campaign: A long list of high quality photos used on Wikipedia articles about women 25 ESRB game ID (P8303) 26 Italian municipalities with latest population figures not set to preferred rank 27 Show only the references that have a specific role 28 Map in defined language 29 GROUP_CONCAT 30 Value without reference 31 Wikipedia articles with identifier here but no authority control template there 32 Query for events on days or array of years 33 All articles of a specific Wikipedia with their QIDs and current sitelinks 34 Women and LGBTQ+ Cartoonists with Stub, Start, or C Class Articles on English Wikipedia 35 Wikimedia Commons Query Service 36 Match a string in the description 37 The First Human and the Label Service: What's going on here? 38 Question 39 Items satisfying one property statement, but not having one qualifier 40 Query not returning data for one object out of thousands 41 Bilingual URL-syntaxes for Yle Topic ID P8309 42 Finding all organizations in a geographical area (how to fix a query) 43 Updating data that was imported in 2018/ adding references 44 Alumnae/alumni query 45 Finding the Wikipedia URL 46 Query overcounts when grouping All humans with an image and a sitelink to a Commons category Hi, i already tried myself but it seems that the resultset is to big since i run into a timeout. Could anyone please give it a try. Tank you in advance, --Arnd (talk) 10:27, 31 January 2021 (UTC) @Aschroet: No wonder it times out. I got 100,000 results in 23 seconds with this query. Do you really need more than that? SELECT *
WHERE
{
  ?item wdt:P18 ?image .
  ?commons schema:about ?item .
  ?commons schema:isPartOf <https://commons.wikimedia.org/> .
  ?item wdt:P31 wd:Q5 .
  ?commons schema:name ?commons_title .
  FILTER STRSTARTS (?commons_title, \"Category:\")
}
limit 100000
 Try it! -- @Aschroet: Here is a variant that only lists humans with more than one image once. It gave a little over 100,000 results in 30+ seconds. I doubt you can get all without timeout. SELECT *
WITH
{
  SELECT DISTINCT ?item
  WHERE
  {
    ?item wdt:P18 ?image .
    ?item wdt:P31 wd:Q5 .
  }
  limit 180000
}
AS %humans_with_image
WHERE
{
  INCLUDE %humans_with_image
  ?commons schema:about ?item .
  ?commons schema:isPartOf <https://commons.wikimedia.org/> .
  ?commons schema:name ?commons_title .
  FILTER STRSTARTS (?commons_title, \"Category:\")
}
limit 110000
 Try it! (This time I remembered my signature, so the ping should work now) --Dipsacus fullonum (talk) 11:17, 31 January 2021 (UTC) Thank you Dipsacus fullonum, actually i want all results but i did not expect that there are so many. Maybe i need to parse a dump of Wikidata for that. --Arnd (talk) 14:06, 31 January 2021 (UTC)@Aschroet: There are 453,468 people with a Commons category and an image: [1]. This can be compared with c:Category:People_by_name that has 661,674 subcategories. --- Jura 14:46, 31 January 2021 (UTC) @Aschroet: You can get them in 10 slices with this query: SELECT *
WITH
{
  SELECT DISTINCT ?item
  WHERE
  {
    ?item wdt:P18 ?image .
    ?item wdt:P31 wd:Q5 .
    FILTER STRENDS(STR(?item), \"2\")
  }
LIMIT 150000
}
AS %humans_with_image
WHERE
{
  INCLUDE %humans_with_image
  ?commons schema:about ?item .
  ?commons schema:isPartOf <https://commons.wikimedia.org/> .
  ?commons schema:name ?commons_title .
  FILTER STRSTARTS (?commons_title, \"Category:\")
}
LIMIT 70000
 Try it! Run it 10 times where you change the number in FILTER STRENDS(STR(?item), \"2\") from 0 to 9. Each query will give about 50,000 results with items ending with that digit. --Dipsacus fullonum (talk) 18:12, 31 January 2021 (UTC) THANK YOU. --Arnd (talk) 18:11, 1 February 2021 (UTC) Preferred / deprecated Is it possible to query all statements that have qualifier reason for deprecated rank (P2241) or reason for preferred rank (P7452), but are actually neither deprecated nor preferred, respectively? Or even worse, have reason for deprecated rank (P2241), but are preferred (or vice versa)? Steak (talk) 09:16, 1 February 2021 (UTC) @Steak: Sure: SELECT ?item ?itemLabel ?property ?propertyLabel ?value ?valueLabel ?rank ?reason ?reasonLabel
WHERE 
{
  hint:Query hint:optimizer \"None\" .
  ?statement pq:P2241 ?reason .
  {?statement wikibase:rank wikibase:NormalRank .}
  UNION
  {?statement wikibase:rank wikibase:PreferredRank .}
  ?statement wikibase:rank ?rank .
  ?item ?ppp ?statement .
  ?property wikibase:claim ?ppp .
  ?property wikibase:statementProperty ?vvv .
  ?statement ?vvv ?value .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,it\" . }
}
 Try it! SELECT ?item ?itemLabel ?property ?propertyLabel ?value ?valueLabel ?rank ?reason ?reasonLabel
WHERE 
{
  hint:Query hint:optimizer \"None\" .
  ?statement pq:P7452 ?reason .
  {?statement wikibase:rank wikibase:NormalRank .}
  UNION
  {?statement wikibase:rank wikibase:DeprecatedRank .}
  ?statement wikibase:rank ?rank .
  ?item ?ppp ?statement .
  ?property wikibase:claim ?ppp .
  ?property wikibase:statementProperty ?vvv .
  ?statement ?vvv ?value .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,it\" . }
}
 Try it! --Tagishsimon (talk) 10:11, 1 February 2021 (UTC) Certainly SELECT ?item ?itemLabel ?property ?propertyLabel ?rank ?reason_for_deprecationLabel
WHERE
{
  VALUES ?rank { wikibase:NormalRank wikibase:PreferredRank }
  ?statement pq:P2241 ?reason_for_deprecation .
  ?statement wikibase:rank ?rank .
  OPTIONAL 
  {
    ?item ?claim ?statement .
    ?property wikibase:claim ?claim .
    ?property wikibase:statementProperty ?ps .
    ?statement ?ps ?value .
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }
}
 Try it! and SELECT ?item ?itemLabel ?property ?propertyLabel ?rank ?reason_for_preferred_rankLabel
WHERE
{
  VALUES ?rank { wikibase:DeprecatedRank wikibase:NormalRank }
  ?statement pq:P7452 ?reason_for_preferred_rank .
  ?statement wikibase:rank ?rank .
  OPTIONAL 
  {
    ?item ?claim ?statement .
    ?property wikibase:claim ?claim .
    ?property wikibase:statementProperty ?ps .
    ?statement ?ps ?value .
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }
}
 Try it! --Dipsacus fullonum (talk) 10:21, 1 February 2021 (UTC) I see that Tagishsimon and I essentially made the same two queries. The main difference, as I see it, is that Tagishsimon used query hints to prevent the optimizer from doing unwanted reorderings of the queries, while I inserted seemingly unnecessary OPTIONAL clauses with the same purpose. Both methods are fine. --Dipsacus fullonum (talk) 10:37, 1 February 2021 (UTC) Thank you both for the queries. 3300 results for the first and 60 for the second, uff! I will look at the 60 results and maybe resolve them, but for the 3300 I think a bot is necessary. Steak (talk) 11:58, 1 February 2021 (UTC) Hmm. How will the bot know whether to change the rank or remove the reason? --Tagishsimon (talk) 12:11, 1 February 2021 (UTC) Good question :) Let's not bother us with such problems, may someone else clean up this mess. ;) Steak (talk) 15:08, 1 February 2021 (UTC) MWAPI Woe Joost van den Vondel (Q312673) - a human with an English label turns up in SELECT ?item ?itemLabel ?typeLabel WHERE {
  SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"www.wikidata.org\";
                      wikibase:api \"Search\";
                      mwapi:srsearch \"Vondel\".                   
      ?item wikibase:apiOutputItem mwapi:title.
      }
      ?item (wdt:P279|wdt:P31) ?type.
      SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} ORDER BY ASC(?typeLabel)
 Try it! but not in SELECT ?item ?itemLabel ?typeLabel WHERE {
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
  SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"www.wikidata.org\";
                      wikibase:api \"EntitySearch\";
                      mwapi:search \"Vondel\";
                      mwapi:language \"en\".
      ?item wikibase:apiOutputItem mwapi:item.
      ?num wikibase:apiOrdinal true.}
      ?item (wdt:P279|wdt:P31) ?type.
} 
ORDER BY ASC(?typeLabel)
 Try it! What exactly is the wikibase:api \"EntitySearch\"; searching, that it finds a bunch of Vondels but not Joost? I've failed to find the answer from https://www.mediawiki.org/wiki/Wikidata_Query_Service/User_Manual/MWAPI#Supported_services or https://www.mediawiki.org/wiki/Wikibase/API#wbsearchentities --Tagishsimon (talk) 23:25, 1 February 2021 (UTC) Ah. M'learned colleague @generalising points to a limit of 50 on EntitySearch, which err, probably answers most of the question. --Tagishsimon (talk) 00:00, 2 February 2021 (UTC) @Tagishsimon: EntitySearch uses the API function \"action=wbsearchentities\" which has the documentation page https://www.wikidata.org/w/api.php?action=help&modules=wbsearchentities As the doc says the max number of results (the \"limit\" parameter which is set to \"max\" as default) is 50. But the real problem is that MWAPI doesn't make continuation calls to get the next results, as it does with other types of services. The API does offer continuation calls for wbsearchentities but the syntax is different from that used by the \"Generator\", \"Categories\" and \"Search\" services which all is built on the \"action=query\" type API call, and MWAPI isn't coded to do wbsearchentities continuation calls. You could file a wish to make wbsearchentities continuation calls on Phabricator. --Dipsacus fullonum (talk) 01:28, 2 February 2021 (UTC) Wikidata items I created Is it possible to get a list of items I created? —Michael Z. 00:32, 2 February 2021 (UTC) @Mzajac: Yes, but it wouldn't be possible with the query service if you had created many items. SELECT ?item ?timestamp ?comment ?size
WHERE
{
  SERVICE wikibase:mwapi
  {
    bd:serviceParam wikibase:endpoint \"www.wikidata.org\" .
    bd:serviceParam wikibase:limitContinuations \"70\".

    bd:serviceParam wikibase:api \"Generator\" .
    bd:serviceParam mwapi:generator \"allpages\" .
    bd:serviceParam mwapi:gaplimit \"1\" .

    bd:serviceParam mwapi:list \"usercontribs\" .
    bd:serviceParam mwapi:ucuser \"Mzajac\" .
    bd:serviceParam mwapi:ucshow \"new\" .
    bd:serviceParam mwapi:ucnamespace \"0\" .
    bd:serviceParam mwapi:uclimit \"1\" .
    bd:serviceParam mwapi:ucprop \"title|timestamp|comment|size\" .
    ?item wikibase:apiOutputItem \"//api/query/usercontribs/item/@title\" .
    ?timestamp wikibase:apiOutput \"//api/query/usercontribs/item/@timestamp\" .
    ?comment wikibase:apiOutput \"//api/query/usercontribs/item/@comment\" .
    ?size wikibase:apiOutput \"//api/query/usercontribs/item/@size\" .
  }
  FILTER BOUND(?item)
}
 Try it! --Dipsacus fullonum (talk) 02:18, 2 February 2021 (UTC) Thank you. That is great! —Michael Z. 03:49, 2 February 2021 (UTC) Query labels in multiple languages in one request Hi there,I am new to sparql and struggling with finding a query that outputs the labels of an item in several lunges in one result set, including the related language code. I know how to indicate a language code in a query, e.g. 'en' OR 'fr'. However I'd like to receive both 'en' AND 'fr' in one result. Ideal would be a query, returning the labels in all available languages.I did see https://www.mediawiki.org/wiki/Wikidata_Query_Service/User_Manual#Basics_-_Understanding_Prefixes - this only seems to return one language at a request.Thanks for your help! Hi. This query shows how to get labels in English and French for two items: SELECT ?item ?label_fr ?label_en
WHERE
{
  VALUES ?item { wd:Q3736439 wd:Q34384 }
  OPTIONAL { ?item rdfs:label ?label_fr . FILTER (LANG(?label_fr) = \"fr\") }
  OPTIONAL { ?item rdfs:label ?label_en . FILTER (LANG(?label_en) = \"en\") }
}
 Try it! And this query shows how to get all labels with corresponding language code for an item: SELECT ?item ?label ?language_code
WHERE
{
  VALUES ?item { wd:Q3736439 }
  ?item rdfs:label ?label .
  BIND (LANG(?label) AS ?language_code)
}
 Try it! --Dipsacus fullonum (talk) 10:51, 2 February 2021 (UTC) Thank you very much! This works great :) Help needed with Commons query I have a query for looking for files on commons that have multiple coordinates of the point of view (P1259) statements: SELECT ?file (COUNT(?coord) AS ?count) {
	?file wdt:P1259 ?coord .
} 
GROUP BY ?file 
HAVING ( ?count > 1 ) 
LIMIT 100
 Try it! Unfortunately it is timing out. Is there some way to fix it? I also tried: SELECT DISTINCT ?item  ?statement WHERE {
	?statement wikibase:hasViolationForConstraint wds:P1259-fd02cded-4d91-994a-43c1-2c983a1f0a23 .
	?item ?p ?statement .
}
 Try it! To see if I can query for constraint violations. It does not work and I am not sure how to fix it. --Jarekt (talk) 19:00, 2 February 2021 (UTC) @Jarekt: 1) Note that if multiple truthy statements have the same property and value, there will only be one triple with the wdt: prefix, so the query above wouldn't find all files with multiple P1259 statements even if it didn't timeout. For instance c:File:Castanet le Haut Croix de Mounis Espinouse.JPG with 2 of each statement would never be found by the query. 2) Next, there are p.t. 13,286,112 triples with p:P1259, and 13,262,721 triples with wdt:P1259 in WCQS. The high numbers makes it hard to avoid timeouts. I doubt it is possible to do a \"GROUP BY\" as above with so many statements. A query like this SELECT ?file ?coord1 ?coord2
{
	?file wdt:P1259 ?coord1 , ?coord2 .
    FILTER (?coord1 != ?coord2)
} 
LIMIT 100
 Try it! runs in approx. 45 seconds, while SELECT ?file ?coord1 ?coord2
{
	?file p:P1259 ?coord1 , ?coord2 .
    FILTER (?coord1 != ?coord2)
} 
LIMIT 100
 Try it! runs in 2 seconds. The latter is so much faster because there are many more cases (because of point 1) so much fewer files have to be looked at to find 100 cases. --Dipsacus fullonum (talk) 20:46, 2 February 2021 (UTC) I was today years old when I discovered that ?item wdt:P31 ?thing1, ?thing2 was a thing. --Tagishsimon (talk) 20:56, 2 February 2021 (UTC) Really? That use of comma, called object lists, can be a nice shorthand form, but is never necessary to use. It is no secret though. See for instance wikibooks:SPARQL/Sentences#Comma, Semicolon and Period or Wikidata:SPARQL tutorial#Advanced triple patterns. In the official SPARQL definition it is found in the section https://www.w3.org/TR/sparql11-query/#objLists --Dipsacus fullonum (talk) 21:15, 2 February 2021 (UTC) Much of what I know comes from lurking on this board. Cannot say I've ever spotted the comma being used here. Thx, btw, for a couple of other of your answers on MWAPI and hint:maxParallel 50, both appreciated. And the 'Wikidata items I created' query, which has moved my understanding of wikibase:api \"Generator\" . on /very/ slightly. --Tagishsimon (talk) 22:14, 2 February 2021 (UTC) Dipsacus fullonum that is quite disturbing news as each file is supposed to have a single coordinates of the point of view (P1259) statement, and we seem to have multiple thousands. Thank you for your help identifying the issue. I to have never seen coma in SPARQL query. --Jarekt (talk) 02:43, 3 February 2021 (UTC) Female form of label Hi, in this sample I like to show, in a single colum, the P106 label when P21 = male (Q6581097), or the ca lang of P2521 (if exists) when P21 = female (Q6581072). #female form of label
SELECT ?item ?itemLabel ?gender ?genderLabel ?profession ?professionLabel ?female_form_of_label WHERE {
  ?item wdt:P106 wd:Q1281618;
    wdt:P135 wd:Q34636.
  OPTIONAL { ?item wdt:P21 ?gender. }
  OPTIONAL { ?item wdt:P18 ?image. }
  OPTIONAL { ?item wdt:P19 ?place. }
  OPTIONAL { ?item wdt:P569 ?date. }
  OPTIONAL { ?item wdt:P106 ?profession. }
  OPTIONAL { ?profession wdt:P2521 ?female_form_of_label. }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"ca,[AUTO_LANGUAGE]\". }
}
 Try it! Thanks ! Amadalvarez (talk) 09:04, 3 February 2021 (UTC) @Amadalvarez: You didn't say what to show when P21 is something other than Q6581097 or Q6581072, nor what to show when P2521 doesn't have a value in Catalan. I made it fallback on ?professionLabel in both cases. If you wish to do something else, please say. #female form of label
SELECT ?item ?itemLabel ?gender ?genderLabel ?profession ?professionText WHERE {
  ?item wdt:P106 wd:Q1281618;
    wdt:P135 wd:Q34636.
  OPTIONAL { ?item wdt:P21 ?gender. }
  OPTIONAL { ?item wdt:P18 ?image. }
  OPTIONAL { ?item wdt:P19 ?place. }
  OPTIONAL { ?item wdt:P569 ?date. }
  OPTIONAL
  {
    ?item wdt:P106 ?profession.
    OPTIONAL
    {
      ?profession wdt:P2521 ?female_form_of_label.
      FILTER (LANG(?female_form_of_label) = \"ca\")
    }
    OPTIONAL
    {
      ?profession rdfs:label ?professionLabel.      
      FILTER (LANG(?professionLabel) = \"ca\")
    }
  }
  BIND (IF(?gender IN (wd:Q6581072, wd:Q1052281, wd:Q43445) && BOUND(?female_form_of_label),
           ?female_form_of_label, ?professionLabel) AS ?professionText)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"ca,[AUTO_LANGUAGE]\". }
}
 Try it! --Dipsacus fullonum (talk) 10:48, 3 February 2021 (UTC) @Dipsacus fullonum: It looks nice. Sorry, I forgot part of the requirements. We use to handle female label for \"Q6581072\", \"Q1052281\" or \"Q43445\"; well, talking about profession, female organism (Q43445) seems excessive, but never you know, may be we have a monkey pianist. If there is no female label for ca, professionLabel is good. May you add it?. Thanks a lot, Amadalvarez (talk) 14:22, 3 February 2021 (UTC) @Amadalvarez: I have updated the query above to test for all 3 female values. The only change is in the expression in the BIND( expression AS ?professionText) variable assignment.--Dipsacus fullonum (talk) 07:43, 4 February 2021 (UTC) Oldest male living tennis players who won a Grand Slam singles title While ago I requested a query on oldest living tennis players (limit 110 years) which resulted in: SELECT ?item ?itemLabel ?birth ?genderLabel ?age WHERE {
  ?item wdt:P106 wd:Q10833314 ; wdt:P569 ?birth ; wdt:P21 ?gender .
  MINUS { ?item wdt:P570 [] } .
  BIND(YEAR(now())-YEAR(?birth) as ?age) .
  FILTER ( ?age < 110 )
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?age)
LIMIT 100
 Try it! Can this query be udpated to list the oldest living male tennis players who won a singles title at a Grand Slam event? Thx. --Wolbo (talk) 20:29, 4 February 2021 (UTC) @Wolbo: Clues or examples of how \"won a singles title at a Grand Slam event\" is represented in wikidata would be helpful. We're not subject-matter experts :( --Tagishsimon (talk) 20:36, 4 February 2021 (UTC) Sure, Q102113 = Grand Slam event which has several parts (men's singles, women's singles, men's doubles, etc). Q16893072 = men's singles event. Example: Roger Federer won the men's singles title at the 2018 Australian Open (Q46993124).--Wolbo (talk) 20:52, 4 February 2021 (UTC) @Wolbo: I edited your query above to only include winners of a men's single event in a grand slam. If any person won the women's single and later became a transgender man, they will not be found by the query. SELECT DISTINCT ?item ?itemLabel ?birth ?genderLabel ?age WHERE {
  ?item wdt:P106 wd:Q10833314 ; wdt:P569 ?birth ; wdt:P21 ?gender .
  MINUS { ?item wdt:P570 [] }
  BIND(YEAR(now())-YEAR(?birth) as ?age)
  FILTER ( ?age < 110 )
  ?tournament wdt:P1346 ?item . 
  ?tournament wdt:P2094 wd:Q16893072 . # men's single
  ?tournament wdt:P361 / wdt:P31 / wdt:P361 wd:Q102113 . # part of / instance of / part of Grand Slam
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?age)
LIMIT 100
 Try it! --Dipsacus fullonum (talk) 22:08, 4 February 2021 (UTC) Dipsacus fullonum, thanks! Had a look at the query results and it looks spot on. One day I would like to be able to make these queries myself but I'm not quite there yet.--Wolbo (talk) 22:13, 4 February 2021 (UTC) Dipsacus fullonum, there does seem to be a rounding issue with the age calculation. If I change men's singles (Q16893072) to women's singles (Q16893403), it shows Shirley Fry at age 94 but she is currently 93 (will turn 94 on June 30). Can this be corrected? Thx.--Wolbo (talk) 21:53, 5 February 2021 (UTC) @Wolbo: Here's an approach to fixing that: SELECT DISTINCT ?item ?itemLabel ?birth ?genderLabel ?age WHERE {
  ?item wdt:P106 wd:Q10833314 ; wdt:P569 ?birth ; wdt:P21 ?gender .
  MINUS { ?item wdt:P570 [] }
#  BIND(YEAR(now())-YEAR(?birth) as ?age)
  BIND( YEAR(now()) - YEAR(?birth) - 
              IF(MONTH(now())<MONTH(?birth) || 
                 (MONTH(now())=MONTH(?birth) && DAY(now())<DAY(?birth)),1,0) AS ?age )
  FILTER ( ?age < 110 )
  ?tournament wdt:P1346 ?item . 
  ?tournament wdt:P2094 wd:Q16893403 . # men's single
  ?tournament wdt:P361 / wdt:P31 / wdt:P361 wd:Q102113 . # part of / instance of / part of Grand Slam
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?age)
LIMIT 100
 Try it! --Tagishsimon (talk) 22:38, 5 February 2021 (UTC) Looks like that did the trick. Thanks!.--Wolbo (talk) 23:09, 5 February 2021 (UTC) Here's my EC. I'm a bit concerned there may be a diversity of ways in which \"won a singles title at a Grand Slam event\" is represented; here's the pattern established for the 2018 Australian Open – men's singles (Q46993124) which is part of 2018 Australian Open (Q42557150) which is an instance of 2018 Australian Open (Q42557150) which is part of Grand Slam of tennis (Q102113). If other competitions don't have this part of/instance of/part of path, then their winner will not turn up in the report. This is not an update of your report; there was little in that to be salvaged. SELECT distinct ?person ?personLabel ?age
WHERE 
{
  {                                              # find events and winners
  ?event wdt:P31 wd:Q46190676 .                  # tennis event 
  ?event wdt:P361/wdt:P31/wdt:P361 wd:Q102113 .  # part of grans slam
  ?event wdt:P1346 ?person .                     # winner
  ?event wdt:P2094 wd:Q16893072 .                # competition class - mens singles
  }
UNION
  {                                              # find people who won stuff
  ?person wdt:2522 ?won .                        # we have a winner 
  ?won wdt:P361/wdt:P31/wdt:P361 wd:Q102113 .    # part of grans slam
  ?won wdt:P2094 wd:Q16893072 .                   # competition class - mens singles
  }
  ?person wdt:P569 ?birth .                      #dob
  MINUS { ?person wdt:P570 [] } .                #not dead
  BIND(YEAR(now())-YEAR(?birth) as ?age) .       #calculate age in years
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} order by desc(?age)
 Try it! --Tagishsimon (talk) 22:18, 4 February 2021 (UTC) It doesn't look like the second part of the UNION has any results at all. --Dipsacus fullonum (talk) 22:54, 4 February 2021 (UTC) Tagishsimon, thanks for the effort! The relationship as you describe it is correct apart from your second mention of 2018 Australian Open (Q42557150), which should be Australian Open (Q60874). That pattern should be the same for all four Grand Slams events (Australian Open, French Open, Wimbledon, US Open).The result of your query seems to be identical.--Wolbo (talk) 23:09, 4 February 2021 (UTC) Items used: tennis player (Q10833314)   , men's singles (Q16893072)   , Grand Slam of tennis (Q102113)   Properties used: occupation (P106)   , date of birth (P569)   , winner (P1346)   , point in time (P585)   , competition class (P2094)   , part of (P361)   , instance of (P31)   #Oldest when winning, variation on Dipsacus fullonum's query

SELECT DISTINCT ?item ?itemLabel ?birth ?d ?age 
WHERE
{
  ?item wdt:P106 wd:Q10833314 ; wdt:P569 ?birth  .
  BIND(YEAR(?d)-YEAR(?birth) as ?age)
  ?tournament wdt:P1346 ?item ; wdt:P585 ?d .
  ?tournament wdt:P2094 wd:Q16893072 . # men's single
  ?tournament wdt:P361 / wdt:P31 / wdt:P361 wd:Q102113 . # part of / instance of / part of Grand Slam
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?age)
LIMIT 100 Try it! Interesting .. --- Jura 13:51, 5 February 2021 (UTC) Using Wikipedia category in query I tried using mwapi to get articles from a category on Wikipedia (it's only 176 articles in my example). When I just do that, it works fine, but if I add more restrictions I get a timeout. Is it possible to optimize it in some way?What I tried: SELECT ?item ?itemLabel ?genderLabel WHERE {
  SERVICE wikibase:mwapi {
     bd:serviceParam wikibase:endpoint \"en.wikipedia.org\";
                     wikibase:api \"Generator\";
                     mwapi:generator \"categorymembers\";
                     mwapi:gcmtitle \"Category:Israeli lawyers\";.
     ?item wikibase:apiOutputItem mwapi:item.
  } 
  ?item wdt:P21 ?gender . 
SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,he\". }    
}
 Try it! Ainali (talk) 16:53, 5 February 2021 (UTC)I'm stumped. Couple of queries showing WDQS insists on fetching all items with gender, despite being told to behave. SELECT ?item ?itemLabel ?genderLabel WITH {
SELECT ?item WHERE {
  hint:Query hint:optimizer \"None\".
  SERVICE wikibase:mwapi {
     bd:serviceParam wikibase:endpoint \"en.wikipedia.org\";
                     wikibase:api \"Generator\";
                     mwapi:generator \"categorymembers\";
                     mwapi:gcmtitle \"Category:Israeli lawyers\";
                     mwapi:gcmprop \"ids|title|type\";
                     mwapi:gcmlimit \"max\".
     ?item wikibase:apiOutputItem mwapi:item.
  } } } AS %i
WHERE
{
  INCLUDE %i
  OPTIONAL { ?item wdt:P21 ?gender .} 
#SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,he\". }    
}
 Try it! SELECT ?item ?itemLabel ?genderLabel WHERE {
  hint:Query hint:optimizer \"None\".
  SERVICE wikibase:mwapi {
     bd:serviceParam wikibase:endpoint \"en.wikipedia.org\";
                     wikibase:api \"Generator\";
                     mwapi:generator \"categorymembers\";
                     mwapi:gcmtitle \"Category:Israeli lawyers\";
                     mwapi:gcmprop \"ids|title|type\";
                     mwapi:gcmlimit \"max\".
     ?item wikibase:apiOutputItem mwapi:item.
  } 
 OPTIONAL { ?item wdt:P21 ?gender .} 
#SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,he\". }    
}
 Try it! --Tagishsimon (talk) 17:28, 5 February 2021 (UTC) @Ainali, Tagishsimon: Your queries times out because one category member isn't connected to Wikidata which leaves the variable ?item unbound in that case. Therefore ?item wdt:P21 ?gender will match all persons with a gender statement and give over 6 million results. The category member not in Wikidata is the subcategory en:Category:Lawyers from Haifa, so you could add bd:serviceParam mwapi:gcmnamespace \"0\".
 to only fetch pages from the article namespace. However it would be safest to also add the filter FILTER BOUND (?item)
 because there can also be unconnected articles sometimes. --Dipsacus fullonum (talk) 03:32, 6 February 2021 (UTC) Outstanding. Doffs cap. Thank you. --Tagishsimon (talk) 13:07, 6 February 2021 (UTC) Property usage Hello! Could somebody please help me query the usage of PIM authority ID (P3973)? I have the daily usage data from 2017-05-22 until 2020-04-20 (I downloaded it from somewhere, I can't remember), but I'd really need the data since then. This query from the property's talk page is something I need, but with a longer date interval. I would truly appreciate your help! Bencemac (talk) 09:48, 7 February 2021 (UTC) @Bencemac: The query fetches the 45 newest revisions of Template:Property uses and extract the data for P3973. You can change the query to start at any given time instead by adding another parameter to the MWAPI call, like bd:serviceParam mwapi:rvstart \"2020-12-23T00:00:00Z\". to get revisions starting at that time and then go backwards in time from there. Look at the timestamp for the last result, and use that for the next iteration. --Dipsacus fullonum (talk) 11:32, 7 February 2021 (UTC) @Dipsacus fullonum: Indeed! Many thanks for the quick answer! Bencemac (talk) 14:53, 7 February 2021 (UTC) Find missing articles in language Wikipedia given a list of article names in another language Hi, I am trying to find if the articles exists in the English Wikipedia given a list of article names in Japanese Wikipedia. I've tried with a short list of two items (one article where both EN and JA versions exist and one where EN version does not exist), but this always times out. Am I doing something wrong? Any help is appreciated. SELECT ?item ?lemma WHERE {
  VALUES ?lemma {
    \"君が代\"@ja
    \"国風文化\"@ja
  }
  ?sitelink_ja schema:about ?item;
    schema:isPartOf <https://ja.wikipedia.org/>;
    schema:name ?lemma.
  FILTER(NOT EXISTS {
    ?sitelink_en schema:about ?item;
      schema:isPartOf <https://en.wikipedia.org/>.
  })
}
 Try it! Underbar dk (talk) 12:40, 7 February 2021 (UTC) @Underbar dk: Try replace FILTER NOT EXISTS with MINUS. --Dipsacus fullonum (talk) 13:20, 7 February 2021 (UTC) SELECT ?item ?lemma WHERE {
  VALUES ?lemma {
    \"君が代\"@ja
    \"国風文化\"@ja
  }
  ?sitelink_ja schema:about ?item;
    schema:isPartOf <https://ja.wikipedia.org/>;
    schema:name ?lemma.
  MINUS {
    ?sitelink_en schema:about ?item;
      schema:isPartOf <https://en.wikipedia.org/>.
  }
}
 Try it! --Dipsacus fullonum (talk) 13:21, 7 February 2021 (UTC) Edit a date Hi, is there any way similar to {{#time}} to edit date to a local format ?.Now, to change YMD to DMY, I do BIND (CONCAT(STR(DAY(?date)), \"-\", STR(MONTH(?date)), \"-\", STR(YEAR(?date))) as ?date_edited) . However, it does not runs well when precission is year / month-year, for instance. Thanks, Amadalvarez (talk) 07:24, 7 February 2021 (UTC) @Amadalvarez: There isn't a similar way in SPARQL. You could fetch the dates and process them offline by some program. You can also have different formats depending on the precision by using SPARQL, something like this (no guarantee for correctness - this code is just to show the principle). SELECT ?item ?dob ?dob_precision ?dob_edited
WHERE
{
  ?item wdt:P31 wd:Q5 . # Humans
  ?item wdt:P19 wd:Q1492 . # born in Barcelona
  ?item p:P569 ?dob_statement .
  ?dob_statement a wikibase:BestRank .
  ?dob_statement psv:P569 ?dob_value .
  ?dob_value wikibase:timeValue ?dob .
  ?dob_value wikibase:timePrecision ?dob_precision .
  BIND (COALESCE(
    IF(?dob_precision = 11, CONCAT(STR(DAY(?dob)), \"-\", STR(MONTH(?dob)), \"-\", STR(YEAR(?dob))), 1/0),
    IF(?dob_precision = 10, CONCAT(STR(MONTH(?dob)), \"-\", STR(YEAR(?dob))), 1/0),
    IF(?dob_precision =  9, STR(YEAR(?dob)), 1/0),
    IF(?dob_precision =  8, CONCAT(STR(FLOOR(YEAR(?dob)/10)*10), \"s\"), 1/0),
    IF(?dob_precision =  7, CONCAT(STR(FLOOR((YEAR(?dob)+99)/100)), \" century\"), 1/0),
    IF(?dob_precision =  6, CONCAT(STR(FLOOR((YEAR(?dob)+999)/1000)), \" milleium\"), 1/0),
    \"Unhandled precision\"
    ) AS ?dob_edited)
}
Limit 5000
 Try it! --Dipsacus fullonum (talk) 12:10, 7 February 2021 (UTC) @Dipsacus fullonum: it's really wonderful! Has SPARQL something similar to a function to contain this type of code and reuse it (or call it), instead of writing it every time ?. Imagine I have to do for dob, dod, P2031 and P2032. Do I have to repeat this code for each one? Sorry for my low knowledge of the tool. My experience is in Wiki templates and I tend to look for similarities. Thanks, Amadalvarez (talk) 15:43, 7 February 2021 (UTC) @Amadalvarez: There isn't user defined functions in SPARQL. If you intend to use ListeriaBot, use can use the row_template and header_template parameters in Template:Wikidata list. That will enable you to use MediaWiki templates and lua to format the data as you like. --Dipsacus fullonum (talk) 17:44, 7 February 2021 (UTC) @Dipsacus fullonum: Oh. Bad luck. Actually, I'm working in a help page for listeriabot and preparing a set of example to copy & customize. I try to combine the basic syntax of wikidata list (using directly the Pnnn and only the filter in SPARQL) and the edition of data either in SPARQL code or in row_template. I've been testing where is the best place to set this transformation and, if it's possible, avoid to use row_template in order to simplify it for beginners. Well, now I know better what is easier in the row_templates. Many, many thanks for your help. Amadalvarez (talk) 18:09, 7 February 2021 (UTC) Query all coordinate locations Hi:I am trying to build a query that returns item, itemLabels, and geographic coordinate locations for the entire database. Each time I write a query, I get a time out error. Below is a draft of the query I am trying to use.SELECT ?item ?itemLabel ?coordinate WHERE { ?item wdt:P625 ?coordinate . 
  SERVICE wikibase:label {
   bd:serviceParam wikibase:language \"en\" .
  }
} Thanks so much :) L There are too many results for using SPARQL. If you want the 8 million+ items with geographic coordinates, download the database. either whole or partial. See Wikidata:Database download for details. --Dipsacus fullonum (talk) 12:17, 7 February 2021 (UTC) An alternative would be to query the Mediawiki database for Wikidata: it contains all the coordinates in the geo_tags table. Access to labels is a bit more complicated, though, but documentation is available here. —MisterSynergy (talk) 15:29, 7 February 2021 (UTC) Current US legislators sorted by age and schools in the Philippines named after persons Hello,I'm looking for the following but currently stumped with SPARQL: (1) Senators and Representatives currently part of the 117th United States Congress sorted by age and not seniority (non-voting delegates included) and (2) Schools in the Philippines named after humans/persons. Thanks in advance. -Ianlopez1115 (talk) 15:32, 6 February 2021 (UTC) (1) # Members of 117th United States Congress sorted by age
SELECT ?item ?itemLabel ?positionLabel ?dob
WHERE
{
  ?item p:P39 ?statement .
  ?statement ps:P39 ?position .
  ?statement pq:P2937 wd:Q65089999 . # parliamentary term: 117th United States Congress
  OPTIONAL { ?item wdt:P569 ?dob . }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }
}
ORDER BY ASC(?dob)
 Try it! I suppose something is wrong with the recorded data for Matthew Rosendale (Q6791163). --Dipsacus fullonum (talk) 16:13, 6 February 2021 (UTC) (2) # Schools in the Philippines named after humans/persons
SELECT DISTINCT ?item ?itemLabel ?namedAfter ?namedAfterLabel
WHERE
{
  ?item wdt:P31 / wdt:P279* wd:Q2385804 . # educational institution
  ?item wdt:P17 wd:Q928 . # in the Philippines
  ?item wdt:P138 ?namedAfter .
  ?namedAfter wdt:P31 wd:Q5 . # is human
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }
}
 Try it! --Dipsacus fullonum (talk) 16:24, 6 February 2021 (UTC) @Ianlopez1115: PS. I am not sure non-voting delegates for the US Congress is included in the first query. You need to tell how that is expressed in Wikidata. --Dipsacus fullonum (talk) 16:29, 6 February 2021 (UTC) @Dipsacus fullonum:, thanks for the queries. As for the non-voting delegates, I'll find a way to modify the queries based on #1. -Ianlopez1115 (talk) 13:31, 8 February 2021 (UTC) @Ianlopez1115: It seems that their position is non-voting member of the U.S. House of Representatives (Q5253588) but none is yet recorded for parliamentary term 117th United States Congress (Q65089999). When statements for the term is added to Wikidata, the query should find them as it is. Dipsacus fullonum (talk) 14:28, 8 February 2021 (UTC)-- Hebrew WP subset of Israeli Women in Red For existing Wikidata items with the following characteristics: Instance of (P31) = human (Q5) Sex or gender (P21) = female (Q6581072) Country of citizenship (P27) = Israel (Q801) ...which DO NOT have a page in the Hebrew Wikipedia (Q199913)? Are these sufficient specifics for a query? -- Deborahjay (talk) 12:24, 8 February 2021 (UTC) @Deborahjay: Certainly. SELECT ?item ?itemLabel
{
  ?item wdt:P31 wd:Q5 .
  ?item wdt:P21 wd:Q6581072 .
  ?item wdt:P27 wd:Q801 .
  MINUS
  {
    ?article schema:about ?item .
    ?article schema:isPartOf <https://he.wikipedia.org/> .
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,he\" . }
}
 Try it! --Dipsacus fullonum (talk) 14:34, 8 February 2021 (UTC) Query for games with Steam App IDs that have platform qualifiers but no corresponding platform I'd like to get a query of all video games with a Steam application ID (P1733) value and platform (P400) qualifier(s) (the only valid platform qualifiers for it are Microsoft Windows (Q1406), macOS (Q14116), and Linux (Q388)), but no corresponding top-level platform (P400) value. I already know how to check for video games that have a Steam App ID and no _platform_, but what I want is a query that can find any games where the Steam App ID has a platform qualifier of macOS, but no macOS value for platform (P400). This should be able to find quite a few games that are missing specific platforms on Wikidata.For example, Don't Forget Our Esports Dream (Q98013640) if it didn't have the platform (P400) property values.Thanks for the help -Nicereddy (talk) 04:41, 8 February 2021 (UTC) @Nicereddy: this, I think. ?value is the value found in the Steam qualifier. SELECT ?item ?itemLabel ?value ?valueLabel
WHERE 
{
  ?item p:P1733 ?stat .
  ?stat pq:P400 ?value .  
  filter not exists {?item wdt:P400 ?value.}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! --Tagishsimon (talk) 05:31, 8 February 2021 (UTC) There's also this - has a Steam ID, has a main P400, lacks the P400 value as a qualifier of the Steam ID. SELECT ?item ?itemLabel ?value ?valueLabel
WHERE 
{
  ?item wdt:P400 ?value.
  ?item p:P1733 ?stat .
  filter not exists { ?stat pq:P400 ?value .}  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! --Tagishsimon (talk) 05:34, 8 February 2021 (UTC) I fixed a typo in the first query (?pqP400 instead of ?pq400). --Dipsacus fullonum (talk) 06:00, 8 February 2021 (UTC) t/y. @Nicereddy:, I found another variable mistake which I fixed. Are you good with fixing thes items with a tool? --Tagishsimon (talk) 15:17, 8 February 2021 (UTC) @Tagishsimon: oh wow, that's a lot more than I had assumed there would be. Thanks! I run a bot that I write in Ruby, so I can fix these myself relatively easily some time in the next few weeks. If you're comfortable using QuickStatements or something and want to do it yourself, be my guest :) Nicereddy (talk) 00:07, 9 February 2021 (UTC) querying all the objects having a qualified property with a subject i am looking to find the relations that exist between an object and a subject. i would like to capture the objects that have a qualified property as well. I do not know in advance what the properties will be.For example I want to find the relations between Barack Obama (Q76) and Chicago (Q1297). They are properties P937 and P551 on the Wikidata page for Barack Obama. However, the P551 relation is qualified with a start time. When I run a Q76 ?r Q1297 SPARQL query, I only get the result for P937. How can I construct a query that is able to return P937 as well? thank you so much in advance. This sort of thing, which employs triples that describe the relationship between Properties and their Predicates, documented here. SELECT ?property ?propertyLabel ?propertyQualifier ?propertyQualifierLabel ?qualifier_value
WHERE 
{
  wd:Q76 ?propertyStatement ?statement.
  ?property wikibase:claim ?propertyStatement.             # find the Property for the Predicate ?propertyStatement and 
                                                           # constrain ?propertyStatement to the p: class of Predicates
  ?property wikibase:statementProperty ?statementProperty. # assign the ps: Predicate for the Property to ?statementProperty
  ?statement ?statementProperty wd:Q1297.                  # now apply ?statementProperty exactly as if it was ps:Pnnn
  OPTIONAL {?statement ?qualifier ?qualifier_value.        # find another triple hanging off the ?statement 
  ?propertyQualifier wikibase:qualifier ?qualifier.}       # constrain the Predicate of this triple to be of the class pq:
                                                           # and hence ?propertyQualifier is the Property for this Qualifier
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! --Tagishsimon (talk) 00:53, 9 February 2021 (UTC) Thank you so much for this as well as the reference. This was really helpful, especially the comments you added. Thank you so much! Return all subcategories from a category I wanted a query that would return all subcategories of a given category in the tree. example. all pages contained within computation It isn't exactly a tree but this query lists the subcategory hierarchy of en:Category:Ducks in English Wikipedia: SELECT *
{
  SERVICE <https://query.wikidata.org/bigdata/namespace/categories/sparql>
  {
    SELECT ?level1 ?level2 ?level3 ?level4 ?level5 ?level6 ?level7 ?level8
    WHERE
    {
      VALUES ?level1 { <https://en.wikipedia.org/wiki/Category:Ducks> }
      ?level2 mediawiki:isInCategory ?level1 .
      OPTIONAL
      {
        ?level3 mediawiki:isInCategory ?level2 .
        OPTIONAL
        {
          ?level4 mediawiki:isInCategory ?level3 .
          OPTIONAL
          {
            ?level5 mediawiki:isInCategory ?level4 .
            OPTIONAL
            {
              ?level6 mediawiki:isInCategory ?level5 .
              OPTIONAL
              {
                ?level7 mediawiki:isInCategory ?level6 .
                OPTIONAL
                {
                  ?level8 mediawiki:isInCategory ?level7 .
                }
              }
            }
          }
        }
      }
    }
  }
}
 Try it! You can also get the subcategories in a list with depths using a GAS program: SELECT ?category ?depth
{
  SERVICE <https://query.wikidata.org/bigdata/namespace/categories/sparql>
  {
    SELECT ?category ?depth
    WHERE
    {
      SERVICE gas:service
      {
        gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.BFS\" .
        gas:program gas:linkType mediawiki:isInCategory .
        gas:program gas:traversalDirection \"Reverse\" .
        gas:program gas:in <https://en.wikipedia.org/wiki/Category:Ducks> .
        gas:program gas:out ?category .
        gas:program gas:out1 ?depth .
        gas:program gas:maxIterations 8 .
      }
    }
  }
}
ORDER BY ASC(?depth)
 Try it! --Dipsacus fullonum (talk) 04:49, 6 February 2021 (UTC) Why both don't work for Wiktionaries? --Infovarius (talk) 20:23, 8 February 2021 (UTC) @Infovarius: They do work for any public WikiMedia wiki (except labswiki and labtestwiki – whatever these are? – according to mw:Wikidata Query Service/Categories). Just insert the IRI for any Wiktionary category instead of <https://en.wikipedia.org/wiki/Category:Ducks>. --Dipsacus fullonum (talk) 04:39, 9 February 2021 (UTC) Interwiki import Hey! Please tell me how to transfer articles to Wikidat automatically? I mean such, The article has interwiki be:Карбатоўка. Is there such a script / gadget? --Takhirgeran Umar (talk) 15:03, 8 February 2021 (UTC) @Takhirgeran Umar: Perhaps Petscan is the most accessible tool for this. Try, for instance, https://petscan.wmflabs.org/?psid=18398105 ... But adding article sitelinks to existing items tends to be a manual process - Petscan indicates wikidata has an item with a label or alias matching the article title string by the lack of a tick in the first column. There's no magic wand; one either searches manually or uses the Duplicity tool which is linked by the 'check wikidata' label. Finally, best if you are logged into Petscan using Oauth. There should be a log in link perhaps at the top of the results (I'm logged in & there is no logout so I cannot see). In the Petscan query, btw, the settings are the the obvious ones in the Categories tab and 'Only pages without item' checked in the Wikidata tab. hth. --Tagishsimon (talk) 15:25, 8 February 2021 (UTC) I sitelinked the article you pointed to in wikidata, so now you only have ~19,500 articles left to link. :) --Tagishsimon (talk) 15:29, 8 February 2021 (UTC) Thanks! As I understand it, the tool does not link with an already existing element. Doesn't look for interwiki in articles. --Takhirgeran Umar (talk) 18:47, 8 February 2021 (UTC) Correct. Does not look at interwiki links in the articles. --Tagishsimon (talk) 19:12, 8 February 2021 (UTC) @Takhirgeran Umar: Interwikibots will look for existing interwikis in articles and move them to Wikidata if there are no conflicts. cewiki is in the list of wikis that accept global bots, so if no bot currently is active on cewiki, you can invite any global bot operator to do the job. --Dipsacus fullonum (talk) 04:15, 9 February 2021 (UTC) Items with published in (P1433), but without a page(s) (P304) qualifier As in the title, I'm looking for items that were published in a specific item (in this case, P1433 = A Compendium of Irish Biography (Q19020593)), but do not have a page(s) (P304) qualifier on that statement (they can have other qualifiers, so I can't just do this: """@en;
  dcterms:isPartOf <https://www.wikidata.org//wiki/Wikidata:Request_a_query/Archive/2021/02>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:wikidata_prefixes;
  schema:target <https://query.wikidata.org/sparql/> .
