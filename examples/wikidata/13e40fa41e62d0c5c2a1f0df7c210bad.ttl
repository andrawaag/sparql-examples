@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-13e40fa41e62d0c5c2a1f0df7c210bad> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  rdfs:comment """Contents 1 Queries 1.1 Query for URLs in References 1.2 Queries for Obtaining Q-IDs 1.3 Query for seeing recent revisions to an item 1.4 Number of statements by property for things (ex. albums) 1.5 Query for common properties, their counts, and examples based on an identifier 1.6 Find statements based on a reference 1.7 Any statements or qualifiers relating to a specific point in time 1.8 Any statements or qualifiers relating to a specific point in time (simplified) 1.9 List of articles about Grace Hopper from all Wikipedias, ordered by descending size of the article in that language Queries [edit] A list of prefixes the Query service uses Query for URLs in References [edit] #title:Find a reference from a specific URL
SELECT ?statement ?subject ?subjectLabel ?property ?propertyLabel ?object ?objectLabel ?refURL WITH
{
  SELECT DISTINCT ?subject WHERE {
    {
      SERVICE wikibase:mwapi {
        bd:serviceParam wikibase:endpoint \"www.wikidata.org\"; wikibase:api \"Generator\"; mwapi:generator \"exturlusage\"; mwapi:geulimit \"500\"; mwapi:geuquery \"digitalcollections.nypl.org\"; mwapi:geuprotocol \"http\"; mwapi:geunamespace \"0\" .
        ?title wikibase:apiOutput mwapi:title.
      }
    } UNION {
      SERVICE wikibase:mwapi {
        bd:serviceParam wikibase:endpoint \"www.wikidata.org\"; wikibase:api \"Generator\"; mwapi:generator \"exturlusage\"; mwapi:geulimit \"500\"; mwapi:geuquery \"digitalcollections.nypl.org\"; mwapi:geuprotocol \"https\"; mwapi:geunamespace \"0\" .
        ?title wikibase:apiOutput mwapi:title.
      }
    }
    BIND(IRI(CONCAT(STR(wd:), ?title)) AS ?subject)
  }
} AS %items {
  INCLUDE %items .
  
  hint:Query hint:optimizer \"None\".
  
  ?subject ?p ?statement .
  ?statement prov:wasDerivedFrom/pr:P854 ?refURL .
  FILTER (CONTAINS(str(?refURL), 'digitalcollections.nypl.org')) .    # update orange/brown text to whatever URL string you want...keep the single 'quotes' also update URLs lines 7 and 12
  
  ?property wikibase:claim ?p .
  ?property wikibase:statementProperty ?ps .
  ?statement ?ps ?object .
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
 Find a reference from a specific URL Queries for Obtaining Q-IDs [edit] The following query uses these:"""@en;
  dcterms:isPartOf <https://www.wikidata.org//wiki/User:Will_(Wiki_Ed)/Queries>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d864130-wikidata_prefixes;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX bd: <http://www.bigdata.com/rdf#>
#title:Q-ID from a Wikipedia article ID
SELECT ?pageid ?qid ?itemLabel {
  VALUES ?wiki { \"en.wikipedia.org\" }
  VALUES ?pageid { \"53658238\" }
  SERVICE wikibase:mwapi {
    bd:serviceParam wikibase:api \"Generator\" .
    bd:serviceParam wikibase:endpoint ?wiki .
    bd:serviceParam mwapi:generator \"revisions\" .
    bd:serviceParam mwapi:pageids ?pageid .
    ?item wikibase:apiOutputItem mwapi:item .}
  FILTER(BOUND(?item))
  BIND(SUBSTR(STR(?item), 32) AS ?qid)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""" .
