@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-3e419ff8d712396a46dc1a124a8c6332> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  rdfs:comment """Contents 1 SPARQL 2 SPARQL2 3 link 4 link embed 5 link with source 6 link embed with source 7 query (in <syntaxhighlight>) 8 url 9 url embed 10 listeria SPARQL [edit] # people who won an Emmy, Grammy, Oscar, and Tony Award (“EGOT”)
# (may include non-competitive awards)
SELECT ?item ?itemLabel WITH {
  SELECT DISTINCT ?item WHERE {
    ?item wdt:P31 wd:Q5;
          p:P166/ps:P166/(wdt:P31|wdt:P279)* wd:Q123737, wd:Q41254, wd:Q19020, wd:Q191874.
  }
} AS %results WHERE {
  INCLUDE %results.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! SPARQL2 [edit] The following query uses these:Items: human (Q5)   , Emmy Award (Q123737)   , Grammy Awards (Q41254)   , Academy Awards (Q19020)   , Tony Awards (Q191874)   Properties: instance of (P31)   , subclass of (P279)   , award received (P166)   # people who won an Emmy, Grammy, Oscar, and Tony Award (“EGOT”)
# (may include non-competitive awards)
SELECT ?item ?itemLabel WITH {
  SELECT DISTINCT ?item WHERE {
    ?item wdt:P31 wd:Q5;
          p:P166/ps:P166/(wdt:P31|wdt:P279)* wd:Q123737, wd:Q41254, wd:Q19020, wd:Q191874.
  }
} AS %results WHERE {
  INCLUDE %results.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! link [edit] query page sandbox link embed [edit] query page sandbox link with source [edit] query page sandbox (source) link embed with source [edit] query page sandbox (source) query (in <syntaxhighlight>) [edit] """@en,
    "Properties: instance of (P31)   , subclass of (P279)   , award received (P166)   "@en;
  dcterms:isPartOf <https://www.wikidata.org//wiki/Template_talk:Query_page/sandbox>,
    <https://www.wikidata.org//wiki/Template:Query_page/sandbox>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d815716-wikidata_prefixes, _:genid-4e694113159d4e3db4a1a913894a81d815716-2FB6B8C525618679231FFFB57A670659,
    _:genid-4e694113159d4e3db4a1a913894a81d815716-00FC51E25842F0A1F8F9AA29C462094B, _:genid-4e694113159d4e3db4a1a913894a81d815716-920B28AD0ABFED482891BECEC142AFC1;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX ps: <http://www.wikidata.org/prop/statement/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
# people who won an Emmy, Grammy, Oscar, and Tony Award (“EGOT”)
# (may include non-competitive awards)
SELECT ?item ?itemLabel  WHERE {
  {
  SELECT DISTINCT ?item WHERE {
    ?item wdt:P31 wd:Q5;
          p:P166/ps:P166/(wdt:P31|wdt:P279)* wd:Q123737, wd:Q41254, wd:Q19020, wd:Q191874.
  }
}.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""";
  <http://example.org/bigdata_select> """# people who won an Emmy, Grammy, Oscar, and Tony Award (“EGOT”)
# (may include non-competitive awards)
SELECT ?item ?itemLabel WITH {
  SELECT DISTINCT ?item WHERE {
    ?item wdt:P31 wd:Q5;
          p:P166/ps:P166/(wdt:P31|wdt:P279)* wd:Q123737, wd:Q41254, wd:Q19020, wd:Q191874.
  }
} AS %results WHERE {
  INCLUDE %results.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""" .
