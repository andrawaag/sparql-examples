@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-634f1cfae94a2d82ec67f6bd64b6e11e> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  rdfs:comment """Other languages: English Nederlands Türkçe español français svenska українська հայերեն 中文 日本語 Contents 1 Showcase Queries 1.1 Grootste steden met vrouwelijke burgemeester 1.2 Lijst van landen op volgorde naar het aantal steden met een vrouwelijke burgemeester 1.3 Populaire achternamen bij mensen 1.4 Voornamen met de meeste variaties 1.5 Populaire achternamen bij fictieve personages 1.6 Vrouwen met de meeste sitelinks en geen afbeelding geboren in 1921 of later 1.7 Wie is er vandaag jarig? 1.8 John en Sarah Connor vinden 1.9 Gegevens van Douglas Adams 1.10 Gegevens van Douglas Adams (gewijzigde versie) 1.11 Gegevens van Barbara Harris - Per item gegroepeerd 1.12 Mensen die op meerdere plaatsen zijn begraven 1.13 All oldest living US ex-presidents in chronological order 1.14 Personen en instellingen die op een of andere manier verband houden met de Russische politiek 2 Geavanceerde queries 2.1 Bubbel grafieken 2.1.1 Algemene rangschikking van doodsoorzaken 2.1.2 Tweede Wereldoorlogsgevechten 2.1.3 De top 10 zwaarste mensen 2.1.4 Waarden van uses (P2283) in wetenschappelijke artikelen 2.2 Tijdlijn 2.2.1 Tijdlijn van ruimtesondes 2.2.2 Tijdlijn van composities van Wolfgang Amadeus Mozart 2.3 Dimensies 2.3.1 De afmetingen van de elementen 2.4 Grafiek 2.4.1 Kinderen van Genghis Khan 2.4.2 Vuurwapenpatronen en waarop ze zijn gebaseerd 2.4.3 Muziekgenres 2.4.4 Groepen personages in het Marvel-universum 2.5 Lijngrafiek 2.5.1 Gemiddeld aantal kinderen per jaar 2.5.2 Bevolking van landen die een grens met Duitsland delen 2.5.3 Bevolking van landen die een grens met Kameroen delen 2.5.4 Aantal boeken per jaar en genre 2.5.5 Aantal bands per jaar en genre 2.6 Staafdiagram 2.6.1 Oorlogen per jaar per land de afgelopen 80 jaar 2.6.2 Oorlogen per jaar per continent en land de afgelopen 80 jaar (animatie) 2.6.3 Jaarlijkse bevolking naar land 2.6.4 Gebouwde elektriciteitscentrales per jaar per land 2.6.5 Staafdiagram met het aantal schilderijen die Piet Mondriaan per jaar heeft geproduceerd 2.6.6 Staafdiagram met verhouding van mannelijke/vrouwelijke kunstenaars voor openbare kunst in de stad Nijmegen, Nederland 2.7 Gebiedgrafiek 2.7.1 De sterfte per jaar aan kanker en het type kanker 2.8 Boom 2.8.1 Continenten, landen, regio's en hoofdsteden 2.8.2 Weense componisten en hun composities per tonaliteit 2.9 Boom kaart 2.9.1 Populaire tv-serie (in boomweergave) 2.9.2 Bekende personen in de categorieën oog- en haarkleur 2.10 Scatter grafiek 2.10.1 Aantal films per jaar en genre 2.11 Kalenders 2.11.1 Kalender met de geboortedatums van vrouwen die aan de Universiteit van Oxford studeerden 2.12 Voorbeelden met coördinaten om kaarten te illustreren 2.12.1 Items in de buurt met gebruikerslocatie 2.12.2 Locaties van nationale parken 2.12.3 Luchthavens binnen 100 km van Berlijn 2.12.4 Luchthavens in België 2.12.5 Internationale luchthavens die vernoemd zijn naar vrouwen 2.12.6 Scholen tussen San Jose, CA en Sacramento, CA 2.12.7 Grote steden, gegroepeerd in kaartlagen op bevolkingsomvang 2.12.8 Plaatsen met gratis wifi 2.12.9 Basiskaart van de U1-treinstations in Berlijn 2.12.10 Geavanceerde kaart van Stockholm Metro (Q272926) 2.12.11 Locaties van universiteiten in Kameroen 2.12.12 Verdeling van de namen van Duitse nederzettingen die eindigen met \"-ow\" of \"-itz\" 2.12.13 Locaties van elektriciteitscentrales 2.12.14 Locaties van stenen boogbruggen 2.12.15 Locaties van aquaducten 2.12.16 Locaties van archeologische bezienswaardigheden, met afbeeldingen 2.12.17 Locaties van kastelen die ook een archeologische bezienswaardigheid zijn 2.12.18 Locaties van gevechten 2.12.19 Plaatsen van aanbidding 2.12.20 Alle musea (inclusief de subklasse van museum) in Washington, DC met coördinaten 2.12.21 Kaart van musea in Nederland met een kleur die aangeeft of ze de Museumkaart (Q2237462) aanvaarden 2.12.22 Alle skigebieden met coördinaten 2.12.23 Vuurtorens in Noorwegen 2.12.24 De mooiste dorpen van Frankrijk 2.12.25 Locaties in Fiji 2.12.26 Kaarten van rampen, gecodeerd volgens het type ramp 2.12.27 Monumenten en andere erfgoedstukken op 1 km rond de locatie van de gebruiker 2.12.28 Kaart van kranten in de Verenigde Staten door de aanwezigheid van de Infobox krant in hun Engels Wikipedia artikel 2.12.29 Lijst van alle meren in Kameroen 2.13 Listeria 2.13.1 Vrouwen geboren in Wales zonder artikel in het Wels voor Listeria 2.13.2 Mensen die in Occitanië geboren zijn voor Listeria 2.13.3 Mensen die in Schotland geboren zijn voor Listeria 2.14 Verzamelen en verspreiden 2.14.1 Kinderen van Genghis Khan 2.15 Monsterneming 2.15.1 Wetenschappelijke artikelen zonder beschrijving 2.16 Mediawiki API 2.16.1 Filter labels met behulp van EntitySearch van service mwapi om zoeken op volledige tekst te leveren 2.16.2 Het gebruik van mwapi om een query te doen op artikelen in een Wikipedia-categorie 2.16.3 Verklaringen vinden met verwijzingen met externe links naar wipo.int 2.16.4 Metadata vinden zoals kunstenaar en licentie voor een afbeelding 2.16.5 Het verkrijgen van aantallen bekeken pagina's voor alle artikelen in een categorie 2.17 Federatie 2.17.1 Verkrijg OpenStreetMap-eigenschappen op het hoogste niveau van het hoofdgebouw van de Universiteit van Helsinki 2.17.2 Informatie ophalen van een Europeana item 2.17.3 Delen van hernieuwbare energie in elektriciteit 2.17.4 OpenStreetMap-nodes ophalen met label inarisami in Wikipedia maar zonder label inarisami in OSM 3 Queries die nuttig zijn voor externe services 3.1 De hoogst gerangschikte eigenschappen en waarden van een bepaald item Showcase Queries Deze queries tonen de kracht en functionaliteit van SPARQL en WDQS GUI. Grootste steden met vrouwelijke burgemeester #added before 2016-10
#TEMPLATE={\"template\":\"Largest ?c with ?sex head of government\",\"variables\":{\"?sex\":{\"query\":\" SELECT ?id WHERE { ?id wdt:P31 wd:Q48264 .  } \"},\"?c\":{\"query\":\"SELECT DISTINCT ?id WHERE {  ?c wdt:P31 ?id.  ?c p:P6 ?mayor. }\"} } }
SELECT DISTINCT ?city ?cityLabel ?mayor ?mayorLabel
WHERE
{
  BIND(wd:Q6581072 AS ?sex)
  BIND(wd:Q515 AS ?c)

	?city wdt:P31/wdt:P279* ?c .  # find instances of subclasses of city
	?city p:P6 ?statement .            # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .          # ... that has the value ?mayor
	?mayor wdt:P21 ?sex .       # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	
	# Now select the population value of the ?city
	# (wdt: properties use only statements of \"preferred\" rank if any, usually meaning \"current population\")
	?city wdt:P1082 ?population .
	# Optionally, find English labels for city and mayor:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
	}
}
ORDER BY DESC(?population)
LIMIT 10
 Try it! Lijst van landen op volgorde naar het aantal steden met een vrouwelijke burgemeester #added before 2016-10
SELECT ?country ?countryLabel (count(*) AS ?count)
WHERE
{
	?city wdt:P31/wdt:P279* wd:Q515 . # find instances of subclasses of city
	?city p:P6 ?statement .           # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .         # ... that has the value ?mayor
	?mayor wdt:P21 wd:Q6581072 .      # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	?city wdt:P17 ?country .          # Also find the country of the city
 	
	# If available, get the \"ru\" label of the country, use \"en\" as fallback:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"ru,en\" .
	}
}
GROUP BY ?country ?countryLabel
ORDER BY DESC(?count)
LIMIT 100
 Try it! Populaire achternamen bij mensen #defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?human) AS ?count) WHERE {
    # ?human wdt:P31 wd:Q5.
      ?human wdt:P734 ?surname.
    }
    GROUP BY ?surname ORDER BY DESC(?count) LIMIT 100
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} 
ORDER BY DESC(?count)
 Try it! Voornamen met de meeste variaties #added before 2016-10

SELECT ?name ?nameLabel (COUNT(?otherName) AS ?count)
WHERE
{
  ?name wdt:P31 wd:Q202444;
        wdt:P460 ?otherName.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?name ?nameLabel
ORDER BY DESC(?count)
LIMIT 10
 Try it! Populaire achternamen bij fictieve personages #added before 2016-10

#defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?person) AS ?count) WHERE {
      ?person (wdt:P31/wdt:P279*) wd:Q95074.
      ?person wdt:P734 ?surname.
    }
    GROUP BY ?surname
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?count)
LIMIT 100
 Try it! Vrouwen met de meeste sitelinks en geen afbeelding geboren in 1921 of later SELECT ?s ?desc ?linkcount
WHERE
{
  ?s wdt:P31 wd:Q5 ;   # human
     wdt:P21 wd:Q6581072 ;  # gender: female
     wdt:P569 ?born .
  FILTER (?born >= \"1921-01-01T00:00:00Z\"^^xsd:dateTime) .
  ?s wikibase:sitelinks ?linkcount .
  MINUS {
    ?s wdt:P18 []  # exclude if there is an image
  }
?s rdfs:label ?desc FILTER(lang(?desc)=\"en\").
}
GROUP BY ?s ?desc ?linkcount
ORDER BY DESC(?linkcount)
LIMIT 50
 Try it! Wie is er vandaag jarig? #Whose birthday is today?
SELECT ?entity ?entityLabel ?entityDescription (YEAR(?date) as ?year)
WHERE {
    BIND(MONTH(NOW()) AS ?nowMonth)
    BIND(DAY(NOW()) AS ?nowDay)
    ?entity wdt:P569 ?date .
    FILTER (MONTH(?date) = ?nowMonth && DAY(?date) = ?nowDay)

SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }   
}
LIMIT 20
 Try it! John en Sarah Connor vinden #added before 2016-10
 SELECT * WHERE {
  ?p wdt:P1080 wd:Q620588 . # from fictional universe: Terminator
  ?p rdfs:label ?pl .
  FILTER (lang(?pl) = \"en\")
  ?p wdt:P25 ?m .  # ?m is mother of ?p
  ?m rdfs:label ?ml .
  FILTER (lang(?ml) = \"en\")
}
 Try it! Gegevens van Douglas Adams #added before 2016-10

PREFIX entity: <http://www.wikidata.org/entity/>
#partial results

SELECT ?propUrl ?propLabel ?valUrl ?valLabel ?picture
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"identity\"@en AS ?propLabel ) .
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel
	}
	
  	?valUrl rdfs:label ?valLabel
	FILTER (LANG(?valLabel) = 'en') .
	OPTIONAL{ ?valUrl wdt:P18 ?picture .}
	FILTER (lang(?propLabel) = 'en' )
}
ORDER BY ?propUrl ?valUrl
LIMIT 200
 Try it! Gegevens van Douglas Adams (gewijzigde versie) PREFIX entity: <http://www.wikidata.org/entity/>

#  In addition to the original query this one comes with some advantages:
#  - You will get only literals as results, (even if the values are stored as IRI in wikibase)
#  - That means you will also get properties as birth date, alphanumeric identifier and so on.
#  - The list is ordered numerically by property number. (So P19 comes before P100) 
#  - All label, altLabel and description in a given Language are included.
#  You may open a separate column ?valUrl if you need also the IRI
#
#  Please advise, if there is an option to put the Q-Number  and/or the Language 
#  code into a runtime variable. 

SELECT ?propNumber ?propLabel ?val
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"Name\"@de AS ?propLabel ) .
       entity:Q42 rdfs:label ?val .
      
        FILTER (LANG(?val) = \"de\") 
	}
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"AltLabel\"@de AS ?propLabel ) .
        optional{entity:Q42 skos:altLabel ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"Beschreibung\"@de AS ?propLabel ) .
        optional{entity:Q42 schema:description ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
   	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' )
        filter  isliteral(?valUrl) 
        BIND(?valUrl AS ?val)
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' ) 
        filter  isIRI(?valUrl) 
        ?valUrl rdfs:label ?valLabel 
		FILTER (LANG(?valLabel) = \"de\") 
         BIND(CONCAT(?valLabel) AS ?val)
	}
        BIND( SUBSTR(str(?propUrl),38, 250) AS ?propNumber)
}
ORDER BY xsd:integer(?propNumber)
 Try it! Gegevens van Barbara Harris - Per item gegroepeerd # This query collects data related to entities on Barbara Harris. 
# It demonstrates collecting individual attributes and concatenating them for easier post processing. 

SELECT 
  ?item
(SAMPLE(?itemLabel) AS ?itemLabel) 
(SAMPLE(?itemDescription) AS ?itemDescription) 
  (SAMPLE(?pic) AS ?pic) 
(SAMPLE(?date_of_birth) AS ?date_of_birth) 
(GROUP_CONCAT(DISTINCT ?country_of_citizenship; SEPARATOR=\", \") AS ?country_of_citizenships)
(GROUP_CONCAT(DISTINCT ?country_of_citizenshipLabel; SEPARATOR=\", \") AS ?country_of_citizenshipLabels)

(GROUP_CONCAT(DISTINCT ?occupation; SEPARATOR=\", \") AS ?occupations)
(GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR=\", \") AS ?occupationLabels)

(GROUP_CONCAT(DISTINCT ?country; SEPARATOR=\", \") AS ?countries)
(GROUP_CONCAT(DISTINCT ?countryLabel; SEPARATOR=\", \") AS ?countryLabels)


WHERE {
  VALUES ?item {
    wd:Q269809
    wd:Q274590
    wd:Q24576851
    wd:Q807461
    wd:Q4858963
    wd:Q27954833
    wd:Q4859015
    wd:Q826930
  }
  OPTIONAL { ?item wdt:P18 ?pic. }
  OPTIONAL { ?item wdt:P27 ?country_of_citizenship. }
  OPTIONAL { ?item wdt:P106 ?occupation. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  OPTIONAL { ?item wdt:P31 ?instance_of. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
    ?item rdfs:label ?itemLabel.
    ?item rdfs:description ?itemDescription.
    ?country_of_citizenship rdfs:label ?country_of_citizenshipLabel.
    ?occupation rdfs:label ?occupationLabel.
    ?country rdfs:label ?countryLabel.
  }
}
GROUP BY ?item
 Try it! Mensen die op meerdere plaatsen zijn begraven # This query collects burial places of individuals, and sorts them in decreasing order
SELECT ?human (COUNT(?place) AS ?count) WHERE {
  ?human wdt:P31 wd:Q5.
  ?human wdt:P119 ?place.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}
GROUP BY ?human 
ORDER BY DESC(?count)
 Try it! All oldest living US ex-presidents in chronological order # Added 2020-07
# All persons who have been the oldest living US ex-president with dates in chronological order
SELECT DISTINCT ?date ?president ?presidentLabel
WITH
{
  # Persons who is/were president of USA
  SELECT ?president ?presidentLabel ?president_enddate ?president_birthdate ?president_deathdate
  WHERE
  {
    ?president wdt:P31 wd:Q5.
    ?president p:P39 ?president_statement.
    ?president_statement ps:P39 wd:Q11696.
    ?president_statement pq:P582 ?president_enddate.
    ?president wdt:P569 ?president_birthdate.
    OPTIONAL { ?president wdt:P570 ?president_deathdate. }
    ?president rdfs:label ?presidentLabel.
    FILTER (LANG(?presidentLabel) = \"en\")
  }
} AS %presidents
WITH
{
  # Dates where who is oldest living expresident can change
  SELECT DISTINCT ?date
  WHERE
  {
    {
      INCLUDE %presidents
      BIND(?president_enddate + \"P1D\"^^xsd:duration AS ?date)
    }
    UNION
    {
      INCLUDE %presidents
      BIND(?president_deathdate + \"P1D\"^^xsd:duration AS ?date)
    }
  }
} AS %dates
WITH
{
  # Find the age for all living expresidents for each value of ?date
  SELECT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    INCLUDE %presidents
    FILTER (?president_enddate < ?date) # Must have become expresident
    FILTER IF(BOUND(?president_deathdate), ?president_deathdate >= ?date, true) # Must still be living
    BIND (?date - ?president_birthdate AS ?age)
  }
} AS %ages
WITH
{
  # Find the oldest age for a living expresident for each value of ?date
  SELECT ?date (MAX(?age) AS ?oldest)
  WHERE
  {
    INCLUDE %ages
  }
  GROUP BY ?date
} AS %oldest
WITH
{
  SELECT DISTINCT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    OPTIONAL
    {
      INCLUDE %ages
      INCLUDE %oldest
      FILTER (?age = ?oldest)
    }
  }
} AS %result
WHERE
{
  # A result is a change from the previous date if ?president's presidency ended the day before ?date,
  # or if an older expresident died the day before ?date. Filter out results that don't fulfill this.
  INCLUDE %result
  BIND (?date - \"P1D\"^^xsd:duration AS ?day_before)
  FILTER
  (
    ! BOUND(?president)||
    EXISTS
    {
      ?president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?day_before.
    } ||
    EXISTS
    {
      ?other_president wdt:P31 wd:Q5.
      ?other_president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?other_president_end.
      ?other_president wdt:P569 ?other_president_birthdate.
      ?other_president wdt:P570 ?day_before.
      FILTER (?other_president_birthdate < ?president_birthdate) # Other president is oldest
      FILTER (?other_president_end < ?day_before) # other president died as expresident
    }
  )
}
ORDER BY ?date
 Try it! Personen en instellingen die op een of andere manier verband houden met de Russische politiek # Added 2022-03
# people and institutions that have the affiliation attribute assigned to Russia 
select ?item ?itemLabel ?itemDescription where { ?item wdt:P1416 wd:Q159. SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } } limit 100
 Try it!  Geavanceerde queries Bubbel grafieken Algemene rangschikking van doodsoorzaken #defaultView:BubbleChart
#TEMPLATE={\"template\":\"Overall causes of death ranking of ?thing \",\"variables\":{\"?thing\": {\"query\":\"SELECT ?id  (COUNT(?id) AS ?count) WHERE {  ?sub wdt:P509 ?y.  ?sub wdt:P31 ?id. } GROUP BY ?id \"} } }
SELECT ?cid ?cause (COUNT(*) AS ?count) WHERE {
  BIND(wd:Q5 AS ?thing)
  ?pid wdt:P31 ?thing;
      wdt:P509 ?cid.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?cid rdfs:label ?cause}
}
GROUP BY ?cid ?cause
ORDER BY DESC(?count) ?cause
 Try it! Tweede Wereldoorlogsgevechten #defaultView:BubbleChart
SELECT DISTINCT ?item ?itemLabel (?end - ?start AS ?duration)
WHERE
{
	?item wdt:P361* wd:Q362 ;
          wdt:P31/wdt:P279* wd:Q178561 ;
          wdt:P580 ?start ;
          wdt:P582 ?end .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! De top 10 zwaarste mensen #defaultView:BubbleChart
#TEMPLATE={ \"template\": \"The top 10 heaviest ?type \", \"variables\": { \"?type\": { \"query\": \"SELECT DISTINCT ?id WHERE { ?i wdt:P2067 ?v. ?i wdt:P31 ?id}\" } } }
SELECT ?item ?itemLabel ?mass
WHERE {
  {
    SELECT ?item ?mass WHERE {
      ?item wdt:P31 wd:Q5;
            p:P2067/psn:P2067/wikibase:quantityAmount ?mass.
    }
    ORDER BY DESC(?mass)
    LIMIT 10
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,fr,de\" }
}
 Try it! Waarden van uses (P2283) in wetenschappelijke artikelen # Values of \"uses\" used in scholarly articles
# Demonstrates how to turn off the optimizer and start with the lowest number of edges first.
#defaultView:BubbleChart
SELECT ?uses ?usesLabel (count(?item) as ?c)
WHERE 
{
  hint:Query hint:optimizer \"None\".
  ?item wdt:P2283 ?uses. # ~20,000 edges
  ?item wdt:P31 wd:Q13442814. # ~37M edges
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
group by ?uses ?usesLabel
order by desc(?c)
 Try it! Tijdlijn Tijdlijn van ruimtesondes #defaultView:Timeline
SELECT ?item ?itemLabel ?launchdate (SAMPLE(?image) AS ?image)
WHERE
{
	?item wdt:P31 wd:Q26529 .
    ?item wdt:P619 ?launchdate .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
    OPTIONAL { ?item wdt:P18 ?image }
}
GROUP BY ?item ?itemLabel ?launchdate
 Try it! Tijdlijn van composities van Wolfgang Amadeus Mozart #defaultView:Timeline
SELECT DISTINCT ?item ?itemLabel ?catalog_code ?publication_date
WHERE {
	?item wdt:P86 wd:Q254 ; # composer: W. A. Mozart
          wdt:P528 ?catalog_code ;
          wdt:P577 ?publication_date .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Dimensies De afmetingen van de elementen #defaultView:Dimensions
SELECT ?elementLabel ?boiling_point ?melting_point ?electronegativity ?density ?mass WHERE {
?element wdt:P31 wd:Q11344;
   wdt:P2102 ?boiling_point;
   wdt:P2101 ?melting_point;
   wdt:P1108 ?electronegativity;
   wdt:P2054 ?density;
   wdt:P2067 ?mass.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
LIMIT 100
 Try it! Grafiek Kinderen van Genghis Khan #defaultView:Graph
PREFIX gas: <http://www.bigdata.com/rdf/gas#>

SELECT ?item ?itemLabel ?pic ?linkTo
WHERE {
  SERVICE gas:service {
    gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;
                gas:in wd:Q720 ;
                gas:traversalDirection \"Forward\" ;
                gas:out ?item ;
                gas:out1 ?depth ;

                gas:maxIterations 4 ;
                gas:linkType wdt:P40 .
  }
  OPTIONAL { ?item wdt:P40 ?linkTo }
  OPTIONAL { ?item wdt:P18 ?pic }
  SERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Vuurwapenpatronen en waarop ze zijn gebaseerd #Show firearms cartridges and which they are based on
#defaultView:Graph
SELECT 
?item ?itemLabel ?image 
?other ?otherLabel ?image2
WHERE
{
    ?item  wdt:P279+ wd:Q37144 .   # cartridges
    ?item  wdt:P144    ?other  .   # if the cartridge is based on another
    OPTIONAL {
      ?item  wdt:P18     ?image  .   # grab image
      ?other wdt:P18     ?image2 .   # grab image
    }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Muziekgenres #graph rendering could be slow due to large number of results

#defaultView:Graph
SELECT ?item ?itemLabel ?_image ?_subclass_of ?_subclass_ofLabel
WHERE {
  ?item wdt:P31 wd:Q188451;
        wdt:P279 ?_subclass_of.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image. }
}
 Try it! Groepen personages in het Marvel-universum #defaultView:Graph
SELECT ?char ?charLabel ?group ?groupLabel (\"7FFF00\" as ?rgb)
WHERE {
	?group wdt:P31 wd:Q14514600 ;  # group of fictional characters
          wdt:P1080 wd:Q931597.  # from Marvel universe
 ?char wdt:P463 ?group # member of group
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Lijngrafiek Gemiddeld aantal kinderen per jaar The following query uses these:Items: human (Q5)   Properties: instance of (P31)   , number of children (P1971)   , date of birth (P569)   #defaultView:LineChart
SELECT  (str(?year) AS ?year) (AVG( ?_number_of_children ) AS ?count) WHERE {
  ?item wdt:P31 wd:Q5.
  ?item wdt:P1971 ?_number_of_children.
  ?item wdt:P569 ?_date_of_birth.
  BIND( year(?_date_of_birth) as ?year ).
  FILTER( ?year > 1900)
}

GROUP BY ?year Try it! Bevolking van landen die een grens met Duitsland delen #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q183;   # shares border with Germany
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Bevolking van landen die een grens met Kameroen delen #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q1009;  # shares border with Cameroon
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Aantal boeken per jaar en genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?genreLabel )  WHERE {
  ?item wdt:P31 wd:Q571;
        wdt:P577 ?_publication_date;
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?_genre rdfs:label ?genreLabel.}
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Aantal bands per jaar en genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count) (SAMPLE(?_genreLabel) AS ?_genreLabel) WHERE {
  ?item wdt:P31 wd:Q215380; # instance of: band
        wdt:P571 ?_date;   # inception
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_genre rdfs:label ?_genreLabel.}
  FILTER(?_date >= \"1960-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Staafdiagram Oorlogen per jaar per land de afgelopen 80 jaar #defaultView:BarChart

SELECT(SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel)  WHERE {
  ?subj wdt:P31 wd:Q178561.  # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. }  # start time
  OPTIONAL { ?subj wdt:P585 ?d2. }  # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. }  # end time
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(STR(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.  # country of location of battle
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_country rdfs:label ?_countryLabel.}
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Oorlogen per jaar per continent en land de afgelopen 80 jaar (animatie) #defaultView:BarChart
SELECT (SAMPLE(?_continentLabel) AS ?continent) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel) (SAMPLE(?year) AS ?year)  WHERE {
  ?subj wdt:P31 wd:Q178561.        # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. } # start date
  OPTIONAL { ?subj wdt:P585 ?d2. } # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. } # end date
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(str(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.
  ?_country wdt:P30 ?_continent.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
       ?_country rdfs:label ?_countryLabel.
       ?_continent rdfs:label ?_continentLabel.}
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
}
GROUP BY ?year ?_country
 Try it! Jaarlijkse bevolking naar land The following query uses these:Items: sovereign state (Q3624078)   , estimation (Q791801)   , census (Q39825)   Properties: instance of (P31)   , population (P1082)   , point in time (P585)   , determination method (P459)   #defaultView:BarChart
# male/female population _must_ not be added unqualified as total population (!)
# this is an error and should be fixed at the item using P1540 and P1539 instead
# (wrong query result may be a manifestation of such)
SELECT ?year (AVG(?pop) AS ?population) ?countryLabel
       (COUNT(*) AS ?number_of_chosen_sources) (SAMPLE(?method) AS ?a_source_of_those_chosen)
WHERE
{
  ?country wdt:P31 wd:Q3624078;#more useful than Q6256;
           p:P1082 ?popStatement .
  ?popStatement ps:P1082 ?pop;
                pq:P585 ?date .
  BIND(STR(YEAR(?date)) AS ?year)
  #FILTER ( (YEAR(?date)) >= 2000 ) 
  # IF multiple ?pop values per country per year exist, we prioritize by source
  #       census 1st, others 2nd, estimation(s) 3rd, unknown sources (none supplies P459) last
  # note: wikibase:rank won't help here: each year may have multiple statements for ?pop value
  #       rank:prefered is used for the best value (or values) of the latest or current year
  #       rank:normal may be justified for all of multiple ?pop values for a given year
  OPTIONAL { ?popStatement pq:P459 ?method. }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?d; pq:P459 ?estimate ].
             FILTER(STR(YEAR(?d)) = ?year). FILTER(?estimate = wd:Q791801). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?e; pq:P459 ?census ].
             FILTER(STR(YEAR(?e)) = ?year). FILTER(?census = wd:Q39825). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?f; pq:P459 ?other ].
             FILTER(STR(YEAR(?f)) = ?year). FILTER(?other != wd:Q39825 && ?other != wd:Q791801). }
  BIND(COALESCE( 
    IF(BOUND(?census), ?census, 1/0),
    IF(BOUND(?other), ?other, 1/0),
    IF(BOUND(?estimate), ?estimate, 1/0) ) AS ?pref_method).
  FILTER(IF(BOUND(?pref_method),?method = ?pref_method,true))
  # .. still need to group if multiple values per country per year exist and
  # - none is qualified with P459
  # - multiple ?estimate or multiple ?census (>1 value from same source)
  # - ?other yields more than one source (>1 values are better than optionally
  #                         supplied estimate, but no census source available)

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }               
}
GROUP BY ?year ?countryLabel
ORDER BY ?year ?countryLabel Try it! Gebouwde elektriciteitscentrales per jaar per land #defaultView:BarChart
SELECT (SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?count) (SAMPLE(?_countryLabel) AS ?_countryLabel) WHERE {
  ?object wdt:P31/wdt:P279* wd:Q134447. # Power stations or subtypes
  BIND(STR(YEAR(?_inception)) AS ?year)
  ?object wdt:P571 ?_inception;
          wdt:P17 ?_country.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?_country rdfs:label ?_countryLabel. }
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Staafdiagram met het aantal schilderijen die Piet Mondriaan per jaar heeft geproduceerd #defaultView:BarChart
SELECT ?year (COUNT(?year) as ?count) WHERE {
  ?painting wdt:P31 wd:Q3305213.
  ?painting wdt:P170 wd:Q151803.
  ?painting wdt:P571 ?inception.
  BIND(str(year(?inception)) AS ?year)
  OPTIONAL { ?painting wdt:P18 ?image. }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} GROUP BY ?year ?count ORDER BY ?year
 Try it! Staafdiagram met verhouding van mannelijke/vrouwelijke kunstenaars voor openbare kunst in de stad Nijmegen, Nederland #defaultView:BarChart
select ?genderLabel (count(?gender) as ?genderCount) where {
  ?item wdt:P136 wd:Q557141;
        wdt:P131 wd:Q47887;
        wdt:P170 ?creator. 
    
  ?creator wdt:P21 ?gender.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} group by ?genderLabel ?genderCount
 Try it! Gebiedgrafiek De sterfte per jaar aan kanker en het type kanker The following query uses these:Items: human (Q5)   , cancer (Q12078)   Properties: instance of (P31)   , cause of death (P509)   , date of death (P570)   , subclass of (P279)   #defaultView:AreaChart
SELECT ?cod (STR(SAMPLE(?yearOfDeath)) AS ?YEAR_Of_DEATH) (COUNT(*) AS ?NUMBER_OF_DEATHS) ?cause WHERE {
  ?pid wdt:P31 wd:Q5;  # instance of human
       wdt:P509 ?cod;  # cause of death
       wdt:P570 ?_date_of_death.
  ?cod wdt:P279* wd:Q12078.  # type of cancer
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                         ?cod rdfs:label ?cause. }
  BIND ( YEAR(?_date_of_death) AS ?yearOfDeath )
  FILTER( ?yearOfDeath > 1960 )
}
GROUP BY ?cod ?cause ?yearOfDeath Try it! Boom Continenten, landen, regio's en hoofdsteden The following query uses these:Items: continent (Q5107)   , country (Q6256)   , city (Q515)   Properties: instance of (P31)   , continent (P30)   , contains the administrative territorial entity (P150)   , locator map image (P242)   , flag image (P41)   , capital (P36)   , image (P18)   , population (P1082)   , head of government (P6)   , twinned administrative body (P190)   , inception (P571)   , located in or next to body of water (P206)   , has part(s) (P527)   #defaultView:Tree
SELECT ?continent ?continentFlag ?continentLabel ?country ?countryLabel ?countryFlag ?region ?regionLabel ?regionFlag ?city ?cityLabel ?cityImage ?property ?propertyLabel ?value ?valueLabel WHERE {
  {
    SELECT * WHERE {
      ?continent wdt:P31 wd:Q5107.
      ?country wdt:P30 ?continent.
      ?country p:P31/ps:P31 wd:Q6256.
      ?country wdt:P150 ?region.
      OPTIONAL {
        ?continent wdt:P242 ?continentFlag.
        ?country wdt:P41 ?countryFlag.
        ?region wdt:P41 ?regionFlag.
      }
      OPTIONAL {
        ?region wdt:P36 ?city.
        ?city wdt:P31 wd:Q515.
        ?city wdt:P18 ?cityImage.
        OPTIONAL {
          VALUES (?prop) {
            (wdt:P1082)
            (wdt:P6)
            (wdt:P190)
            (wdt:P31)
            (wdt:P571)
            (wdt:P150)
            (wdt:P206)
            (wdt:P527)
          }
          ?city ?prop ?value.
          ?property ?ref ?prop.
          ?property rdf:type wikibase:Property.
        }
      }
    }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Weense componisten en hun composities per tonaliteit The following query uses these:Items: human (Q5)   , Vienna (Q1741)   Properties: instance of (P31)   , place of birth (P19)   , place of death (P20)   , residence (P551)   , image (P18)   , composer (P86)   , tonality (P826)   #defaultView:Tree
SELECT ?composer ?composerLabel ?composerImage ?tonality ?tonalityLabel ?composition ?compositionLabel WHERE {
  ?composer wdt:P31 wd:Q5;
            wdt:P19|wdt:P20|wdt:P551 wd:Q1741.
  OPTIONAL { ?composer wdt:P18 ?composerImage. }
  ?composition wdt:P86 ?composer;
               wdt:P826 ?tonality.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de-at,de\". }
}
ORDER BY ?composerLabel ?tonalityLabel Try it! Boom kaart Populaire tv-serie (in boomweergave) #added before 2016-10

#defaultView:TreeMap
SELECT ?show ?showLabel  ?season ?cleanSeasonLabel ?episode ?episodeLabel
WHERE
{
	{
		BIND(wd:Q886 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-23) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	} 
	UNION
	{
		BIND(wd:Q16538 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-20) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}  
	UNION
	{
		BIND(wd:Q147235 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(CONCAT(\"S\", SUBSTR(?_seasonLabel, 25)) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}

	SERVICE wikibase:label {  bd:serviceParam wikibase:language \"en\" }
}
 Try it! Bekende personen in de categorieën oog- en haarkleur #defaultView:TreeMap
SELECT ?eyes ?hairColorLabel (COUNT(?person) as ?count)
WHERE
{
	?person wdt:P1340 ?eyeColor.
    ?person wdt:P1884 ?hairColor.
    ?person wdt:P2048 ?height.
    ?eyeColor rdfs:label ?_eyeColorLabel.
    FILTER((LANG(?_eyeColorLabel)) = \"en\")
    BIND(CONCAT(?_eyeColorLabel, \" eyes\") AS ?eyes)
   
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
GROUP BY ?eyes ?hairColorLabel
 Try it! Scatter grafiek Aantal films per jaar en genre The following query uses these:Items: film (Q11424)   Properties: instance of (P31)   , publication date (P577)   , genre (P136)   #defaultView:ScatterChart
SELECT   ?year  (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?label )  (?year as ?year_shown) WHERE {
  ?item wdt:P31 wd:Q11424.
  ?item wdt:P577 ?_publication_date.
  ?item wdt:P136 ?_genre.
  ?_genre rdfs:label ?_genreLabel.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  FILTER((LANG(?_genreLabel)) = \"en\")
 
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 30) Try it! Kalenders Kalender met de geboortedatums van vrouwen die aan de Universiteit van Oxford studeerden SELECT ?monthLabel (?day_int as ?d) ?personLabel ?personDesc
   (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?rperson),32) )) as ?link) WHERE {
{ SELECT ?month_int ?month ?day_int (SAMPLE(?person) AS ?rperson) WHERE {
?month wdt:P31 wd:Q47018901; wdt:P1545 ?month_ordinal. # These lines generate a calendar from January 1 to December 31
?day p:P361 [ps:P361 ?month; pq:P1545 ?day_ordinal ].
 BIND(xsd:integer(?month_ordinal) AS ?month_int)
 BIND(xsd:integer(?day_ordinal) AS ?day_int)
OPTIONAL {
# Define the people we're interested in
{?person wdt:P69 wd:Q34433 } UNION {?person wdt:P69/wdt:P31 wd:Q2581649 } # educated at Oxford or an Oxford college
?person wdt:P21 wd:Q6581072 ; # female
   p:P569/psv:P569 ?date_node. # birth date
?date_node wikibase:timePrecision \"11\"^^xsd:integer ; # birth date has specific day
   wikibase:timeValue ?birthdate .        
filter(DAY(?birthdate)=?day_int) filter (MONTH(?birthdate)=?month_int )
}
} GROUP BY ?month_int ?month ?day_int }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
?rperson rdfs:label ?personLabel. ?rperson schema:description ?personDesc. ?month rdfs:label ?monthLabel }
} ORDER BY ?month_int ?day_int
 Try it! Voorbeelden met coördinaten om kaarten te illustreren Items in de buurt met gebruikerslocatie #defaultView:Map{\"layer\":\"?instance_ofLabel\"}
SELECT ?place ?placeLabel ?image ?coordinate_location ?dist ?instance_of ?instance_ofLabel WHERE {
  SERVICE wikibase:around {
    ?place wdt:P625 ?coordinate_location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\".
    bd:serviceParam wikibase:distance ?dist.
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?place wdt:P18 ?image. }
  OPTIONAL { ?place wdt:P31 ?instance_of. }
}
 Try it! Locaties van nationale parken #defaultView:Map
SELECT ?objectLabel ?objectDescription ?link ?coord
WHERE {
  ?object wdt:P31/wdt:P279? wd:Q46169 .
          OPTIONAL { ?object wdt:P856 ?link. } 
          OPTIONAL { ?object wdt:P625 ?coord . }
          SERVICE wikibase:label {
               bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\"
          }
}
 Try it! Luchthavens binnen 100 km van Berlijn #added before 2016-10

#defaultView:Map
SELECT ?place ?placeLabel ?location
WHERE
{
  # Berlin coordinates
  wd:Q64 wdt:P625 ?berlinLoc .
  SERVICE wikibase:around {
    ?place wdt:P625 ?location .
    bd:serviceParam wikibase:center ?berlinLoc .
    bd:serviceParam wikibase:radius \"100\" .
  } .
  # Is an airport
  FILTER EXISTS { ?place wdt:P31/wdt:P279* wd:Q1248784 } .
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
  } 
}
 Try it! Luchthavens in België #List of airports in Belgium
#defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor
WHERE {
  ?airport wdt:P31 wd:Q1248784 ;
          ?range wd:Q31;
          wdt:P625 ?coor.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Internationale luchthavens die vernoemd zijn naar vrouwen # Airports named after women
# List of airports that are named after women
# Written by WiseWoman auf der #wmdemv 2019
# defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor ?namedafterLabel
WHERE {
  ?airport wdt:P31 wd:Q644371 ;  
          # ?range wd:Q183;
          wdt:P625 ?coor.
  ?airport wdt:P138 ?namedafter .
  ?namedafter wdt:P31 wd:Q5 .
  ?namedafter wdt:P21 wd:Q6581072 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Scholen tussen San Jose, CA en Sacramento, CA The following query uses these:Items: San Jose (Q16553)   , Sacramento (Q18013)   , school (Q3914)   Properties: coordinate location (P625)   , instance of (P31)   , subclass of (P279)    Features: map (Q24515275)   , wikibase:box (Q26211169)   , wikibase:box with West and East corners (Q26211177)  # Schools between San Jose, CA and Sacramento, CA
#defaultView:Map
SELECT *
WHERE
{ hint:Query hint:optimizer \"None\" .
  wd:Q16553 wdt:P625 ?SJloc .
  wd:Q18013 wdt:P625 ?SCloc .
  SERVICE wikibase:box {
      ?place wdt:P625 ?location .
      bd:serviceParam wikibase:cornerWest ?SJloc .
      bd:serviceParam wikibase:cornerEast ?SCloc .
    }
  ?place wdt:P31/wdt:P279* wd:Q3914 .
} Try it! Grote steden, gegroepeerd in kaartlagen op bevolkingsomvang #defaultView:Map
SELECT DISTINCT ?city ?cityLabel (SAMPLE(?location) AS ?location) (MAX(?population) AS ?population) (SAMPLE(?layer) AS ?layer)
WHERE
{
  ?city wdt:P31/wdt:P279* wd:Q515;
        wdt:P625 ?location;
        wdt:P1082 ?population.
  FILTER(?population >= 500000).
  BIND(
    IF(?population < 1000000, \"<1M\",
    IF(?population < 2000000, \"1M-2M\",
    IF(?population < 5000000, \"2M-5M\",
    IF(?population < 10000000, \"5M-10M\",
    IF(?population < 20000000, \"10M-20M\",
    \">20M\")))))
    AS ?layer).
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?city ?cityLabel
 Try it! Plaatsen met gratis wifi #defaultView:Map
# Places with free wi-fi
SELECT ?item ?itemLabel (SAMPLE(?coord) AS ?coord)
WHERE {
	?item wdt:P2848 wd:Q1543615 ;  # wi-fi gratis
	      wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} GROUP BY ?item ?itemLabel
 Try it! Basiskaart van de U1-treinstations in Berlijn #added before 2016-10
#defaultView:Map
SELECT ?stationLabel ?coord
WHERE {
	?station wdt:P81 wd:Q99691 ;
		 wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\" }
}
 Try it! Geavanceerde kaart van Stockholm Metro (Q272926) Map of Stockholm Metro (query) Locaties van universiteiten in Kameroen #added before 2016-10
#defaultView:Map
SELECT ?universityLabel ?universityDescription ?website ?coord
WHERE {
	?university wdt:P31/wdt:P279* wd:Q3918 ;
		wdt:P17 wd:Q1009 ;
		wdt:P625 ?coord .
	OPTIONAL {
		?university wdt:P856 ?website
	}
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"en,de\" .
	}
}
 Try it! Verdeling van de namen van Duitse nederzettingen die eindigen met \"-ow\" of \"-itz\" #added before 2016-10
 #defaultView:Map
SELECT ?item ?itemLabel ?coord
WHERE
{
	?item wdt:P31/wdt:P279* wd:Q486972;
    	      wdt:P17 wd:Q183;
    	      rdfs:label ?itemLabel;
    	      wdt:P625 ?coord;
    	 FILTER (lang(?itemLabel) = \"de\") .
    	 FILTER regex (?itemLabel, \"(ow|itz)$\").
}
 Try it! Locaties van elektriciteitscentrales #defaultView:Map
SELECT DISTINCT ?objectLabel ?coord ?layer
WHERE
{
  ?object wdt:P31/wdt:P279* wd:Q159719;
     wdt:P625 ?coord.
  ?object wdt:P31 ?type. ?type wdt:P279* wd:Q159719.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?type rdfs:label ?layer }
}
 Try it! Locaties van stenen boogbruggen #defaultView:Map
SELECT ?label ?coord ?place ?image
WHERE {
	?place wdt:P31 wd:Q14276458 ;  # instance of deck arch bridge
            wdt:P186 wd:Q22731 ;  # made of stone
            wdt:P625 ?coord .
	OPTIONAL { ?place wdt:P18 ?image }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?place rdfs:label ?label }
}
 Try it! Locaties van aquaducten #defaultView:Map
SELECT ?place ?placeLabel ?coord ?layer
WHERE {
   ?place wdt:P31/wdt:P279? wd:Q474 ; # instance of aqueduct
          wdt:P625 ?coord ;
          wdt:P31 ?type.
  ?type wdt:P279* wd:Q474
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                       ?type rdfs:label ?layer}
}
 Try it! Locaties van archeologische bezienswaardigheden, met afbeeldingen #defaultView:Map
SELECT ?siteLabel ?coord ?image ?site
WHERE {
   ?site wdt:P31/wdt:P279* wd:Q839954 ;
      wdt:P625 ?coord ;
      wdt:P18 ?image .
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Locaties van kastelen die ook een archeologische bezienswaardigheid zijn #defaultView:Map
SELECT ?label ?coord ?subj
WHERE {
   ?subj wdt:P31 wd:Q839954 ; # instance of archaeological site
         wdt:P31/wdt:P279* wd:Q23413 ;  # instance or subclass of castle
         wdt:P625 ?coord .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?subj rdfs:label ?label}
}
 Try it! Locaties van gevechten #added before 2016-10
#defaultView:Map
SELECT ?label ?coord ?subj ?year
WHERE
{
	?subj wdt:P31 wd:Q178561 .
	?subj wdt:P625 ?coord .
	OPTIONAL {?subj wdt:P580 ?d1}
	OPTIONAL {?subj wdt:P585 ?d2}
  	OPTIONAL {?subj wdt:P582 ?d3}
	BIND(IF(!BOUND(?d1),(IF(!BOUND(?d2),?d3,?d2)),?d1) as ?date)
	BIND(YEAR(?date) as ?year)
	?subj rdfs:label ?label filter (lang(?label) = \"en\")
}
 Try it! Plaatsen van aanbidding #added before 2016-10

#defaultView:Map
SELECT ?item ?itemLabel ?_coordinate_location ?_image WHERE {
  ?item wdt:P31/wdt:P279* wd:Q1370598.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
   ?item wdt:P625 ?_coordinate_location.
  ?item wdt:P18 ?_image.
}
 Try it! Alle musea (inclusief de subklasse van museum) in Washington, DC met coördinaten #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?name ?coord ?lat ?lon
WHERE {
   hint:Query hint:optimizer \"None\" .
   ?item wdt:P131* wd:Q61 .
   ?item wdt:P31/wdt:P279* wd:Q33506 .
   ?item wdt:P625 ?coord .
   ?item p:P625 ?coordinate .
   ?coordinate psv:P625 ?coordinate_node .
   ?coordinate_node wikibase:geoLatitude ?lat .
   ?coordinate_node wikibase:geoLongitude ?lon .
   SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
    ?item rdfs:label ?name
   }
}
ORDER BY ASC (?name)
 Try it! Kaart van musea in Nederland met een kleur die aangeeft of ze de Museumkaart (Q2237462) aanvaarden #defaultView:Map
select ?museum ?museumLabel ?layer (sample(?location) as ?location) where {
  ?museum wdt:P31/wdt:P279* wd:Q33506;
          wdt:P17 wd:Q55;
          wdt:P625 ?location.
  optional { ?museum wdt:P2851 ?layer. }
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} group by ?museum ?museumLabel ?layer
 Try it! Alle skigebieden met coördinaten #defaultView:Map
SELECT ?item ?itemLabel ?coord #?lat ?lon
WHERE
{
   ?item               wdt:P31        wd:Q130003.
   ?item               wdt:P625         ?coord.

#  ?item                 p:P625         ?statementnode.
#  ?statementnode      psv:P625         ?valuenode.
#  ?valuenode     wikibase:geoLatitude  ?lat.
#  ?valuenode     wikibase:geoLongitude ?lon.

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Vuurtorens in Noorwegen #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?coords ?image
WHERE {
	?item wdt:P31 wd:Q39715 ;
          wdt:P17 wd:Q20 ;
          wdt:P625 ?coords
	OPTIONAL { ?item wdt:P18 ?image } 
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],nb,nn,en,fi\"  } 
}
ORDER BY ?itemLabel
 Try it! De mooiste dorpen van Frankrijk #defaultView:Map
SELECT ?item ?itemLabel ?geoLocation ?image
WHERE {
    ?item wdt:P463 wd:Q1010307 ;  # member of Les Plus Beaux Villages de France (organisation)
          wdt:P625 ?geoLocation .
    OPTIONAL { ?item wdt:P18 ?image }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" }
}
 Try it! Locaties in Fiji This query shows a way of mapping locations which span the 180th meridian, without the points being split between the left and right edges of the map. #defaultView:Map
select ?item ?coords_ where {
  ?item wdt:P17 wd:Q712 .
  ?item p:P625/psv:P625 ?coords .
  ?coords wikibase:geoLatitude ?lat ;
          wikibase:geoLongitude ?lon .
  bind(strdt(concat(\"Point(\", if((?lon < 0), str(?lon + 360), str(?lon)), \" \", str(?lat), \")\"), geo:wktLiteral) as ?coords_) .
} limit 1000
 Try it! Kaarten van rampen, gecodeerd volgens het type ramp Kaart van rampen, gecodeerd in kleur volgens het type ramp #defaultView:Map{\"layer\":\"?typeLabel\"}
SELECT ?item ?itemLabel ?geo ?type ?typeLabel (SAMPLE(?_image) AS ?image) WHERE {
  ?type wdt:P279* wd:Q3839081 .
  ?item wdt:P31 ?type ;
        wdt:P625 ?geo .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image }
}
GROUP BY ?item ?itemLabel ?geo ?type ?typeLabel
 Try it! Monumenten en andere erfgoedstukken op 1 km rond de locatie van de gebruiker #defaultView:Map
select distinct ?monument ?monumentLabel ?heritageLabel (sample(?distance) as ?distance) (sample(?location) as ?location) (sample(?image) as ?image) where {
  ?monument wdt:P1435 ?heritage.
  
  service wikibase:around {   
    ?monument wdt:P625 ?location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\" . 
    bd:serviceParam wikibase:distance ?distance .
  }
  
  optional {
    ?monument wdt:P18 ?image.
  }
  
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,nl\". }
} group by ?monument ?monumentLabel ?heritageLabel order by ?distance
 Try it! Kaart van kranten in de Verenigde Staten door de aanwezigheid van de Infobox krant in hun Engels Wikipedia artikel Map of newspapers in the United States by presence of the template Infobox newspaper in their English Wikipedia article integrates a text search for the template's name using the MediaWiki API into a SPARQL query #defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?id ?coords ?article ?rgb WHERE {
 ?c wdt:P279* wd:Q11032 .
  ?item wdt:P31 ?c .
 ?item wdt:P17|wdt:P495 wd:Q30 .
 OPTIONAL{?item wdt:P5454 ?id .}
 ?item wdt:P291 ?place .
 ?place wdt:P625 ?coords.
 OPTIONAL {   
   SELECT ?item ?pageid ?ns WHERE {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam mwapi:generator \"search\" .
      bd:serviceParam mwapi:gsrsearch \"hastemplate:\\\"infobox newspaper\\\"\" .
      bd:serviceParam mwapi:gsrlimit \"max\" .
      ?item wikibase:apiOutputItem mwapi:item .
      ?pageid wikibase:apiOutput \"@pageid\" .
      ?ns wikibase:apiOutput \"@ns\" .
    }
  } LIMIT 15000
 }
    
  OPTIONAL {
      ?article schema:about ?item .
      ?article schema:inLanguage \"en\" .
      FILTER (SUBSTR(str(?article), 1, 25) = \"https://en.wikipedia.org/\")
  }

  BIND( IF(BOUND(?article),   IF(BOUND(?ns), \"009500\" , \"FFF000\" )  ,  \"FF0000\"   )  AS ?rgb).  
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
 Try it! Lijst van alle meren in Kameroen The following query uses these:Items: lake (Q23397)   , Cameroon (Q1009)   Properties: instance of (P31)   , subclass of (P279)   , country (P17)   , coordinate location (P625)   , image (P18)    Features: map (Q24515275)  """@en,
    """Other languages: English Nederlands Türkçe español français svenska українська հայերեն 中文 日本語 Contents 1 Showcase Queries 1.1 Largest cities with female mayor 1.2 List of countries ordered by the number of their cities with female mayor 1.3 Popular surnames among humans 1.4 Given names with most variations 1.5 Popular surnames among fictional characters 1.6 Women with most sitelinks and no image born in 1921 or later 1.7 Whose birthday is today? 1.8 Finding John and Sarah Connor 1.9 Data of Douglas Adams 1.10 Data of Douglas Adams (modified version) 1.11 Data of Barbara Harris - Grouped per item 1.12 People who have been buried in multiple places 1.13 All oldest living US ex-presidents in chronological order 1.14 Persons and institutions related in some way to Russian politics 2 高度なクエリ 2.1 バブルチャート 2.1.1 死因の総合ランキング 2.1.2 WWII battle durations 2.1.3 最も重い人トップ10 2.1.4 Values of uses (P2283) in scholarly articles 2.2 タイムライン 2.2.1 宇宙探査機のタイムライン 2.2.2 Timeline of compositions by Wolfgang Amadeus Mozart 2.3 Dimensions 2.3.1 Dimensions of elements 2.4 Graph 2.4.1 チンギス・カンの子供 2.4.2 Firearms cartridges and which they are based on 2.4.3 Music genres 2.4.4 Groups of characters in the Marvel universe 2.5 Line chart 2.5.1 Average number of children per year 2.5.2 Population of countries sharing a border with Germany 2.5.3 Population of countries sharing a border with Cameroon 2.5.4 Number of books by year and genre 2.5.5 Number of bands by year and genre 2.6 Bar chart 2.6.1 Battles per year per country last 80 years 2.6.2 Battles per year per continent and country last 80 years (animated) 2.6.3 Yearly Population stacked by country 2.6.4 Built power plants per year per country 2.6.5 Bar chart of paintings produced per year by Piet Mondrian 2.6.6 Bar chart with ratio of male / female creators for public art in city of Nijmegen, the Netherlands 2.7 Area chart 2.7.1 Cancer deaths per year and cancer type 2.8 Tree 2.8.1 Continents, countries, regions and capitals 2.8.2 Viennese composers and their compositions by tonality 2.9 Treemap 2.9.1 Popular television series (in treeview) 2.9.2 Famous people categorised into eye and hair color 2.10 Scatter chart 2.10.1 Number of films by year and genre 2.11 Calendars 2.11.1 Calendar of birth dates of women who studied at the University of Oxford 2.12 Samples with coordinates to illustrate maps 2.12.1 Items around with user location 2.12.2 Locations of national parks 2.12.3 Airports within 100km of Berlin 2.12.4 Airports in Belgium 2.12.5 International airports named after women 2.12.6 Schools between San Jose, CA and Sacramento, CA 2.12.7 Big cities, grouped into map layers by population 2.12.8 Places with free wifi 2.12.9 Basic map of U1 subway stations in Berlin 2.12.10 Advanced map of Stockholm Metro (Q272926) 2.12.11 Locations of universities in Cameroon 2.12.12 Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany 2.12.13 Locations of power stations 2.12.14 Locations of stone arch bridges 2.12.15 Locations of aqueducts 2.12.16 Locations of archaeological sites, with images 2.12.17 Locations of castles that are also archaeological sites 2.12.18 Locations of battles 2.12.19 Places of worship 2.12.20 All museums (including subclass of museum) in Washington, D.C. with coordinates 2.12.21 Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) 2.12.22 All ski resorts with coordinates 2.12.23 Lighthouses in Norway 2.12.24 Most beautiful villages of France 2.12.25 Locations in Fiji 2.12.26 Map of disasters, color-coded by disaster type 2.12.27 Monuments and other heritage items located 1 km around the users location 2.12.28 Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article 2.12.29 List of all the lakes in Cameroon 2.13 Listeria 2.13.1 Women born in Wales without an article in Welsh for Listeria 2.13.2 People born in Occitania for Listeria 2.13.3 People born in Scotland for Listeria 2.14 Gather Apply Scatter 2.14.1 Children of Genghis Khan 2.15 Sampling 2.15.1 Scientific articles without any description 2.16 Mediawiki API 2.16.1 Filter labels using EntitySearch from mwapi service to provide Full Text Search 2.16.2 Using mwapi to base a query on articles in a Wikipedia category 2.16.3 Find statements with references containing external links to wipo.int 2.16.4 Find metadata like artist and license for an image 2.16.5 Getting pageviews for all articles in a category 2.17 Federation 2.17.1 Get OpenStreetMap top level properties of Helsinki University main building 2.17.2 Get information of Europeana item 2.17.3 Share of renewable energy in electricity 2.17.4 Get OpenStreetMap nodes with inarisami label in wikipedia but without inarisami label in OSM 3 Queries useful to external services 3.1 The best ranked properties and values of a given item Showcase Queries These queries show the power and functionality of SPARQL and WDQS GUI. Largest cities with female mayor #added before 2016-10
#TEMPLATE={\"template\":\"Largest ?c with ?sex head of government\",\"variables\":{\"?sex\":{\"query\":\" SELECT ?id WHERE { ?id wdt:P31 wd:Q48264 .  } \"},\"?c\":{\"query\":\"SELECT DISTINCT ?id WHERE {  ?c wdt:P31 ?id.  ?c p:P6 ?mayor. }\"} } }
SELECT DISTINCT ?city ?cityLabel ?mayor ?mayorLabel
WHERE
{
  BIND(wd:Q6581072 AS ?sex)
  BIND(wd:Q515 AS ?c)

	?city wdt:P31/wdt:P279* ?c .  # find instances of subclasses of city
	?city p:P6 ?statement .            # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .          # ... that has the value ?mayor
	?mayor wdt:P21 ?sex .       # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	
	# Now select the population value of the ?city
	# (wdt: properties use only statements of \"preferred\" rank if any, usually meaning \"current population\")
	?city wdt:P1082 ?population .
	# Optionally, find English labels for city and mayor:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
	}
}
ORDER BY DESC(?population)
LIMIT 10
 Try it! List of countries ordered by the number of their cities with female mayor #added before 2016-10
SELECT ?country ?countryLabel (count(*) AS ?count)
WHERE
{
	?city wdt:P31/wdt:P279* wd:Q515 . # find instances of subclasses of city
	?city p:P6 ?statement .           # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .         # ... that has the value ?mayor
	?mayor wdt:P21 wd:Q6581072 .      # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	?city wdt:P17 ?country .          # Also find the country of the city
 	
	# If available, get the \"ru\" label of the country, use \"en\" as fallback:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"ru,en\" .
	}
}
GROUP BY ?country ?countryLabel
ORDER BY DESC(?count)
LIMIT 100
 Try it! Popular surnames among humans #defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?human) AS ?count) WHERE {
    # ?human wdt:P31 wd:Q5.
      ?human wdt:P734 ?surname.
    }
    GROUP BY ?surname ORDER BY DESC(?count) LIMIT 100
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} 
ORDER BY DESC(?count)
 Try it! Given names with most variations #added before 2016-10

SELECT ?name ?nameLabel (COUNT(?otherName) AS ?count)
WHERE
{
  ?name wdt:P31 wd:Q202444;
        wdt:P460 ?otherName.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?name ?nameLabel
ORDER BY DESC(?count)
LIMIT 10
 Try it! Popular surnames among fictional characters #added before 2016-10

#defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?person) AS ?count) WHERE {
      ?person (wdt:P31/wdt:P279*) wd:Q95074.
      ?person wdt:P734 ?surname.
    }
    GROUP BY ?surname
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?count)
LIMIT 100
 Try it! Women with most sitelinks and no image born in 1921 or later SELECT ?s ?desc ?linkcount
WHERE
{
  ?s wdt:P31 wd:Q5 ;   # human
     wdt:P21 wd:Q6581072 ;  # gender: female
     wdt:P569 ?born .
  FILTER (?born >= \"1921-01-01T00:00:00Z\"^^xsd:dateTime) .
  ?s wikibase:sitelinks ?linkcount .
  MINUS {
    ?s wdt:P18 []  # exclude if there is an image
  }
?s rdfs:label ?desc FILTER(lang(?desc)=\"en\").
}
GROUP BY ?s ?desc ?linkcount
ORDER BY DESC(?linkcount)
LIMIT 50
 Try it! Whose birthday is today? #Whose birthday is today?
SELECT ?entity ?entityLabel ?entityDescription (YEAR(?date) as ?year)
WHERE {
    BIND(MONTH(NOW()) AS ?nowMonth)
    BIND(DAY(NOW()) AS ?nowDay)
    ?entity wdt:P569 ?date .
    FILTER (MONTH(?date) = ?nowMonth && DAY(?date) = ?nowDay)

SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }   
}
LIMIT 20
 Try it! Finding John and Sarah Connor #added before 2016-10
 SELECT * WHERE {
  ?p wdt:P1080 wd:Q620588 . # from fictional universe: Terminator
  ?p rdfs:label ?pl .
  FILTER (lang(?pl) = \"en\")
  ?p wdt:P25 ?m .  # ?m is mother of ?p
  ?m rdfs:label ?ml .
  FILTER (lang(?ml) = \"en\")
}
 Try it! Data of Douglas Adams #added before 2016-10

PREFIX entity: <http://www.wikidata.org/entity/>
#partial results

SELECT ?propUrl ?propLabel ?valUrl ?valLabel ?picture
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"identity\"@en AS ?propLabel ) .
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel
	}
	
  	?valUrl rdfs:label ?valLabel
	FILTER (LANG(?valLabel) = 'en') .
	OPTIONAL{ ?valUrl wdt:P18 ?picture .}
	FILTER (lang(?propLabel) = 'en' )
}
ORDER BY ?propUrl ?valUrl
LIMIT 200
 Try it! Data of Douglas Adams (modified version) PREFIX entity: <http://www.wikidata.org/entity/>

#  In addition to the original query this one comes with some advantages:
#  - You will get only literals as results, (even if the values are stored as IRI in wikibase)
#  - That means you will also get properties as birth date, alphanumeric identifier and so on.
#  - The list is ordered numerically by property number. (So P19 comes before P100) 
#  - All label, altLabel and description in a given Language are included.
#  You may open a separate column ?valUrl if you need also the IRI
#
#  Please advise, if there is an option to put the Q-Number  and/or the Language 
#  code into a runtime variable. 

SELECT ?propNumber ?propLabel ?val
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"Name\"@de AS ?propLabel ) .
       entity:Q42 rdfs:label ?val .
      
        FILTER (LANG(?val) = \"de\") 
	}
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"AltLabel\"@de AS ?propLabel ) .
        optional{entity:Q42 skos:altLabel ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"Beschreibung\"@de AS ?propLabel ) .
        optional{entity:Q42 schema:description ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
   	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' )
        filter  isliteral(?valUrl) 
        BIND(?valUrl AS ?val)
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' ) 
        filter  isIRI(?valUrl) 
        ?valUrl rdfs:label ?valLabel 
		FILTER (LANG(?valLabel) = \"de\") 
         BIND(CONCAT(?valLabel) AS ?val)
	}
        BIND( SUBSTR(str(?propUrl),38, 250) AS ?propNumber)
}
ORDER BY xsd:integer(?propNumber)
 Try it! Data of Barbara Harris - Grouped per item # This query collects data related to entities on Barbara Harris. 
# It demonstrates collecting individual attributes and concatenating them for easier post processing. 

SELECT 
  ?item
(SAMPLE(?itemLabel) AS ?itemLabel) 
(SAMPLE(?itemDescription) AS ?itemDescription) 
  (SAMPLE(?pic) AS ?pic) 
(SAMPLE(?date_of_birth) AS ?date_of_birth) 
(GROUP_CONCAT(DISTINCT ?country_of_citizenship; SEPARATOR=\", \") AS ?country_of_citizenships)
(GROUP_CONCAT(DISTINCT ?country_of_citizenshipLabel; SEPARATOR=\", \") AS ?country_of_citizenshipLabels)

(GROUP_CONCAT(DISTINCT ?occupation; SEPARATOR=\", \") AS ?occupations)
(GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR=\", \") AS ?occupationLabels)

(GROUP_CONCAT(DISTINCT ?country; SEPARATOR=\", \") AS ?countries)
(GROUP_CONCAT(DISTINCT ?countryLabel; SEPARATOR=\", \") AS ?countryLabels)


WHERE {
  VALUES ?item {
    wd:Q269809
    wd:Q274590
    wd:Q24576851
    wd:Q807461
    wd:Q4858963
    wd:Q27954833
    wd:Q4859015
    wd:Q826930
  }
  OPTIONAL { ?item wdt:P18 ?pic. }
  OPTIONAL { ?item wdt:P27 ?country_of_citizenship. }
  OPTIONAL { ?item wdt:P106 ?occupation. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  OPTIONAL { ?item wdt:P31 ?instance_of. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
    ?item rdfs:label ?itemLabel.
    ?item rdfs:description ?itemDescription.
    ?country_of_citizenship rdfs:label ?country_of_citizenshipLabel.
    ?occupation rdfs:label ?occupationLabel.
    ?country rdfs:label ?countryLabel.
  }
}
GROUP BY ?item
 Try it! People who have been buried in multiple places # This query collects burial places of individuals, and sorts them in decreasing order
SELECT ?human (COUNT(?place) AS ?count) WHERE {
  ?human wdt:P31 wd:Q5.
  ?human wdt:P119 ?place.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}
GROUP BY ?human 
ORDER BY DESC(?count)
 Try it! All oldest living US ex-presidents in chronological order # Added 2020-07
# All persons who have been the oldest living US ex-president with dates in chronological order
SELECT DISTINCT ?date ?president ?presidentLabel
WITH
{
  # Persons who is/were president of USA
  SELECT ?president ?presidentLabel ?president_enddate ?president_birthdate ?president_deathdate
  WHERE
  {
    ?president wdt:P31 wd:Q5.
    ?president p:P39 ?president_statement.
    ?president_statement ps:P39 wd:Q11696.
    ?president_statement pq:P582 ?president_enddate.
    ?president wdt:P569 ?president_birthdate.
    OPTIONAL { ?president wdt:P570 ?president_deathdate. }
    ?president rdfs:label ?presidentLabel.
    FILTER (LANG(?presidentLabel) = \"en\")
  }
} AS %presidents
WITH
{
  # Dates where who is oldest living expresident can change
  SELECT DISTINCT ?date
  WHERE
  {
    {
      INCLUDE %presidents
      BIND(?president_enddate + \"P1D\"^^xsd:duration AS ?date)
    }
    UNION
    {
      INCLUDE %presidents
      BIND(?president_deathdate + \"P1D\"^^xsd:duration AS ?date)
    }
  }
} AS %dates
WITH
{
  # Find the age for all living expresidents for each value of ?date
  SELECT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    INCLUDE %presidents
    FILTER (?president_enddate < ?date) # Must have become expresident
    FILTER IF(BOUND(?president_deathdate), ?president_deathdate >= ?date, true) # Must still be living
    BIND (?date - ?president_birthdate AS ?age)
  }
} AS %ages
WITH
{
  # Find the oldest age for a living expresident for each value of ?date
  SELECT ?date (MAX(?age) AS ?oldest)
  WHERE
  {
    INCLUDE %ages
  }
  GROUP BY ?date
} AS %oldest
WITH
{
  SELECT DISTINCT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    OPTIONAL
    {
      INCLUDE %ages
      INCLUDE %oldest
      FILTER (?age = ?oldest)
    }
  }
} AS %result
WHERE
{
  # A result is a change from the previous date if ?president's presidency ended the day before ?date,
  # or if an older expresident died the day before ?date. Filter out results that don't fulfill this.
  INCLUDE %result
  BIND (?date - \"P1D\"^^xsd:duration AS ?day_before)
  FILTER
  (
    ! BOUND(?president)||
    EXISTS
    {
      ?president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?day_before.
    } ||
    EXISTS
    {
      ?other_president wdt:P31 wd:Q5.
      ?other_president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?other_president_end.
      ?other_president wdt:P569 ?other_president_birthdate.
      ?other_president wdt:P570 ?day_before.
      FILTER (?other_president_birthdate < ?president_birthdate) # Other president is oldest
      FILTER (?other_president_end < ?day_before) # other president died as expresident
    }
  )
}
ORDER BY ?date
 Try it! Persons and institutions related in some way to Russian politics # Added 2022-03
# people and institutions that have the affiliation attribute assigned to Russia 
select ?item ?itemLabel ?itemDescription where { ?item wdt:P1416 wd:Q159. SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } } limit 100
 Try it!  高度なクエリ バブルチャート 死因の総合ランキング #defaultView:BubbleChart
#TEMPLATE={\"template\":\"Overall causes of death ranking of ?thing \",\"variables\":{\"?thing\": {\"query\":\"SELECT ?id  (COUNT(?id) AS ?count) WHERE {  ?sub wdt:P509 ?y.  ?sub wdt:P31 ?id. } GROUP BY ?id \"} } }
SELECT ?cid ?cause (COUNT(*) AS ?count) WHERE {
  BIND(wd:Q5 AS ?thing)
  ?pid wdt:P31 ?thing;
      wdt:P509 ?cid.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?cid rdfs:label ?cause}
}
GROUP BY ?cid ?cause
ORDER BY DESC(?count) ?cause
 Try it! WWII battle durations #defaultView:BubbleChart
SELECT DISTINCT ?item ?itemLabel (?end - ?start AS ?duration)
WHERE
{
	?item wdt:P361* wd:Q362 ;
          wdt:P31/wdt:P279* wd:Q178561 ;
          wdt:P580 ?start ;
          wdt:P582 ?end .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! 最も重い人トップ10 #defaultView:BubbleChart
#TEMPLATE={ \"template\": \"The top 10 heaviest ?type \", \"variables\": { \"?type\": { \"query\": \"SELECT DISTINCT ?id WHERE { ?i wdt:P2067 ?v. ?i wdt:P31 ?id}\" } } }
SELECT ?item ?itemLabel ?mass
WHERE {
  {
    SELECT ?item ?mass WHERE {
      ?item wdt:P31 wd:Q5;
            p:P2067/psn:P2067/wikibase:quantityAmount ?mass.
    }
    ORDER BY DESC(?mass)
    LIMIT 10
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,fr,de\" }
}
 Try it! Values of uses (P2283) in scholarly articles # Values of \"uses\" used in scholarly articles
# Demonstrates how to turn off the optimizer and start with the lowest number of edges first.
#defaultView:BubbleChart
SELECT ?uses ?usesLabel (count(?item) as ?c)
WHERE 
{
  hint:Query hint:optimizer \"None\".
  ?item wdt:P2283 ?uses. # ~20,000 edges
  ?item wdt:P31 wd:Q13442814. # ~37M edges
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
group by ?uses ?usesLabel
order by desc(?c)
 Try it! タイムライン 宇宙探査機のタイムライン #defaultView:Timeline
SELECT ?item ?itemLabel ?launchdate (SAMPLE(?image) AS ?image)
WHERE
{
	?item wdt:P31 wd:Q26529 .
    ?item wdt:P619 ?launchdate .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
    OPTIONAL { ?item wdt:P18 ?image }
}
GROUP BY ?item ?itemLabel ?launchdate
 Try it! Timeline of compositions by Wolfgang Amadeus Mozart #defaultView:Timeline
SELECT DISTINCT ?item ?itemLabel ?catalog_code ?publication_date
WHERE {
	?item wdt:P86 wd:Q254 ; # composer: W. A. Mozart
          wdt:P528 ?catalog_code ;
          wdt:P577 ?publication_date .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Dimensions Dimensions of elements #defaultView:Dimensions
SELECT ?elementLabel ?boiling_point ?melting_point ?electronegativity ?density ?mass WHERE {
?element wdt:P31 wd:Q11344;
   wdt:P2102 ?boiling_point;
   wdt:P2101 ?melting_point;
   wdt:P1108 ?electronegativity;
   wdt:P2054 ?density;
   wdt:P2067 ?mass.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
LIMIT 100
 Try it! Graph チンギス・カンの子供 #defaultView:Graph
PREFIX gas: <http://www.bigdata.com/rdf/gas#>

SELECT ?item ?itemLabel ?pic ?linkTo
WHERE {
  SERVICE gas:service {
    gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;
                gas:in wd:Q720 ;
                gas:traversalDirection \"Forward\" ;
                gas:out ?item ;
                gas:out1 ?depth ;

                gas:maxIterations 4 ;
                gas:linkType wdt:P40 .
  }
  OPTIONAL { ?item wdt:P40 ?linkTo }
  OPTIONAL { ?item wdt:P18 ?pic }
  SERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Firearms cartridges and which they are based on #Show firearms cartridges and which they are based on
#defaultView:Graph
SELECT 
?item ?itemLabel ?image 
?other ?otherLabel ?image2
WHERE
{
    ?item  wdt:P279+ wd:Q37144 .   # cartridges
    ?item  wdt:P144    ?other  .   # if the cartridge is based on another
    OPTIONAL {
      ?item  wdt:P18     ?image  .   # grab image
      ?other wdt:P18     ?image2 .   # grab image
    }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Music genres #graph rendering could be slow due to large number of results

#defaultView:Graph
SELECT ?item ?itemLabel ?_image ?_subclass_of ?_subclass_ofLabel
WHERE {
  ?item wdt:P31 wd:Q188451;
        wdt:P279 ?_subclass_of.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image. }
}
 Try it! Groups of characters in the Marvel universe #defaultView:Graph
SELECT ?char ?charLabel ?group ?groupLabel (\"7FFF00\" as ?rgb)
WHERE {
	?group wdt:P31 wd:Q14514600 ;  # group of fictional characters
          wdt:P1080 wd:Q931597.  # from Marvel universe
 ?char wdt:P463 ?group # member of group
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Line chart Average number of children per year The following query uses these:Items: human (Q5)   Properties: instance of (P31)   , number of children (P1971)   , date of birth (P569)   #defaultView:LineChart
SELECT  (str(?year) AS ?year) (AVG( ?_number_of_children ) AS ?count) WHERE {
  ?item wdt:P31 wd:Q5.
  ?item wdt:P1971 ?_number_of_children.
  ?item wdt:P569 ?_date_of_birth.
  BIND( year(?_date_of_birth) as ?year ).
  FILTER( ?year > 1900)
}

GROUP BY ?year Try it! Population of countries sharing a border with Germany #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q183;   # shares border with Germany
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Population of countries sharing a border with Cameroon #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q1009;  # shares border with Cameroon
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Number of books by year and genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?genreLabel )  WHERE {
  ?item wdt:P31 wd:Q571;
        wdt:P577 ?_publication_date;
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?_genre rdfs:label ?genreLabel.}
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Number of bands by year and genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count) (SAMPLE(?_genreLabel) AS ?_genreLabel) WHERE {
  ?item wdt:P31 wd:Q215380; # instance of: band
        wdt:P571 ?_date;   # inception
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_genre rdfs:label ?_genreLabel.}
  FILTER(?_date >= \"1960-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Bar chart Battles per year per country last 80 years #defaultView:BarChart

SELECT(SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel)  WHERE {
  ?subj wdt:P31 wd:Q178561.  # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. }  # start time
  OPTIONAL { ?subj wdt:P585 ?d2. }  # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. }  # end time
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(STR(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.  # country of location of battle
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_country rdfs:label ?_countryLabel.}
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Battles per year per continent and country last 80 years (animated) #defaultView:BarChart
SELECT (SAMPLE(?_continentLabel) AS ?continent) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel) (SAMPLE(?year) AS ?year)  WHERE {
  ?subj wdt:P31 wd:Q178561.        # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. } # start date
  OPTIONAL { ?subj wdt:P585 ?d2. } # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. } # end date
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(str(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.
  ?_country wdt:P30 ?_continent.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
       ?_country rdfs:label ?_countryLabel.
       ?_continent rdfs:label ?_continentLabel.}
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
}
GROUP BY ?year ?_country
 Try it! Yearly Population stacked by country The following query uses these:Items: sovereign state (Q3624078)   , estimation (Q791801)   , census (Q39825)   Properties: instance of (P31)   , population (P1082)   , point in time (P585)   , determination method (P459)   #defaultView:BarChart
# male/female population _must_ not be added unqualified as total population (!)
# this is an error and should be fixed at the item using P1540 and P1539 instead
# (wrong query result may be a manifestation of such)
SELECT ?year (AVG(?pop) AS ?population) ?countryLabel
       (COUNT(*) AS ?number_of_chosen_sources) (SAMPLE(?method) AS ?a_source_of_those_chosen)
WHERE
{
  ?country wdt:P31 wd:Q3624078;#more useful than Q6256;
           p:P1082 ?popStatement .
  ?popStatement ps:P1082 ?pop;
                pq:P585 ?date .
  BIND(STR(YEAR(?date)) AS ?year)
  #FILTER ( (YEAR(?date)) >= 2000 ) 
  # IF multiple ?pop values per country per year exist, we prioritize by source
  #       census 1st, others 2nd, estimation(s) 3rd, unknown sources (none supplies P459) last
  # note: wikibase:rank won't help here: each year may have multiple statements for ?pop value
  #       rank:prefered is used for the best value (or values) of the latest or current year
  #       rank:normal may be justified for all of multiple ?pop values for a given year
  OPTIONAL { ?popStatement pq:P459 ?method. }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?d; pq:P459 ?estimate ].
             FILTER(STR(YEAR(?d)) = ?year). FILTER(?estimate = wd:Q791801). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?e; pq:P459 ?census ].
             FILTER(STR(YEAR(?e)) = ?year). FILTER(?census = wd:Q39825). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?f; pq:P459 ?other ].
             FILTER(STR(YEAR(?f)) = ?year). FILTER(?other != wd:Q39825 && ?other != wd:Q791801). }
  BIND(COALESCE( 
    IF(BOUND(?census), ?census, 1/0),
    IF(BOUND(?other), ?other, 1/0),
    IF(BOUND(?estimate), ?estimate, 1/0) ) AS ?pref_method).
  FILTER(IF(BOUND(?pref_method),?method = ?pref_method,true))
  # .. still need to group if multiple values per country per year exist and
  # - none is qualified with P459
  # - multiple ?estimate or multiple ?census (>1 value from same source)
  # - ?other yields more than one source (>1 values are better than optionally
  #                         supplied estimate, but no census source available)

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }               
}
GROUP BY ?year ?countryLabel
ORDER BY ?year ?countryLabel Try it! Built power plants per year per country #defaultView:BarChart
SELECT (SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?count) (SAMPLE(?_countryLabel) AS ?_countryLabel) WHERE {
  ?object wdt:P31/wdt:P279* wd:Q134447. # Power stations or subtypes
  BIND(STR(YEAR(?_inception)) AS ?year)
  ?object wdt:P571 ?_inception;
          wdt:P17 ?_country.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?_country rdfs:label ?_countryLabel. }
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Bar chart of paintings produced per year by Piet Mondrian #defaultView:BarChart
SELECT ?year (COUNT(?year) as ?count) WHERE {
  ?painting wdt:P31 wd:Q3305213.
  ?painting wdt:P170 wd:Q151803.
  ?painting wdt:P571 ?inception.
  BIND(str(year(?inception)) AS ?year)
  OPTIONAL { ?painting wdt:P18 ?image. }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} GROUP BY ?year ?count ORDER BY ?year
 Try it! Bar chart with ratio of male / female creators for public art in city of Nijmegen, the Netherlands #defaultView:BarChart
select ?genderLabel (count(?gender) as ?genderCount) where {
  ?item wdt:P136 wd:Q557141;
        wdt:P131 wd:Q47887;
        wdt:P170 ?creator. 
    
  ?creator wdt:P21 ?gender.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} group by ?genderLabel ?genderCount
 Try it! Area chart Cancer deaths per year and cancer type The following query uses these:Items: human (Q5)   , cancer (Q12078)   Properties: instance of (P31)   , cause of death (P509)   , date of death (P570)   , subclass of (P279)   #defaultView:AreaChart
SELECT ?cod (STR(SAMPLE(?yearOfDeath)) AS ?YEAR_Of_DEATH) (COUNT(*) AS ?NUMBER_OF_DEATHS) ?cause WHERE {
  ?pid wdt:P31 wd:Q5;  # instance of human
       wdt:P509 ?cod;  # cause of death
       wdt:P570 ?_date_of_death.
  ?cod wdt:P279* wd:Q12078.  # type of cancer
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                         ?cod rdfs:label ?cause. }
  BIND ( YEAR(?_date_of_death) AS ?yearOfDeath )
  FILTER( ?yearOfDeath > 1960 )
}
GROUP BY ?cod ?cause ?yearOfDeath Try it! Tree Continents, countries, regions and capitals The following query uses these:Items: continent (Q5107)   , country (Q6256)   , city (Q515)   Properties: instance of (P31)   , continent (P30)   , contains the administrative territorial entity (P150)   , locator map image (P242)   , flag image (P41)   , capital (P36)   , image (P18)   , population (P1082)   , head of government (P6)   , twinned administrative body (P190)   , inception (P571)   , located in or next to body of water (P206)   , has part(s) (P527)   #defaultView:Tree
SELECT ?continent ?continentFlag ?continentLabel ?country ?countryLabel ?countryFlag ?region ?regionLabel ?regionFlag ?city ?cityLabel ?cityImage ?property ?propertyLabel ?value ?valueLabel WHERE {
  {
    SELECT * WHERE {
      ?continent wdt:P31 wd:Q5107.
      ?country wdt:P30 ?continent.
      ?country p:P31/ps:P31 wd:Q6256.
      ?country wdt:P150 ?region.
      OPTIONAL {
        ?continent wdt:P242 ?continentFlag.
        ?country wdt:P41 ?countryFlag.
        ?region wdt:P41 ?regionFlag.
      }
      OPTIONAL {
        ?region wdt:P36 ?city.
        ?city wdt:P31 wd:Q515.
        ?city wdt:P18 ?cityImage.
        OPTIONAL {
          VALUES (?prop) {
            (wdt:P1082)
            (wdt:P6)
            (wdt:P190)
            (wdt:P31)
            (wdt:P571)
            (wdt:P150)
            (wdt:P206)
            (wdt:P527)
          }
          ?city ?prop ?value.
          ?property ?ref ?prop.
          ?property rdf:type wikibase:Property.
        }
      }
    }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Viennese composers and their compositions by tonality The following query uses these:Items: human (Q5)   , Vienna (Q1741)   Properties: instance of (P31)   , place of birth (P19)   , place of death (P20)   , residence (P551)   , image (P18)   , composer (P86)   , tonality (P826)   #defaultView:Tree
SELECT ?composer ?composerLabel ?composerImage ?tonality ?tonalityLabel ?composition ?compositionLabel WHERE {
  ?composer wdt:P31 wd:Q5;
            wdt:P19|wdt:P20|wdt:P551 wd:Q1741.
  OPTIONAL { ?composer wdt:P18 ?composerImage. }
  ?composition wdt:P86 ?composer;
               wdt:P826 ?tonality.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de-at,de\". }
}
ORDER BY ?composerLabel ?tonalityLabel Try it! Treemap Popular television series (in treeview) #added before 2016-10

#defaultView:TreeMap
SELECT ?show ?showLabel  ?season ?cleanSeasonLabel ?episode ?episodeLabel
WHERE
{
	{
		BIND(wd:Q886 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-23) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	} 
	UNION
	{
		BIND(wd:Q16538 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-20) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}  
	UNION
	{
		BIND(wd:Q147235 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(CONCAT(\"S\", SUBSTR(?_seasonLabel, 25)) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}

	SERVICE wikibase:label {  bd:serviceParam wikibase:language \"en\" }
}
 Try it! Famous people categorised into eye and hair color #defaultView:TreeMap
SELECT ?eyes ?hairColorLabel (COUNT(?person) as ?count)
WHERE
{
	?person wdt:P1340 ?eyeColor.
    ?person wdt:P1884 ?hairColor.
    ?person wdt:P2048 ?height.
    ?eyeColor rdfs:label ?_eyeColorLabel.
    FILTER((LANG(?_eyeColorLabel)) = \"en\")
    BIND(CONCAT(?_eyeColorLabel, \" eyes\") AS ?eyes)
   
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
GROUP BY ?eyes ?hairColorLabel
 Try it! Scatter chart Number of films by year and genre The following query uses these:Items: film (Q11424)   Properties: instance of (P31)   , publication date (P577)   , genre (P136)   #defaultView:ScatterChart
SELECT   ?year  (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?label )  (?year as ?year_shown) WHERE {
  ?item wdt:P31 wd:Q11424.
  ?item wdt:P577 ?_publication_date.
  ?item wdt:P136 ?_genre.
  ?_genre rdfs:label ?_genreLabel.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  FILTER((LANG(?_genreLabel)) = \"en\")
 
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 30) Try it! Calendars Calendar of birth dates of women who studied at the University of Oxford SELECT ?monthLabel (?day_int as ?d) ?personLabel ?personDesc
   (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?rperson),32) )) as ?link) WHERE {
{ SELECT ?month_int ?month ?day_int (SAMPLE(?person) AS ?rperson) WHERE {
?month wdt:P31 wd:Q47018901; wdt:P1545 ?month_ordinal. # These lines generate a calendar from January 1 to December 31
?day p:P361 [ps:P361 ?month; pq:P1545 ?day_ordinal ].
 BIND(xsd:integer(?month_ordinal) AS ?month_int)
 BIND(xsd:integer(?day_ordinal) AS ?day_int)
OPTIONAL {
# Define the people we're interested in
{?person wdt:P69 wd:Q34433 } UNION {?person wdt:P69/wdt:P31 wd:Q2581649 } # educated at Oxford or an Oxford college
?person wdt:P21 wd:Q6581072 ; # female
   p:P569/psv:P569 ?date_node. # birth date
?date_node wikibase:timePrecision \"11\"^^xsd:integer ; # birth date has specific day
   wikibase:timeValue ?birthdate .        
filter(DAY(?birthdate)=?day_int) filter (MONTH(?birthdate)=?month_int )
}
} GROUP BY ?month_int ?month ?day_int }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
?rperson rdfs:label ?personLabel. ?rperson schema:description ?personDesc. ?month rdfs:label ?monthLabel }
} ORDER BY ?month_int ?day_int
 Try it! Samples with coordinates to illustrate maps Items around with user location #defaultView:Map{\"layer\":\"?instance_ofLabel\"}
SELECT ?place ?placeLabel ?image ?coordinate_location ?dist ?instance_of ?instance_ofLabel WHERE {
  SERVICE wikibase:around {
    ?place wdt:P625 ?coordinate_location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\".
    bd:serviceParam wikibase:distance ?dist.
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?place wdt:P18 ?image. }
  OPTIONAL { ?place wdt:P31 ?instance_of. }
}
 Try it! Locations of national parks #defaultView:Map
SELECT ?objectLabel ?objectDescription ?link ?coord
WHERE {
  ?object wdt:P31/wdt:P279? wd:Q46169 .
          OPTIONAL { ?object wdt:P856 ?link. } 
          OPTIONAL { ?object wdt:P625 ?coord . }
          SERVICE wikibase:label {
               bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\"
          }
}
 Try it! Airports within 100km of Berlin #added before 2016-10

#defaultView:Map
SELECT ?place ?placeLabel ?location
WHERE
{
  # Berlin coordinates
  wd:Q64 wdt:P625 ?berlinLoc .
  SERVICE wikibase:around {
    ?place wdt:P625 ?location .
    bd:serviceParam wikibase:center ?berlinLoc .
    bd:serviceParam wikibase:radius \"100\" .
  } .
  # Is an airport
  FILTER EXISTS { ?place wdt:P31/wdt:P279* wd:Q1248784 } .
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
  } 
}
 Try it! Airports in Belgium #List of airports in Belgium
#defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor
WHERE {
  ?airport wdt:P31 wd:Q1248784 ;
          ?range wd:Q31;
          wdt:P625 ?coor.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! International airports named after women # Airports named after women
# List of airports that are named after women
# Written by WiseWoman auf der #wmdemv 2019
# defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor ?namedafterLabel
WHERE {
  ?airport wdt:P31 wd:Q644371 ;  
          # ?range wd:Q183;
          wdt:P625 ?coor.
  ?airport wdt:P138 ?namedafter .
  ?namedafter wdt:P31 wd:Q5 .
  ?namedafter wdt:P21 wd:Q6581072 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Schools between San Jose, CA and Sacramento, CA The following query uses these:Items: San Jose (Q16553)   , Sacramento (Q18013)   , school (Q3914)   Properties: coordinate location (P625)   , instance of (P31)   , subclass of (P279)    Features: map (Q24515275)   , wikibase:box (Q26211169)   , wikibase:box with West and East corners (Q26211177)  # Schools between San Jose, CA and Sacramento, CA
#defaultView:Map
SELECT *
WHERE
{ hint:Query hint:optimizer \"None\" .
  wd:Q16553 wdt:P625 ?SJloc .
  wd:Q18013 wdt:P625 ?SCloc .
  SERVICE wikibase:box {
      ?place wdt:P625 ?location .
      bd:serviceParam wikibase:cornerWest ?SJloc .
      bd:serviceParam wikibase:cornerEast ?SCloc .
    }
  ?place wdt:P31/wdt:P279* wd:Q3914 .
} Try it! Big cities, grouped into map layers by population #defaultView:Map
SELECT DISTINCT ?city ?cityLabel (SAMPLE(?location) AS ?location) (MAX(?population) AS ?population) (SAMPLE(?layer) AS ?layer)
WHERE
{
  ?city wdt:P31/wdt:P279* wd:Q515;
        wdt:P625 ?location;
        wdt:P1082 ?population.
  FILTER(?population >= 500000).
  BIND(
    IF(?population < 1000000, \"<1M\",
    IF(?population < 2000000, \"1M-2M\",
    IF(?population < 5000000, \"2M-5M\",
    IF(?population < 10000000, \"5M-10M\",
    IF(?population < 20000000, \"10M-20M\",
    \">20M\")))))
    AS ?layer).
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?city ?cityLabel
 Try it! Places with free wifi #defaultView:Map
# Places with free wi-fi
SELECT ?item ?itemLabel (SAMPLE(?coord) AS ?coord)
WHERE {
	?item wdt:P2848 wd:Q1543615 ;  # wi-fi gratis
	      wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} GROUP BY ?item ?itemLabel
 Try it! Basic map of U1 subway stations in Berlin #added before 2016-10
#defaultView:Map
SELECT ?stationLabel ?coord
WHERE {
	?station wdt:P81 wd:Q99691 ;
		 wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\" }
}
 Try it! Advanced map of Stockholm Metro (Q272926) Map of Stockholm Metro (query) Locations of universities in Cameroon #added before 2016-10
#defaultView:Map
SELECT ?universityLabel ?universityDescription ?website ?coord
WHERE {
	?university wdt:P31/wdt:P279* wd:Q3918 ;
		wdt:P17 wd:Q1009 ;
		wdt:P625 ?coord .
	OPTIONAL {
		?university wdt:P856 ?website
	}
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"en,de\" .
	}
}
 Try it! Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany #added before 2016-10
 #defaultView:Map
SELECT ?item ?itemLabel ?coord
WHERE
{
	?item wdt:P31/wdt:P279* wd:Q486972;
    	      wdt:P17 wd:Q183;
    	      rdfs:label ?itemLabel;
    	      wdt:P625 ?coord;
    	 FILTER (lang(?itemLabel) = \"de\") .
    	 FILTER regex (?itemLabel, \"(ow|itz)$\").
}
 Try it! Locations of power stations #defaultView:Map
SELECT DISTINCT ?objectLabel ?coord ?layer
WHERE
{
  ?object wdt:P31/wdt:P279* wd:Q159719;
     wdt:P625 ?coord.
  ?object wdt:P31 ?type. ?type wdt:P279* wd:Q159719.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?type rdfs:label ?layer }
}
 Try it! Locations of stone arch bridges #defaultView:Map
SELECT ?label ?coord ?place ?image
WHERE {
	?place wdt:P31 wd:Q14276458 ;  # instance of deck arch bridge
            wdt:P186 wd:Q22731 ;  # made of stone
            wdt:P625 ?coord .
	OPTIONAL { ?place wdt:P18 ?image }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?place rdfs:label ?label }
}
 Try it! Locations of aqueducts #defaultView:Map
SELECT ?place ?placeLabel ?coord ?layer
WHERE {
   ?place wdt:P31/wdt:P279? wd:Q474 ; # instance of aqueduct
          wdt:P625 ?coord ;
          wdt:P31 ?type.
  ?type wdt:P279* wd:Q474
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                       ?type rdfs:label ?layer}
}
 Try it! Locations of archaeological sites, with images #defaultView:Map
SELECT ?siteLabel ?coord ?image ?site
WHERE {
   ?site wdt:P31/wdt:P279* wd:Q839954 ;
      wdt:P625 ?coord ;
      wdt:P18 ?image .
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Locations of castles that are also archaeological sites #defaultView:Map
SELECT ?label ?coord ?subj
WHERE {
   ?subj wdt:P31 wd:Q839954 ; # instance of archaeological site
         wdt:P31/wdt:P279* wd:Q23413 ;  # instance or subclass of castle
         wdt:P625 ?coord .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?subj rdfs:label ?label}
}
 Try it! Locations of battles #added before 2016-10
#defaultView:Map
SELECT ?label ?coord ?subj ?year
WHERE
{
	?subj wdt:P31 wd:Q178561 .
	?subj wdt:P625 ?coord .
	OPTIONAL {?subj wdt:P580 ?d1}
	OPTIONAL {?subj wdt:P585 ?d2}
  	OPTIONAL {?subj wdt:P582 ?d3}
	BIND(IF(!BOUND(?d1),(IF(!BOUND(?d2),?d3,?d2)),?d1) as ?date)
	BIND(YEAR(?date) as ?year)
	?subj rdfs:label ?label filter (lang(?label) = \"en\")
}
 Try it! Places of worship #added before 2016-10

#defaultView:Map
SELECT ?item ?itemLabel ?_coordinate_location ?_image WHERE {
  ?item wdt:P31/wdt:P279* wd:Q1370598.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
   ?item wdt:P625 ?_coordinate_location.
  ?item wdt:P18 ?_image.
}
 Try it! All museums (including subclass of museum) in Washington, D.C. with coordinates #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?name ?coord ?lat ?lon
WHERE {
   hint:Query hint:optimizer \"None\" .
   ?item wdt:P131* wd:Q61 .
   ?item wdt:P31/wdt:P279* wd:Q33506 .
   ?item wdt:P625 ?coord .
   ?item p:P625 ?coordinate .
   ?coordinate psv:P625 ?coordinate_node .
   ?coordinate_node wikibase:geoLatitude ?lat .
   ?coordinate_node wikibase:geoLongitude ?lon .
   SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
    ?item rdfs:label ?name
   }
}
ORDER BY ASC (?name)
 Try it! Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) #defaultView:Map
select ?museum ?museumLabel ?layer (sample(?location) as ?location) where {
  ?museum wdt:P31/wdt:P279* wd:Q33506;
          wdt:P17 wd:Q55;
          wdt:P625 ?location.
  optional { ?museum wdt:P2851 ?layer. }
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} group by ?museum ?museumLabel ?layer
 Try it! All ski resorts with coordinates #defaultView:Map
SELECT ?item ?itemLabel ?coord #?lat ?lon
WHERE
{
   ?item               wdt:P31        wd:Q130003.
   ?item               wdt:P625         ?coord.

#  ?item                 p:P625         ?statementnode.
#  ?statementnode      psv:P625         ?valuenode.
#  ?valuenode     wikibase:geoLatitude  ?lat.
#  ?valuenode     wikibase:geoLongitude ?lon.

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Lighthouses in Norway #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?coords ?image
WHERE {
	?item wdt:P31 wd:Q39715 ;
          wdt:P17 wd:Q20 ;
          wdt:P625 ?coords
	OPTIONAL { ?item wdt:P18 ?image } 
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],nb,nn,en,fi\"  } 
}
ORDER BY ?itemLabel
 Try it! Most beautiful villages of France #defaultView:Map
SELECT ?item ?itemLabel ?geoLocation ?image
WHERE {
    ?item wdt:P463 wd:Q1010307 ;  # member of Les Plus Beaux Villages de France (organisation)
          wdt:P625 ?geoLocation .
    OPTIONAL { ?item wdt:P18 ?image }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" }
}
 Try it! Locations in Fiji This query shows a way of mapping locations which span the 180th meridian, without the points being split between the left and right edges of the map. #defaultView:Map
select ?item ?coords_ where {
  ?item wdt:P17 wd:Q712 .
  ?item p:P625/psv:P625 ?coords .
  ?coords wikibase:geoLatitude ?lat ;
          wikibase:geoLongitude ?lon .
  bind(strdt(concat(\"Point(\", if((?lon < 0), str(?lon + 360), str(?lon)), \" \", str(?lat), \")\"), geo:wktLiteral) as ?coords_) .
} limit 1000
 Try it! Map of disasters, color-coded by disaster type Map of disasters color-coded by disaster type #defaultView:Map{\"layer\":\"?typeLabel\"}
SELECT ?item ?itemLabel ?geo ?type ?typeLabel (SAMPLE(?_image) AS ?image) WHERE {
  ?type wdt:P279* wd:Q3839081 .
  ?item wdt:P31 ?type ;
        wdt:P625 ?geo .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image }
}
GROUP BY ?item ?itemLabel ?geo ?type ?typeLabel
 Try it! Monuments and other heritage items located 1 km around the users location #defaultView:Map
select distinct ?monument ?monumentLabel ?heritageLabel (sample(?distance) as ?distance) (sample(?location) as ?location) (sample(?image) as ?image) where {
  ?monument wdt:P1435 ?heritage.
  
  service wikibase:around {   
    ?monument wdt:P625 ?location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\" . 
    bd:serviceParam wikibase:distance ?distance .
  }
  
  optional {
    ?monument wdt:P18 ?image.
  }
  
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,nl\". }
} group by ?monument ?monumentLabel ?heritageLabel order by ?distance
 Try it! Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article Map of newspapers in the United States by presence of the template Infobox newspaper in their English Wikipedia article integrates a text search for the template's name using the MediaWiki API into a SPARQL query #defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?id ?coords ?article ?rgb WHERE {
 ?c wdt:P279* wd:Q11032 .
  ?item wdt:P31 ?c .
 ?item wdt:P17|wdt:P495 wd:Q30 .
 OPTIONAL{?item wdt:P5454 ?id .}
 ?item wdt:P291 ?place .
 ?place wdt:P625 ?coords.
 OPTIONAL {   
   SELECT ?item ?pageid ?ns WHERE {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam mwapi:generator \"search\" .
      bd:serviceParam mwapi:gsrsearch \"hastemplate:\\\"infobox newspaper\\\"\" .
      bd:serviceParam mwapi:gsrlimit \"max\" .
      ?item wikibase:apiOutputItem mwapi:item .
      ?pageid wikibase:apiOutput \"@pageid\" .
      ?ns wikibase:apiOutput \"@ns\" .
    }
  } LIMIT 15000
 }
    
  OPTIONAL {
      ?article schema:about ?item .
      ?article schema:inLanguage \"en\" .
      FILTER (SUBSTR(str(?article), 1, 25) = \"https://en.wikipedia.org/\")
  }

  BIND( IF(BOUND(?article),   IF(BOUND(?ns), \"009500\" , \"FFF000\" )  ,  \"FF0000\"   )  AS ?rgb).  
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
 Try it! List of all the lakes in Cameroon The following query uses these:Items: lake (Q23397)   , Cameroon (Q1009)   Properties: instance of (P31)   , subclass of (P279)   , country (P17)   , coordinate location (P625)   , image (P18)    Features: map (Q24515275)  """@en,
    """Other languages: English Nederlands Türkçe español français svenska українська հայերեն 中文 日本語 Contents 1 查询范例 1.1 女性市长且最大的城市 1.2 按城市数量排序的有女市长的国家名单 1.3 常见人类姓氏 1.4 有最多变体的名（Given name） 1.5 虚拟人物中最常见的姓氏 1.6 有最多站点链接且没有图片的1921年或更晚出生的女性 1.7 今天谁过生日？ 1.8 Finding John and Sarah Connor 1.9 Data of Douglas Adams 1.10 Data of Douglas Adams (modified version) 1.11 Data of Barbara Harris - Grouped per item 1.12 埋葬在多地的人 1.13 All oldest living US ex-presidents in chronological order 1.14 与俄罗斯政治相关的人或机构 2 进阶查询 2.1 气泡图 2.1.1 死因排名概览 2.1.2 二战战斗时长 2.1.3 最重的10位人类 2.1.4 学术文章中最常见的uses (P2283) 2.2 时间表 2.2.1 太空探测器时间表 2.2.2 莫扎特作品时间表 2.3 维度 2.3.1 元素维度 2.4 图表 2.4.1 成吉思汗的孩子 2.4.2 Firearms cartridges and which they are based on 2.4.3 音乐流派 2.4.4 Groups of characters in the Marvel universe 2.5 折线图 2.5.1 Average number of children per year 2.5.2 Population of countries sharing a border with Germany 2.5.3 Population of countries sharing a border with Cameroon 2.5.4 Number of books by year and genre 2.5.5 Number of bands by year and genre 2.6 条形图 2.6.1 Battles per year per country last 80 years 2.6.2 Battles per year per continent and country last 80 years (animated) 2.6.3 Yearly Population stacked by country 2.6.4 Built power plants per year per country 2.6.5 Bar chart of paintings produced per year by Piet Mondrian 2.6.6 Bar chart with ratio of male / female creators for public art in city of Nijmegen, the Netherlands 2.7 面积图 2.7.1 Cancer deaths per year and cancer type 2.8 树 2.8.1 Continents, countries, regions and capitals 2.8.2 Viennese composers and their compositions by tonality 2.9 树状图 2.9.1 热门电视剧集（树状图） 2.9.2 Famous people categorised into eye and hair color 2.10 散点图 2.10.1 按年份和类型划分的电影数量 2.11 日历 2.11.1 Calendar of birth dates of women who studied at the University of Oxford 2.12 Samples with coordinates to illustrate maps 2.12.1 Items around with user location 2.12.2 Locations of national parks 2.12.3 Airports within 100km of Berlin 2.12.4 Airports in Belgium 2.12.5 International airports named after women 2.12.6 Schools between San Jose, CA and Sacramento, CA 2.12.7 Big cities, grouped into map layers by population 2.12.8 Places with free wifi 2.12.9 Basic map of U1 subway stations in Berlin 2.12.10 Advanced map of Stockholm Metro (Q272926) 2.12.11 Locations of universities in Cameroon 2.12.12 Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany 2.12.13 Locations of power stations 2.12.14 Locations of stone arch bridges 2.12.15 Locations of aqueducts 2.12.16 Locations of archaeological sites, with images 2.12.17 Locations of castles that are also archaeological sites 2.12.18 Locations of battles 2.12.19 Places of worship 2.12.20 All museums (including subclass of museum) in Washington, D.C. with coordinates 2.12.21 Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) 2.12.22 All ski resorts with coordinates 2.12.23 Lighthouses in Norway 2.12.24 Most beautiful villages of France 2.12.25 Locations in Fiji 2.12.26 Map of disasters, color-coded by disaster type 2.12.27 Monuments and other heritage items located 1 km around the users location 2.12.28 Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article 2.12.29 List of all the lakes in Cameroon 2.13 Listeria 2.13.1 Women born in Wales without an article in Welsh for Listeria 2.13.2 People born in Occitania for Listeria 2.13.3 People born in Scotland for Listeria 2.14 Gather Apply Scatter 2.14.1 Children of Genghis Khan 2.15 Sampling 2.15.1 Scientific articles without any description 2.16 Mediawiki API 2.16.1 Filter labels using EntitySearch from mwapi service to provide Full Text Search 2.16.2 Using mwapi to base a query on articles in a Wikipedia category 2.16.3 Find statements with references containing external links to wipo.int 2.16.4 Find metadata like artist and license for an image 2.16.5 Getting pageviews for all articles in a category 2.17 Federation 2.17.1 Get OpenStreetMap top level properties of Helsinki University main building 2.17.2 Get information of Europeana item 2.17.3 Share of renewable energy in electricity 2.17.4 Get OpenStreetMap nodes with inarisami label in wikipedia but without inarisami label in OSM 3 Queries useful to external services 3.1 The best ranked properties and values of a given item 查询范例 这些查询展现出SPARQL和WDQS图形用户界面的强大能力。 女性市长且最大的城市 #added before 2016-10
#TEMPLATE={\"template\":\"Largest ?c with ?sex head of government\",\"variables\":{\"?sex\":{\"query\":\" SELECT ?id WHERE { ?id wdt:P31 wd:Q48264 .  } \"},\"?c\":{\"query\":\"SELECT DISTINCT ?id WHERE {  ?c wdt:P31 ?id.  ?c p:P6 ?mayor. }\"} } }
SELECT DISTINCT ?city ?cityLabel ?mayor ?mayorLabel
WHERE
{
  BIND(wd:Q6581072 AS ?sex)
  BIND(wd:Q515 AS ?c)

	?city wdt:P31/wdt:P279* ?c .  # find instances of subclasses of city
	?city p:P6 ?statement .            # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .          # ... that has the value ?mayor
	?mayor wdt:P21 ?sex .       # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	
	# Now select the population value of the ?city
	# (wdt: properties use only statements of \"preferred\" rank if any, usually meaning \"current population\")
	?city wdt:P1082 ?population .
	# Optionally, find English labels for city and mayor:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
	}
}
ORDER BY DESC(?population)
LIMIT 10
 Try it! 按城市数量排序的有女市长的国家名单 #added before 2016-10
SELECT ?country ?countryLabel (count(*) AS ?count)
WHERE
{
	?city wdt:P31/wdt:P279* wd:Q515 . # find instances of subclasses of city
	?city p:P6 ?statement .           # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .         # ... that has the value ?mayor
	?mayor wdt:P21 wd:Q6581072 .      # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	?city wdt:P17 ?country .          # Also find the country of the city
 	
	# If available, get the \"ru\" label of the country, use \"en\" as fallback:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"ru,en\" .
	}
}
GROUP BY ?country ?countryLabel
ORDER BY DESC(?count)
LIMIT 100
 Try it! 常见人类姓氏 #defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?human) AS ?count) WHERE {
    # ?human wdt:P31 wd:Q5.
      ?human wdt:P734 ?surname.
    }
    GROUP BY ?surname ORDER BY DESC(?count) LIMIT 100
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} 
ORDER BY DESC(?count)
 Try it! 有最多变体的名（Given name） #added before 2016-10

SELECT ?name ?nameLabel (COUNT(?otherName) AS ?count)
WHERE
{
  ?name wdt:P31 wd:Q202444;
        wdt:P460 ?otherName.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?name ?nameLabel
ORDER BY DESC(?count)
LIMIT 10
 Try it! 虚拟人物中最常见的姓氏 #added before 2016-10

#defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?person) AS ?count) WHERE {
      ?person (wdt:P31/wdt:P279*) wd:Q95074.
      ?person wdt:P734 ?surname.
    }
    GROUP BY ?surname
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?count)
LIMIT 100
 Try it! 有最多站点链接且没有图片的1921年或更晚出生的女性 SELECT ?s ?desc ?linkcount
WHERE
{
  ?s wdt:P31 wd:Q5 ;   # human
     wdt:P21 wd:Q6581072 ;  # gender: female
     wdt:P569 ?born .
  FILTER (?born >= \"1921-01-01T00:00:00Z\"^^xsd:dateTime) .
  ?s wikibase:sitelinks ?linkcount .
  MINUS {
    ?s wdt:P18 []  # exclude if there is an image
  }
?s rdfs:label ?desc FILTER(lang(?desc)=\"en\").
}
GROUP BY ?s ?desc ?linkcount
ORDER BY DESC(?linkcount)
LIMIT 50
 Try it! 今天谁过生日？ #Whose birthday is today?
SELECT ?entity ?entityLabel ?entityDescription (YEAR(?date) as ?year)
WHERE {
    BIND(MONTH(NOW()) AS ?nowMonth)
    BIND(DAY(NOW()) AS ?nowDay)
    ?entity wdt:P569 ?date .
    FILTER (MONTH(?date) = ?nowMonth && DAY(?date) = ?nowDay)

SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }   
}
LIMIT 20
 Try it! Finding John and Sarah Connor #added before 2016-10
 SELECT * WHERE {
  ?p wdt:P1080 wd:Q620588 . # from fictional universe: Terminator
  ?p rdfs:label ?pl .
  FILTER (lang(?pl) = \"en\")
  ?p wdt:P25 ?m .  # ?m is mother of ?p
  ?m rdfs:label ?ml .
  FILTER (lang(?ml) = \"en\")
}
 Try it! Data of Douglas Adams #added before 2016-10

PREFIX entity: <http://www.wikidata.org/entity/>
#partial results

SELECT ?propUrl ?propLabel ?valUrl ?valLabel ?picture
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"identity\"@en AS ?propLabel ) .
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel
	}
	
  	?valUrl rdfs:label ?valLabel
	FILTER (LANG(?valLabel) = 'en') .
	OPTIONAL{ ?valUrl wdt:P18 ?picture .}
	FILTER (lang(?propLabel) = 'en' )
}
ORDER BY ?propUrl ?valUrl
LIMIT 200
 Try it! Data of Douglas Adams (modified version) PREFIX entity: <http://www.wikidata.org/entity/>

#  In addition to the original query this one comes with some advantages:
#  - You will get only literals as results, (even if the values are stored as IRI in wikibase)
#  - That means you will also get properties as birth date, alphanumeric identifier and so on.
#  - The list is ordered numerically by property number. (So P19 comes before P100) 
#  - All label, altLabel and description in a given Language are included.
#  You may open a separate column ?valUrl if you need also the IRI
#
#  Please advise, if there is an option to put the Q-Number  and/or the Language 
#  code into a runtime variable. 

SELECT ?propNumber ?propLabel ?val
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"Name\"@de AS ?propLabel ) .
       entity:Q42 rdfs:label ?val .
      
        FILTER (LANG(?val) = \"de\") 
	}
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"AltLabel\"@de AS ?propLabel ) .
        optional{entity:Q42 skos:altLabel ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"Beschreibung\"@de AS ?propLabel ) .
        optional{entity:Q42 schema:description ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
   	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' )
        filter  isliteral(?valUrl) 
        BIND(?valUrl AS ?val)
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' ) 
        filter  isIRI(?valUrl) 
        ?valUrl rdfs:label ?valLabel 
		FILTER (LANG(?valLabel) = \"de\") 
         BIND(CONCAT(?valLabel) AS ?val)
	}
        BIND( SUBSTR(str(?propUrl),38, 250) AS ?propNumber)
}
ORDER BY xsd:integer(?propNumber)
 Try it! Data of Barbara Harris - Grouped per item # This query collects data related to entities on Barbara Harris. 
# It demonstrates collecting individual attributes and concatenating them for easier post processing. 

SELECT 
  ?item
(SAMPLE(?itemLabel) AS ?itemLabel) 
(SAMPLE(?itemDescription) AS ?itemDescription) 
  (SAMPLE(?pic) AS ?pic) 
(SAMPLE(?date_of_birth) AS ?date_of_birth) 
(GROUP_CONCAT(DISTINCT ?country_of_citizenship; SEPARATOR=\", \") AS ?country_of_citizenships)
(GROUP_CONCAT(DISTINCT ?country_of_citizenshipLabel; SEPARATOR=\", \") AS ?country_of_citizenshipLabels)

(GROUP_CONCAT(DISTINCT ?occupation; SEPARATOR=\", \") AS ?occupations)
(GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR=\", \") AS ?occupationLabels)

(GROUP_CONCAT(DISTINCT ?country; SEPARATOR=\", \") AS ?countries)
(GROUP_CONCAT(DISTINCT ?countryLabel; SEPARATOR=\", \") AS ?countryLabels)


WHERE {
  VALUES ?item {
    wd:Q269809
    wd:Q274590
    wd:Q24576851
    wd:Q807461
    wd:Q4858963
    wd:Q27954833
    wd:Q4859015
    wd:Q826930
  }
  OPTIONAL { ?item wdt:P18 ?pic. }
  OPTIONAL { ?item wdt:P27 ?country_of_citizenship. }
  OPTIONAL { ?item wdt:P106 ?occupation. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  OPTIONAL { ?item wdt:P31 ?instance_of. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
    ?item rdfs:label ?itemLabel.
    ?item rdfs:description ?itemDescription.
    ?country_of_citizenship rdfs:label ?country_of_citizenshipLabel.
    ?occupation rdfs:label ?occupationLabel.
    ?country rdfs:label ?countryLabel.
  }
}
GROUP BY ?item
 Try it! 埋葬在多地的人 # This query collects burial places of individuals, and sorts them in decreasing order
SELECT ?human (COUNT(?place) AS ?count) WHERE {
  ?human wdt:P31 wd:Q5.
  ?human wdt:P119 ?place.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}
GROUP BY ?human 
ORDER BY DESC(?count)
 Try it! All oldest living US ex-presidents in chronological order # Added 2020-07
# All persons who have been the oldest living US ex-president with dates in chronological order
SELECT DISTINCT ?date ?president ?presidentLabel
WITH
{
  # Persons who is/were president of USA
  SELECT ?president ?presidentLabel ?president_enddate ?president_birthdate ?president_deathdate
  WHERE
  {
    ?president wdt:P31 wd:Q5.
    ?president p:P39 ?president_statement.
    ?president_statement ps:P39 wd:Q11696.
    ?president_statement pq:P582 ?president_enddate.
    ?president wdt:P569 ?president_birthdate.
    OPTIONAL { ?president wdt:P570 ?president_deathdate. }
    ?president rdfs:label ?presidentLabel.
    FILTER (LANG(?presidentLabel) = \"en\")
  }
} AS %presidents
WITH
{
  # Dates where who is oldest living expresident can change
  SELECT DISTINCT ?date
  WHERE
  {
    {
      INCLUDE %presidents
      BIND(?president_enddate + \"P1D\"^^xsd:duration AS ?date)
    }
    UNION
    {
      INCLUDE %presidents
      BIND(?president_deathdate + \"P1D\"^^xsd:duration AS ?date)
    }
  }
} AS %dates
WITH
{
  # Find the age for all living expresidents for each value of ?date
  SELECT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    INCLUDE %presidents
    FILTER (?president_enddate < ?date) # Must have become expresident
    FILTER IF(BOUND(?president_deathdate), ?president_deathdate >= ?date, true) # Must still be living
    BIND (?date - ?president_birthdate AS ?age)
  }
} AS %ages
WITH
{
  # Find the oldest age for a living expresident for each value of ?date
  SELECT ?date (MAX(?age) AS ?oldest)
  WHERE
  {
    INCLUDE %ages
  }
  GROUP BY ?date
} AS %oldest
WITH
{
  SELECT DISTINCT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    OPTIONAL
    {
      INCLUDE %ages
      INCLUDE %oldest
      FILTER (?age = ?oldest)
    }
  }
} AS %result
WHERE
{
  # A result is a change from the previous date if ?president's presidency ended the day before ?date,
  # or if an older expresident died the day before ?date. Filter out results that don't fulfill this.
  INCLUDE %result
  BIND (?date - \"P1D\"^^xsd:duration AS ?day_before)
  FILTER
  (
    ! BOUND(?president)||
    EXISTS
    {
      ?president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?day_before.
    } ||
    EXISTS
    {
      ?other_president wdt:P31 wd:Q5.
      ?other_president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?other_president_end.
      ?other_president wdt:P569 ?other_president_birthdate.
      ?other_president wdt:P570 ?day_before.
      FILTER (?other_president_birthdate < ?president_birthdate) # Other president is oldest
      FILTER (?other_president_end < ?day_before) # other president died as expresident
    }
  )
}
ORDER BY ?date
 Try it! 与俄罗斯政治相关的人或机构 # Added 2022-03
# people and institutions that have the affiliation attribute assigned to Russia 
select ?item ?itemLabel ?itemDescription where { ?item wdt:P1416 wd:Q159. SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } } limit 100
 Try it!  进阶查询 气泡图 死因排名概览 #defaultView:BubbleChart
#TEMPLATE={\"template\":\"Overall causes of death ranking of ?thing \",\"variables\":{\"?thing\": {\"query\":\"SELECT ?id  (COUNT(?id) AS ?count) WHERE {  ?sub wdt:P509 ?y.  ?sub wdt:P31 ?id. } GROUP BY ?id \"} } }
SELECT ?cid ?cause (COUNT(*) AS ?count) WHERE {
  BIND(wd:Q5 AS ?thing)
  ?pid wdt:P31 ?thing;
      wdt:P509 ?cid.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?cid rdfs:label ?cause}
}
GROUP BY ?cid ?cause
ORDER BY DESC(?count) ?cause
 Try it! 二战战斗时长 #defaultView:BubbleChart
SELECT DISTINCT ?item ?itemLabel (?end - ?start AS ?duration)
WHERE
{
	?item wdt:P361* wd:Q362 ;
          wdt:P31/wdt:P279* wd:Q178561 ;
          wdt:P580 ?start ;
          wdt:P582 ?end .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! 最重的10位人类 #defaultView:BubbleChart
#TEMPLATE={ \"template\": \"The top 10 heaviest ?type \", \"variables\": { \"?type\": { \"query\": \"SELECT DISTINCT ?id WHERE { ?i wdt:P2067 ?v. ?i wdt:P31 ?id}\" } } }
SELECT ?item ?itemLabel ?mass
WHERE {
  {
    SELECT ?item ?mass WHERE {
      ?item wdt:P31 wd:Q5;
            p:P2067/psn:P2067/wikibase:quantityAmount ?mass.
    }
    ORDER BY DESC(?mass)
    LIMIT 10
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,fr,de\" }
}
 Try it! 学术文章中最常见的uses (P2283) # Values of \"uses\" used in scholarly articles
# Demonstrates how to turn off the optimizer and start with the lowest number of edges first.
#defaultView:BubbleChart
SELECT ?uses ?usesLabel (count(?item) as ?c)
WHERE 
{
  hint:Query hint:optimizer \"None\".
  ?item wdt:P2283 ?uses. # ~20,000 edges
  ?item wdt:P31 wd:Q13442814. # ~37M edges
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
group by ?uses ?usesLabel
order by desc(?c)
 Try it! 时间表 太空探测器时间表 #defaultView:Timeline
SELECT ?item ?itemLabel ?launchdate (SAMPLE(?image) AS ?image)
WHERE
{
	?item wdt:P31 wd:Q26529 .
    ?item wdt:P619 ?launchdate .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
    OPTIONAL { ?item wdt:P18 ?image }
}
GROUP BY ?item ?itemLabel ?launchdate
 Try it! 莫扎特作品时间表 #defaultView:Timeline
SELECT DISTINCT ?item ?itemLabel ?catalog_code ?publication_date
WHERE {
	?item wdt:P86 wd:Q254 ; # composer: W. A. Mozart
          wdt:P528 ?catalog_code ;
          wdt:P577 ?publication_date .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! 维度 元素维度 #defaultView:Dimensions
SELECT ?elementLabel ?boiling_point ?melting_point ?electronegativity ?density ?mass WHERE {
?element wdt:P31 wd:Q11344;
   wdt:P2102 ?boiling_point;
   wdt:P2101 ?melting_point;
   wdt:P1108 ?electronegativity;
   wdt:P2054 ?density;
   wdt:P2067 ?mass.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
LIMIT 100
 Try it! 图表 成吉思汗的孩子 #defaultView:Graph
PREFIX gas: <http://www.bigdata.com/rdf/gas#>

SELECT ?item ?itemLabel ?pic ?linkTo
WHERE {
  SERVICE gas:service {
    gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;
                gas:in wd:Q720 ;
                gas:traversalDirection \"Forward\" ;
                gas:out ?item ;
                gas:out1 ?depth ;

                gas:maxIterations 4 ;
                gas:linkType wdt:P40 .
  }
  OPTIONAL { ?item wdt:P40 ?linkTo }
  OPTIONAL { ?item wdt:P18 ?pic }
  SERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Firearms cartridges and which they are based on #Show firearms cartridges and which they are based on
#defaultView:Graph
SELECT 
?item ?itemLabel ?image 
?other ?otherLabel ?image2
WHERE
{
    ?item  wdt:P279+ wd:Q37144 .   # cartridges
    ?item  wdt:P144    ?other  .   # if the cartridge is based on another
    OPTIONAL {
      ?item  wdt:P18     ?image  .   # grab image
      ?other wdt:P18     ?image2 .   # grab image
    }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! 音乐流派 #graph rendering could be slow due to large number of results

#defaultView:Graph
SELECT ?item ?itemLabel ?_image ?_subclass_of ?_subclass_ofLabel
WHERE {
  ?item wdt:P31 wd:Q188451;
        wdt:P279 ?_subclass_of.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image. }
}
 Try it! Groups of characters in the Marvel universe #defaultView:Graph
SELECT ?char ?charLabel ?group ?groupLabel (\"7FFF00\" as ?rgb)
WHERE {
	?group wdt:P31 wd:Q14514600 ;  # group of fictional characters
          wdt:P1080 wd:Q931597.  # from Marvel universe
 ?char wdt:P463 ?group # member of group
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! 折线图 Average number of children per year The following query uses these:Items: human (Q5)   Properties: instance of (P31)   , number of children (P1971)   , date of birth (P569)   #defaultView:LineChart
SELECT  (str(?year) AS ?year) (AVG( ?_number_of_children ) AS ?count) WHERE {
  ?item wdt:P31 wd:Q5.
  ?item wdt:P1971 ?_number_of_children.
  ?item wdt:P569 ?_date_of_birth.
  BIND( year(?_date_of_birth) as ?year ).
  FILTER( ?year > 1900)
}

GROUP BY ?year Try it! Population of countries sharing a border with Germany #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q183;   # shares border with Germany
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Population of countries sharing a border with Cameroon #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q1009;  # shares border with Cameroon
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Number of books by year and genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?genreLabel )  WHERE {
  ?item wdt:P31 wd:Q571;
        wdt:P577 ?_publication_date;
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?_genre rdfs:label ?genreLabel.}
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Number of bands by year and genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count) (SAMPLE(?_genreLabel) AS ?_genreLabel) WHERE {
  ?item wdt:P31 wd:Q215380; # instance of: band
        wdt:P571 ?_date;   # inception
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_genre rdfs:label ?_genreLabel.}
  FILTER(?_date >= \"1960-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! 条形图 Battles per year per country last 80 years #defaultView:BarChart

SELECT(SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel)  WHERE {
  ?subj wdt:P31 wd:Q178561.  # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. }  # start time
  OPTIONAL { ?subj wdt:P585 ?d2. }  # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. }  # end time
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(STR(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.  # country of location of battle
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_country rdfs:label ?_countryLabel.}
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Battles per year per continent and country last 80 years (animated) #defaultView:BarChart
SELECT (SAMPLE(?_continentLabel) AS ?continent) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel) (SAMPLE(?year) AS ?year)  WHERE {
  ?subj wdt:P31 wd:Q178561.        # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. } # start date
  OPTIONAL { ?subj wdt:P585 ?d2. } # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. } # end date
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(str(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.
  ?_country wdt:P30 ?_continent.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
       ?_country rdfs:label ?_countryLabel.
       ?_continent rdfs:label ?_continentLabel.}
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
}
GROUP BY ?year ?_country
 Try it! Yearly Population stacked by country The following query uses these:Items: sovereign state (Q3624078)   , estimation (Q791801)   , census (Q39825)   Properties: instance of (P31)   , population (P1082)   , point in time (P585)   , determination method (P459)   #defaultView:BarChart
# male/female population _must_ not be added unqualified as total population (!)
# this is an error and should be fixed at the item using P1540 and P1539 instead
# (wrong query result may be a manifestation of such)
SELECT ?year (AVG(?pop) AS ?population) ?countryLabel
       (COUNT(*) AS ?number_of_chosen_sources) (SAMPLE(?method) AS ?a_source_of_those_chosen)
WHERE
{
  ?country wdt:P31 wd:Q3624078;#more useful than Q6256;
           p:P1082 ?popStatement .
  ?popStatement ps:P1082 ?pop;
                pq:P585 ?date .
  BIND(STR(YEAR(?date)) AS ?year)
  #FILTER ( (YEAR(?date)) >= 2000 ) 
  # IF multiple ?pop values per country per year exist, we prioritize by source
  #       census 1st, others 2nd, estimation(s) 3rd, unknown sources (none supplies P459) last
  # note: wikibase:rank won't help here: each year may have multiple statements for ?pop value
  #       rank:prefered is used for the best value (or values) of the latest or current year
  #       rank:normal may be justified for all of multiple ?pop values for a given year
  OPTIONAL { ?popStatement pq:P459 ?method. }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?d; pq:P459 ?estimate ].
             FILTER(STR(YEAR(?d)) = ?year). FILTER(?estimate = wd:Q791801). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?e; pq:P459 ?census ].
             FILTER(STR(YEAR(?e)) = ?year). FILTER(?census = wd:Q39825). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?f; pq:P459 ?other ].
             FILTER(STR(YEAR(?f)) = ?year). FILTER(?other != wd:Q39825 && ?other != wd:Q791801). }
  BIND(COALESCE( 
    IF(BOUND(?census), ?census, 1/0),
    IF(BOUND(?other), ?other, 1/0),
    IF(BOUND(?estimate), ?estimate, 1/0) ) AS ?pref_method).
  FILTER(IF(BOUND(?pref_method),?method = ?pref_method,true))
  # .. still need to group if multiple values per country per year exist and
  # - none is qualified with P459
  # - multiple ?estimate or multiple ?census (>1 value from same source)
  # - ?other yields more than one source (>1 values are better than optionally
  #                         supplied estimate, but no census source available)

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }               
}
GROUP BY ?year ?countryLabel
ORDER BY ?year ?countryLabel Try it! Built power plants per year per country #defaultView:BarChart
SELECT (SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?count) (SAMPLE(?_countryLabel) AS ?_countryLabel) WHERE {
  ?object wdt:P31/wdt:P279* wd:Q134447. # Power stations or subtypes
  BIND(STR(YEAR(?_inception)) AS ?year)
  ?object wdt:P571 ?_inception;
          wdt:P17 ?_country.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?_country rdfs:label ?_countryLabel. }
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Bar chart of paintings produced per year by Piet Mondrian #defaultView:BarChart
SELECT ?year (COUNT(?year) as ?count) WHERE {
  ?painting wdt:P31 wd:Q3305213.
  ?painting wdt:P170 wd:Q151803.
  ?painting wdt:P571 ?inception.
  BIND(str(year(?inception)) AS ?year)
  OPTIONAL { ?painting wdt:P18 ?image. }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} GROUP BY ?year ?count ORDER BY ?year
 Try it! Bar chart with ratio of male / female creators for public art in city of Nijmegen, the Netherlands #defaultView:BarChart
select ?genderLabel (count(?gender) as ?genderCount) where {
  ?item wdt:P136 wd:Q557141;
        wdt:P131 wd:Q47887;
        wdt:P170 ?creator. 
    
  ?creator wdt:P21 ?gender.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} group by ?genderLabel ?genderCount
 Try it! 面积图 Cancer deaths per year and cancer type The following query uses these:Items: human (Q5)   , cancer (Q12078)   Properties: instance of (P31)   , cause of death (P509)   , date of death (P570)   , subclass of (P279)   #defaultView:AreaChart
SELECT ?cod (STR(SAMPLE(?yearOfDeath)) AS ?YEAR_Of_DEATH) (COUNT(*) AS ?NUMBER_OF_DEATHS) ?cause WHERE {
  ?pid wdt:P31 wd:Q5;  # instance of human
       wdt:P509 ?cod;  # cause of death
       wdt:P570 ?_date_of_death.
  ?cod wdt:P279* wd:Q12078.  # type of cancer
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                         ?cod rdfs:label ?cause. }
  BIND ( YEAR(?_date_of_death) AS ?yearOfDeath )
  FILTER( ?yearOfDeath > 1960 )
}
GROUP BY ?cod ?cause ?yearOfDeath Try it! 树 Continents, countries, regions and capitals The following query uses these:Items: continent (Q5107)   , country (Q6256)   , city (Q515)   Properties: instance of (P31)   , continent (P30)   , contains the administrative territorial entity (P150)   , locator map image (P242)   , flag image (P41)   , capital (P36)   , image (P18)   , population (P1082)   , head of government (P6)   , twinned administrative body (P190)   , inception (P571)   , located in or next to body of water (P206)   , has part(s) (P527)   #defaultView:Tree
SELECT ?continent ?continentFlag ?continentLabel ?country ?countryLabel ?countryFlag ?region ?regionLabel ?regionFlag ?city ?cityLabel ?cityImage ?property ?propertyLabel ?value ?valueLabel WHERE {
  {
    SELECT * WHERE {
      ?continent wdt:P31 wd:Q5107.
      ?country wdt:P30 ?continent.
      ?country p:P31/ps:P31 wd:Q6256.
      ?country wdt:P150 ?region.
      OPTIONAL {
        ?continent wdt:P242 ?continentFlag.
        ?country wdt:P41 ?countryFlag.
        ?region wdt:P41 ?regionFlag.
      }
      OPTIONAL {
        ?region wdt:P36 ?city.
        ?city wdt:P31 wd:Q515.
        ?city wdt:P18 ?cityImage.
        OPTIONAL {
          VALUES (?prop) {
            (wdt:P1082)
            (wdt:P6)
            (wdt:P190)
            (wdt:P31)
            (wdt:P571)
            (wdt:P150)
            (wdt:P206)
            (wdt:P527)
          }
          ?city ?prop ?value.
          ?property ?ref ?prop.
          ?property rdf:type wikibase:Property.
        }
      }
    }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Viennese composers and their compositions by tonality The following query uses these:Items: human (Q5)   , Vienna (Q1741)   Properties: instance of (P31)   , place of birth (P19)   , place of death (P20)   , residence (P551)   , image (P18)   , composer (P86)   , tonality (P826)   #defaultView:Tree
SELECT ?composer ?composerLabel ?composerImage ?tonality ?tonalityLabel ?composition ?compositionLabel WHERE {
  ?composer wdt:P31 wd:Q5;
            wdt:P19|wdt:P20|wdt:P551 wd:Q1741.
  OPTIONAL { ?composer wdt:P18 ?composerImage. }
  ?composition wdt:P86 ?composer;
               wdt:P826 ?tonality.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de-at,de\". }
}
ORDER BY ?composerLabel ?tonalityLabel Try it! 树状图 热门电视剧集（树状图） #added before 2016-10

#defaultView:TreeMap
SELECT ?show ?showLabel  ?season ?cleanSeasonLabel ?episode ?episodeLabel
WHERE
{
	{
		BIND(wd:Q886 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-23) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	} 
	UNION
	{
		BIND(wd:Q16538 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-20) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}  
	UNION
	{
		BIND(wd:Q147235 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(CONCAT(\"S\", SUBSTR(?_seasonLabel, 25)) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}

	SERVICE wikibase:label {  bd:serviceParam wikibase:language \"en\" }
}
 Try it! Famous people categorised into eye and hair color #defaultView:TreeMap
SELECT ?eyes ?hairColorLabel (COUNT(?person) as ?count)
WHERE
{
	?person wdt:P1340 ?eyeColor.
    ?person wdt:P1884 ?hairColor.
    ?person wdt:P2048 ?height.
    ?eyeColor rdfs:label ?_eyeColorLabel.
    FILTER((LANG(?_eyeColorLabel)) = \"en\")
    BIND(CONCAT(?_eyeColorLabel, \" eyes\") AS ?eyes)
   
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
GROUP BY ?eyes ?hairColorLabel
 Try it! 散点图 按年份和类型划分的电影数量 The following query uses these:Items: film (Q11424)   Properties: instance of (P31)   , publication date (P577)   , genre (P136)   #defaultView:ScatterChart
SELECT   ?year  (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?label )  (?year as ?year_shown) WHERE {
  ?item wdt:P31 wd:Q11424.
  ?item wdt:P577 ?_publication_date.
  ?item wdt:P136 ?_genre.
  ?_genre rdfs:label ?_genreLabel.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  FILTER((LANG(?_genreLabel)) = \"en\")
 
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 30) Try it! 日历 Calendar of birth dates of women who studied at the University of Oxford SELECT ?monthLabel (?day_int as ?d) ?personLabel ?personDesc
   (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?rperson),32) )) as ?link) WHERE {
{ SELECT ?month_int ?month ?day_int (SAMPLE(?person) AS ?rperson) WHERE {
?month wdt:P31 wd:Q47018901; wdt:P1545 ?month_ordinal. # These lines generate a calendar from January 1 to December 31
?day p:P361 [ps:P361 ?month; pq:P1545 ?day_ordinal ].
 BIND(xsd:integer(?month_ordinal) AS ?month_int)
 BIND(xsd:integer(?day_ordinal) AS ?day_int)
OPTIONAL {
# Define the people we're interested in
{?person wdt:P69 wd:Q34433 } UNION {?person wdt:P69/wdt:P31 wd:Q2581649 } # educated at Oxford or an Oxford college
?person wdt:P21 wd:Q6581072 ; # female
   p:P569/psv:P569 ?date_node. # birth date
?date_node wikibase:timePrecision \"11\"^^xsd:integer ; # birth date has specific day
   wikibase:timeValue ?birthdate .        
filter(DAY(?birthdate)=?day_int) filter (MONTH(?birthdate)=?month_int )
}
} GROUP BY ?month_int ?month ?day_int }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
?rperson rdfs:label ?personLabel. ?rperson schema:description ?personDesc. ?month rdfs:label ?monthLabel }
} ORDER BY ?month_int ?day_int
 Try it! Samples with coordinates to illustrate maps Items around with user location #defaultView:Map{\"layer\":\"?instance_ofLabel\"}
SELECT ?place ?placeLabel ?image ?coordinate_location ?dist ?instance_of ?instance_ofLabel WHERE {
  SERVICE wikibase:around {
    ?place wdt:P625 ?coordinate_location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\".
    bd:serviceParam wikibase:distance ?dist.
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?place wdt:P18 ?image. }
  OPTIONAL { ?place wdt:P31 ?instance_of. }
}
 Try it! Locations of national parks #defaultView:Map
SELECT ?objectLabel ?objectDescription ?link ?coord
WHERE {
  ?object wdt:P31/wdt:P279? wd:Q46169 .
          OPTIONAL { ?object wdt:P856 ?link. } 
          OPTIONAL { ?object wdt:P625 ?coord . }
          SERVICE wikibase:label {
               bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\"
          }
}
 Try it! Airports within 100km of Berlin #added before 2016-10

#defaultView:Map
SELECT ?place ?placeLabel ?location
WHERE
{
  # Berlin coordinates
  wd:Q64 wdt:P625 ?berlinLoc .
  SERVICE wikibase:around {
    ?place wdt:P625 ?location .
    bd:serviceParam wikibase:center ?berlinLoc .
    bd:serviceParam wikibase:radius \"100\" .
  } .
  # Is an airport
  FILTER EXISTS { ?place wdt:P31/wdt:P279* wd:Q1248784 } .
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
  } 
}
 Try it! Airports in Belgium #List of airports in Belgium
#defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor
WHERE {
  ?airport wdt:P31 wd:Q1248784 ;
          ?range wd:Q31;
          wdt:P625 ?coor.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! International airports named after women # Airports named after women
# List of airports that are named after women
# Written by WiseWoman auf der #wmdemv 2019
# defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor ?namedafterLabel
WHERE {
  ?airport wdt:P31 wd:Q644371 ;  
          # ?range wd:Q183;
          wdt:P625 ?coor.
  ?airport wdt:P138 ?namedafter .
  ?namedafter wdt:P31 wd:Q5 .
  ?namedafter wdt:P21 wd:Q6581072 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Schools between San Jose, CA and Sacramento, CA The following query uses these:Items: San Jose (Q16553)   , Sacramento (Q18013)   , school (Q3914)   Properties: coordinate location (P625)   , instance of (P31)   , subclass of (P279)    Features: map (Q24515275)   , wikibase:box (Q26211169)   , wikibase:box with West and East corners (Q26211177)  # Schools between San Jose, CA and Sacramento, CA
#defaultView:Map
SELECT *
WHERE
{ hint:Query hint:optimizer \"None\" .
  wd:Q16553 wdt:P625 ?SJloc .
  wd:Q18013 wdt:P625 ?SCloc .
  SERVICE wikibase:box {
      ?place wdt:P625 ?location .
      bd:serviceParam wikibase:cornerWest ?SJloc .
      bd:serviceParam wikibase:cornerEast ?SCloc .
    }
  ?place wdt:P31/wdt:P279* wd:Q3914 .
} Try it! Big cities, grouped into map layers by population #defaultView:Map
SELECT DISTINCT ?city ?cityLabel (SAMPLE(?location) AS ?location) (MAX(?population) AS ?population) (SAMPLE(?layer) AS ?layer)
WHERE
{
  ?city wdt:P31/wdt:P279* wd:Q515;
        wdt:P625 ?location;
        wdt:P1082 ?population.
  FILTER(?population >= 500000).
  BIND(
    IF(?population < 1000000, \"<1M\",
    IF(?population < 2000000, \"1M-2M\",
    IF(?population < 5000000, \"2M-5M\",
    IF(?population < 10000000, \"5M-10M\",
    IF(?population < 20000000, \"10M-20M\",
    \">20M\")))))
    AS ?layer).
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?city ?cityLabel
 Try it! Places with free wifi #defaultView:Map
# Places with free wi-fi
SELECT ?item ?itemLabel (SAMPLE(?coord) AS ?coord)
WHERE {
	?item wdt:P2848 wd:Q1543615 ;  # wi-fi gratis
	      wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} GROUP BY ?item ?itemLabel
 Try it! Basic map of U1 subway stations in Berlin #added before 2016-10
#defaultView:Map
SELECT ?stationLabel ?coord
WHERE {
	?station wdt:P81 wd:Q99691 ;
		 wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\" }
}
 Try it! Advanced map of Stockholm Metro (Q272926) Map of Stockholm Metro (query) Locations of universities in Cameroon #added before 2016-10
#defaultView:Map
SELECT ?universityLabel ?universityDescription ?website ?coord
WHERE {
	?university wdt:P31/wdt:P279* wd:Q3918 ;
		wdt:P17 wd:Q1009 ;
		wdt:P625 ?coord .
	OPTIONAL {
		?university wdt:P856 ?website
	}
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"en,de\" .
	}
}
 Try it! Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany #added before 2016-10
 #defaultView:Map
SELECT ?item ?itemLabel ?coord
WHERE
{
	?item wdt:P31/wdt:P279* wd:Q486972;
    	      wdt:P17 wd:Q183;
    	      rdfs:label ?itemLabel;
    	      wdt:P625 ?coord;
    	 FILTER (lang(?itemLabel) = \"de\") .
    	 FILTER regex (?itemLabel, \"(ow|itz)$\").
}
 Try it! Locations of power stations #defaultView:Map
SELECT DISTINCT ?objectLabel ?coord ?layer
WHERE
{
  ?object wdt:P31/wdt:P279* wd:Q159719;
     wdt:P625 ?coord.
  ?object wdt:P31 ?type. ?type wdt:P279* wd:Q159719.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?type rdfs:label ?layer }
}
 Try it! Locations of stone arch bridges #defaultView:Map
SELECT ?label ?coord ?place ?image
WHERE {
	?place wdt:P31 wd:Q14276458 ;  # instance of deck arch bridge
            wdt:P186 wd:Q22731 ;  # made of stone
            wdt:P625 ?coord .
	OPTIONAL { ?place wdt:P18 ?image }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?place rdfs:label ?label }
}
 Try it! Locations of aqueducts #defaultView:Map
SELECT ?place ?placeLabel ?coord ?layer
WHERE {
   ?place wdt:P31/wdt:P279? wd:Q474 ; # instance of aqueduct
          wdt:P625 ?coord ;
          wdt:P31 ?type.
  ?type wdt:P279* wd:Q474
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                       ?type rdfs:label ?layer}
}
 Try it! Locations of archaeological sites, with images #defaultView:Map
SELECT ?siteLabel ?coord ?image ?site
WHERE {
   ?site wdt:P31/wdt:P279* wd:Q839954 ;
      wdt:P625 ?coord ;
      wdt:P18 ?image .
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Locations of castles that are also archaeological sites #defaultView:Map
SELECT ?label ?coord ?subj
WHERE {
   ?subj wdt:P31 wd:Q839954 ; # instance of archaeological site
         wdt:P31/wdt:P279* wd:Q23413 ;  # instance or subclass of castle
         wdt:P625 ?coord .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?subj rdfs:label ?label}
}
 Try it! Locations of battles #added before 2016-10
#defaultView:Map
SELECT ?label ?coord ?subj ?year
WHERE
{
	?subj wdt:P31 wd:Q178561 .
	?subj wdt:P625 ?coord .
	OPTIONAL {?subj wdt:P580 ?d1}
	OPTIONAL {?subj wdt:P585 ?d2}
  	OPTIONAL {?subj wdt:P582 ?d3}
	BIND(IF(!BOUND(?d1),(IF(!BOUND(?d2),?d3,?d2)),?d1) as ?date)
	BIND(YEAR(?date) as ?year)
	?subj rdfs:label ?label filter (lang(?label) = \"en\")
}
 Try it! Places of worship #added before 2016-10

#defaultView:Map
SELECT ?item ?itemLabel ?_coordinate_location ?_image WHERE {
  ?item wdt:P31/wdt:P279* wd:Q1370598.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
   ?item wdt:P625 ?_coordinate_location.
  ?item wdt:P18 ?_image.
}
 Try it! All museums (including subclass of museum) in Washington, D.C. with coordinates #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?name ?coord ?lat ?lon
WHERE {
   hint:Query hint:optimizer \"None\" .
   ?item wdt:P131* wd:Q61 .
   ?item wdt:P31/wdt:P279* wd:Q33506 .
   ?item wdt:P625 ?coord .
   ?item p:P625 ?coordinate .
   ?coordinate psv:P625 ?coordinate_node .
   ?coordinate_node wikibase:geoLatitude ?lat .
   ?coordinate_node wikibase:geoLongitude ?lon .
   SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
    ?item rdfs:label ?name
   }
}
ORDER BY ASC (?name)
 Try it! Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) #defaultView:Map
select ?museum ?museumLabel ?layer (sample(?location) as ?location) where {
  ?museum wdt:P31/wdt:P279* wd:Q33506;
          wdt:P17 wd:Q55;
          wdt:P625 ?location.
  optional { ?museum wdt:P2851 ?layer. }
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} group by ?museum ?museumLabel ?layer
 Try it! All ski resorts with coordinates #defaultView:Map
SELECT ?item ?itemLabel ?coord #?lat ?lon
WHERE
{
   ?item               wdt:P31        wd:Q130003.
   ?item               wdt:P625         ?coord.

#  ?item                 p:P625         ?statementnode.
#  ?statementnode      psv:P625         ?valuenode.
#  ?valuenode     wikibase:geoLatitude  ?lat.
#  ?valuenode     wikibase:geoLongitude ?lon.

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Lighthouses in Norway #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?coords ?image
WHERE {
	?item wdt:P31 wd:Q39715 ;
          wdt:P17 wd:Q20 ;
          wdt:P625 ?coords
	OPTIONAL { ?item wdt:P18 ?image } 
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],nb,nn,en,fi\"  } 
}
ORDER BY ?itemLabel
 Try it! Most beautiful villages of France #defaultView:Map
SELECT ?item ?itemLabel ?geoLocation ?image
WHERE {
    ?item wdt:P463 wd:Q1010307 ;  # member of Les Plus Beaux Villages de France (organisation)
          wdt:P625 ?geoLocation .
    OPTIONAL { ?item wdt:P18 ?image }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" }
}
 Try it! Locations in Fiji This query shows a way of mapping locations which span the 180th meridian, without the points being split between the left and right edges of the map. #defaultView:Map
select ?item ?coords_ where {
  ?item wdt:P17 wd:Q712 .
  ?item p:P625/psv:P625 ?coords .
  ?coords wikibase:geoLatitude ?lat ;
          wikibase:geoLongitude ?lon .
  bind(strdt(concat(\"Point(\", if((?lon < 0), str(?lon + 360), str(?lon)), \" \", str(?lat), \")\"), geo:wktLiteral) as ?coords_) .
} limit 1000
 Try it! Map of disasters, color-coded by disaster type Map of disasters color-coded by disaster type #defaultView:Map{\"layer\":\"?typeLabel\"}
SELECT ?item ?itemLabel ?geo ?type ?typeLabel (SAMPLE(?_image) AS ?image) WHERE {
  ?type wdt:P279* wd:Q3839081 .
  ?item wdt:P31 ?type ;
        wdt:P625 ?geo .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image }
}
GROUP BY ?item ?itemLabel ?geo ?type ?typeLabel
 Try it! Monuments and other heritage items located 1 km around the users location #defaultView:Map
select distinct ?monument ?monumentLabel ?heritageLabel (sample(?distance) as ?distance) (sample(?location) as ?location) (sample(?image) as ?image) where {
  ?monument wdt:P1435 ?heritage.
  
  service wikibase:around {   
    ?monument wdt:P625 ?location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\" . 
    bd:serviceParam wikibase:distance ?distance .
  }
  
  optional {
    ?monument wdt:P18 ?image.
  }
  
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,nl\". }
} group by ?monument ?monumentLabel ?heritageLabel order by ?distance
 Try it! Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article Map of newspapers in the United States by presence of the template Infobox newspaper in their English Wikipedia article integrates a text search for the template's name using the MediaWiki API into a SPARQL query #defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?id ?coords ?article ?rgb WHERE {
 ?c wdt:P279* wd:Q11032 .
  ?item wdt:P31 ?c .
 ?item wdt:P17|wdt:P495 wd:Q30 .
 OPTIONAL{?item wdt:P5454 ?id .}
 ?item wdt:P291 ?place .
 ?place wdt:P625 ?coords.
 OPTIONAL {   
   SELECT ?item ?pageid ?ns WHERE {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam mwapi:generator \"search\" .
      bd:serviceParam mwapi:gsrsearch \"hastemplate:\\\"infobox newspaper\\\"\" .
      bd:serviceParam mwapi:gsrlimit \"max\" .
      ?item wikibase:apiOutputItem mwapi:item .
      ?pageid wikibase:apiOutput \"@pageid\" .
      ?ns wikibase:apiOutput \"@ns\" .
    }
  } LIMIT 15000
 }
    
  OPTIONAL {
      ?article schema:about ?item .
      ?article schema:inLanguage \"en\" .
      FILTER (SUBSTR(str(?article), 1, 25) = \"https://en.wikipedia.org/\")
  }

  BIND( IF(BOUND(?article),   IF(BOUND(?ns), \"009500\" , \"FFF000\" )  ,  \"FF0000\"   )  AS ?rgb).  
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
 Try it! List of all the lakes in Cameroon The following query uses these:Items: lake (Q23397)   , Cameroon (Q1009)   Properties: instance of (P31)   , subclass of (P279)   , country (P17)   , coordinate location (P625)   , image (P18)    Features: map (Q24515275)  """@en,
    """Other languages: English Nederlands Türkçe español français svenska українська հայերեն 中文 日本語 Contents 1 Showcase Queries 1.1 Largest cities with female mayor 1.2 List of countries ordered by the number of their cities with female mayor 1.3 Popular surnames among humans 1.4 Given names with most variations 1.5 Popular surnames among fictional characters 1.6 Women with most sitelinks and no image born in 1921 or later 1.7 Whose birthday is today? 1.8 Finding John and Sarah Connor 1.9 Data of Douglas Adams 1.10 Data of Douglas Adams (modified version) 1.11 Data of Barbara Harris - Grouped per item 1.12 People who have been buried in multiple places 1.13 All oldest living US ex-presidents in chronological order 1.14 Persons and institutions related in some way to Russian politics 2 Advanced Queries 2.1 Bubble charts 2.1.1 Overall causes of death ranking 2.1.2 WWII battle durations 2.1.3 The top 10 heaviest humans 2.1.4 Values of uses (P2283) in scholarly articles 2.2 Timeline 2.2.1 Timeline of space probes 2.2.2 Timeline of compositions by Wolfgang Amadeus Mozart 2.3 Dimensions 2.3.1 Dimensions of elements 2.4 Graph 2.4.1 Children of Genghis Khan 2.4.2 Firearms cartridges and which they are based on 2.4.3 Music genres 2.4.4 Groups of characters in the Marvel universe 2.5 Line chart 2.5.1 Average number of children per year 2.5.2 Population of countries sharing a border with Germany 2.5.3 Population of countries sharing a border with Cameroon 2.5.4 Number of books by year and genre 2.5.5 Number of bands by year and genre 2.6 Bar chart 2.6.1 Battles per year per country last 80 years 2.6.2 Battles per year per continent and country last 80 years (animated) 2.6.3 Yearly Population stacked by country 2.6.4 Built power plants per year per country 2.6.5 Bar chart of paintings produced per year by Piet Mondrian 2.6.6 Bar chart with ratio of male / female creators for public art in city of Nijmegen, the Netherlands 2.7 Area chart 2.7.1 Cancer deaths per year and cancer type 2.8 Ծառ 2.8.1 Continents, countries, regions and capitals 2.8.2 Viennese composers and their compositions by tonality 2.9 Treemap 2.9.1 Popular television series (in treeview) 2.9.2 Famous people categorised into eye and hair color 2.10 Scatter chart 2.10.1 Number of films by year and genre 2.11 Օրացույցներ 2.11.1 Calendar of birth dates of women who studied at the University of Oxford 2.12 Samples with coordinates to illustrate maps 2.12.1 Items around with user location 2.12.2 Locations of national parks 2.12.3 Airports within 100km of Berlin 2.12.4 Օդանավակայաններ Բելգիայում 2.12.5 International airports named after women 2.12.6 Schools between San Jose, CA and Sacramento, CA 2.12.7 Big cities, grouped into map layers by population 2.12.8 Places with free wifi 2.12.9 Basic map of U1 subway stations in Berlin 2.12.10 Advanced map of Stockholm Metro (Q272926) 2.12.11 Locations of universities in Cameroon 2.12.12 Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany 2.12.13 Locations of power stations 2.12.14 Locations of stone arch bridges 2.12.15 Locations of aqueducts 2.12.16 Locations of archaeological sites, with images 2.12.17 Locations of castles that are also archaeological sites 2.12.18 Locations of battles 2.12.19 Places of worship 2.12.20 All museums (including subclass of museum) in Washington, D.C. with coordinates 2.12.21 Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) 2.12.22 All ski resorts with coordinates 2.12.23 Փարոսներ Նորվեգիայում 2.12.24 Most beautiful villages of France 2.12.25 Locations in Fiji 2.12.26 Map of disasters, color-coded by disaster type 2.12.27 Monuments and other heritage items located 1 km around the users location 2.12.28 Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article 2.12.29 List of all the lakes in Cameroon 2.13 Listeria 2.13.1 Women born in Wales without an article in Welsh for Listeria 2.13.2 People born in Occitania for Listeria 2.13.3 People born in Scotland for Listeria 2.14 Gather Apply Scatter 2.14.1 Children of Genghis Khan 2.15 Sampling 2.15.1 Scientific articles without any description 2.16 Mediawiki API 2.16.1 Filter labels using EntitySearch from mwapi service to provide Full Text Search 2.16.2 Using mwapi to base a query on articles in a Wikipedia category 2.16.3 Find statements with references containing external links to wipo.int 2.16.4 Find metadata like artist and license for an image 2.16.5 Getting pageviews for all articles in a category 2.17 Federation 2.17.1 Get OpenStreetMap top level properties of Helsinki University main building 2.17.2 Get information of Europeana item 2.17.3 Share of renewable energy in electricity 2.17.4 Get OpenStreetMap nodes with inarisami label in wikipedia but without inarisami label in OSM 3 Queries useful to external services 3.1 The best ranked properties and values of a given item Showcase Queries These queries show the power and functionality of SPARQL and WDQS GUI. Largest cities with female mayor #added before 2016-10
#TEMPLATE={\"template\":\"Largest ?c with ?sex head of government\",\"variables\":{\"?sex\":{\"query\":\" SELECT ?id WHERE { ?id wdt:P31 wd:Q48264 .  } \"},\"?c\":{\"query\":\"SELECT DISTINCT ?id WHERE {  ?c wdt:P31 ?id.  ?c p:P6 ?mayor. }\"} } }
SELECT DISTINCT ?city ?cityLabel ?mayor ?mayorLabel
WHERE
{
  BIND(wd:Q6581072 AS ?sex)
  BIND(wd:Q515 AS ?c)

	?city wdt:P31/wdt:P279* ?c .  # find instances of subclasses of city
	?city p:P6 ?statement .            # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .          # ... that has the value ?mayor
	?mayor wdt:P21 ?sex .       # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	
	# Now select the population value of the ?city
	# (wdt: properties use only statements of \"preferred\" rank if any, usually meaning \"current population\")
	?city wdt:P1082 ?population .
	# Optionally, find English labels for city and mayor:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
	}
}
ORDER BY DESC(?population)
LIMIT 10
 Try it! List of countries ordered by the number of their cities with female mayor #added before 2016-10
SELECT ?country ?countryLabel (count(*) AS ?count)
WHERE
{
	?city wdt:P31/wdt:P279* wd:Q515 . # find instances of subclasses of city
	?city p:P6 ?statement .           # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .         # ... that has the value ?mayor
	?mayor wdt:P21 wd:Q6581072 .      # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	?city wdt:P17 ?country .          # Also find the country of the city
 	
	# If available, get the \"ru\" label of the country, use \"en\" as fallback:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"ru,en\" .
	}
}
GROUP BY ?country ?countryLabel
ORDER BY DESC(?count)
LIMIT 100
 Try it! Popular surnames among humans #defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?human) AS ?count) WHERE {
    # ?human wdt:P31 wd:Q5.
      ?human wdt:P734 ?surname.
    }
    GROUP BY ?surname ORDER BY DESC(?count) LIMIT 100
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} 
ORDER BY DESC(?count)
 Try it! Given names with most variations #added before 2016-10

SELECT ?name ?nameLabel (COUNT(?otherName) AS ?count)
WHERE
{
  ?name wdt:P31 wd:Q202444;
        wdt:P460 ?otherName.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?name ?nameLabel
ORDER BY DESC(?count)
LIMIT 10
 Try it! Popular surnames among fictional characters #added before 2016-10

#defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?person) AS ?count) WHERE {
      ?person (wdt:P31/wdt:P279*) wd:Q95074.
      ?person wdt:P734 ?surname.
    }
    GROUP BY ?surname
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?count)
LIMIT 100
 Try it! Women with most sitelinks and no image born in 1921 or later SELECT ?s ?desc ?linkcount
WHERE
{
  ?s wdt:P31 wd:Q5 ;   # human
     wdt:P21 wd:Q6581072 ;  # gender: female
     wdt:P569 ?born .
  FILTER (?born >= \"1921-01-01T00:00:00Z\"^^xsd:dateTime) .
  ?s wikibase:sitelinks ?linkcount .
  MINUS {
    ?s wdt:P18 []  # exclude if there is an image
  }
?s rdfs:label ?desc FILTER(lang(?desc)=\"en\").
}
GROUP BY ?s ?desc ?linkcount
ORDER BY DESC(?linkcount)
LIMIT 50
 Try it! Whose birthday is today? #Whose birthday is today?
SELECT ?entity ?entityLabel ?entityDescription (YEAR(?date) as ?year)
WHERE {
    BIND(MONTH(NOW()) AS ?nowMonth)
    BIND(DAY(NOW()) AS ?nowDay)
    ?entity wdt:P569 ?date .
    FILTER (MONTH(?date) = ?nowMonth && DAY(?date) = ?nowDay)

SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }   
}
LIMIT 20
 Try it! Finding John and Sarah Connor #added before 2016-10
 SELECT * WHERE {
  ?p wdt:P1080 wd:Q620588 . # from fictional universe: Terminator
  ?p rdfs:label ?pl .
  FILTER (lang(?pl) = \"en\")
  ?p wdt:P25 ?m .  # ?m is mother of ?p
  ?m rdfs:label ?ml .
  FILTER (lang(?ml) = \"en\")
}
 Try it! Data of Douglas Adams #added before 2016-10

PREFIX entity: <http://www.wikidata.org/entity/>
#partial results

SELECT ?propUrl ?propLabel ?valUrl ?valLabel ?picture
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"identity\"@en AS ?propLabel ) .
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel
	}
	
  	?valUrl rdfs:label ?valLabel
	FILTER (LANG(?valLabel) = 'en') .
	OPTIONAL{ ?valUrl wdt:P18 ?picture .}
	FILTER (lang(?propLabel) = 'en' )
}
ORDER BY ?propUrl ?valUrl
LIMIT 200
 Try it! Data of Douglas Adams (modified version) PREFIX entity: <http://www.wikidata.org/entity/>

#  In addition to the original query this one comes with some advantages:
#  - You will get only literals as results, (even if the values are stored as IRI in wikibase)
#  - That means you will also get properties as birth date, alphanumeric identifier and so on.
#  - The list is ordered numerically by property number. (So P19 comes before P100) 
#  - All label, altLabel and description in a given Language are included.
#  You may open a separate column ?valUrl if you need also the IRI
#
#  Please advise, if there is an option to put the Q-Number  and/or the Language 
#  code into a runtime variable. 

SELECT ?propNumber ?propLabel ?val
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"Name\"@de AS ?propLabel ) .
       entity:Q42 rdfs:label ?val .
      
        FILTER (LANG(?val) = \"de\") 
	}
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"AltLabel\"@de AS ?propLabel ) .
        optional{entity:Q42 skos:altLabel ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"Beschreibung\"@de AS ?propLabel ) .
        optional{entity:Q42 schema:description ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
   	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' )
        filter  isliteral(?valUrl) 
        BIND(?valUrl AS ?val)
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' ) 
        filter  isIRI(?valUrl) 
        ?valUrl rdfs:label ?valLabel 
		FILTER (LANG(?valLabel) = \"de\") 
         BIND(CONCAT(?valLabel) AS ?val)
	}
        BIND( SUBSTR(str(?propUrl),38, 250) AS ?propNumber)
}
ORDER BY xsd:integer(?propNumber)
 Try it! Data of Barbara Harris - Grouped per item # This query collects data related to entities on Barbara Harris. 
# It demonstrates collecting individual attributes and concatenating them for easier post processing. 

SELECT 
  ?item
(SAMPLE(?itemLabel) AS ?itemLabel) 
(SAMPLE(?itemDescription) AS ?itemDescription) 
  (SAMPLE(?pic) AS ?pic) 
(SAMPLE(?date_of_birth) AS ?date_of_birth) 
(GROUP_CONCAT(DISTINCT ?country_of_citizenship; SEPARATOR=\", \") AS ?country_of_citizenships)
(GROUP_CONCAT(DISTINCT ?country_of_citizenshipLabel; SEPARATOR=\", \") AS ?country_of_citizenshipLabels)

(GROUP_CONCAT(DISTINCT ?occupation; SEPARATOR=\", \") AS ?occupations)
(GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR=\", \") AS ?occupationLabels)

(GROUP_CONCAT(DISTINCT ?country; SEPARATOR=\", \") AS ?countries)
(GROUP_CONCAT(DISTINCT ?countryLabel; SEPARATOR=\", \") AS ?countryLabels)


WHERE {
  VALUES ?item {
    wd:Q269809
    wd:Q274590
    wd:Q24576851
    wd:Q807461
    wd:Q4858963
    wd:Q27954833
    wd:Q4859015
    wd:Q826930
  }
  OPTIONAL { ?item wdt:P18 ?pic. }
  OPTIONAL { ?item wdt:P27 ?country_of_citizenship. }
  OPTIONAL { ?item wdt:P106 ?occupation. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  OPTIONAL { ?item wdt:P31 ?instance_of. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
    ?item rdfs:label ?itemLabel.
    ?item rdfs:description ?itemDescription.
    ?country_of_citizenship rdfs:label ?country_of_citizenshipLabel.
    ?occupation rdfs:label ?occupationLabel.
    ?country rdfs:label ?countryLabel.
  }
}
GROUP BY ?item
 Try it! People who have been buried in multiple places # This query collects burial places of individuals, and sorts them in decreasing order
SELECT ?human (COUNT(?place) AS ?count) WHERE {
  ?human wdt:P31 wd:Q5.
  ?human wdt:P119 ?place.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}
GROUP BY ?human 
ORDER BY DESC(?count)
 Try it! All oldest living US ex-presidents in chronological order # Added 2020-07
# All persons who have been the oldest living US ex-president with dates in chronological order
SELECT DISTINCT ?date ?president ?presidentLabel
WITH
{
  # Persons who is/were president of USA
  SELECT ?president ?presidentLabel ?president_enddate ?president_birthdate ?president_deathdate
  WHERE
  {
    ?president wdt:P31 wd:Q5.
    ?president p:P39 ?president_statement.
    ?president_statement ps:P39 wd:Q11696.
    ?president_statement pq:P582 ?president_enddate.
    ?president wdt:P569 ?president_birthdate.
    OPTIONAL { ?president wdt:P570 ?president_deathdate. }
    ?president rdfs:label ?presidentLabel.
    FILTER (LANG(?presidentLabel) = \"en\")
  }
} AS %presidents
WITH
{
  # Dates where who is oldest living expresident can change
  SELECT DISTINCT ?date
  WHERE
  {
    {
      INCLUDE %presidents
      BIND(?president_enddate + \"P1D\"^^xsd:duration AS ?date)
    }
    UNION
    {
      INCLUDE %presidents
      BIND(?president_deathdate + \"P1D\"^^xsd:duration AS ?date)
    }
  }
} AS %dates
WITH
{
  # Find the age for all living expresidents for each value of ?date
  SELECT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    INCLUDE %presidents
    FILTER (?president_enddate < ?date) # Must have become expresident
    FILTER IF(BOUND(?president_deathdate), ?president_deathdate >= ?date, true) # Must still be living
    BIND (?date - ?president_birthdate AS ?age)
  }
} AS %ages
WITH
{
  # Find the oldest age for a living expresident for each value of ?date
  SELECT ?date (MAX(?age) AS ?oldest)
  WHERE
  {
    INCLUDE %ages
  }
  GROUP BY ?date
} AS %oldest
WITH
{
  SELECT DISTINCT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    OPTIONAL
    {
      INCLUDE %ages
      INCLUDE %oldest
      FILTER (?age = ?oldest)
    }
  }
} AS %result
WHERE
{
  # A result is a change from the previous date if ?president's presidency ended the day before ?date,
  # or if an older expresident died the day before ?date. Filter out results that don't fulfill this.
  INCLUDE %result
  BIND (?date - \"P1D\"^^xsd:duration AS ?day_before)
  FILTER
  (
    ! BOUND(?president)||
    EXISTS
    {
      ?president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?day_before.
    } ||
    EXISTS
    {
      ?other_president wdt:P31 wd:Q5.
      ?other_president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?other_president_end.
      ?other_president wdt:P569 ?other_president_birthdate.
      ?other_president wdt:P570 ?day_before.
      FILTER (?other_president_birthdate < ?president_birthdate) # Other president is oldest
      FILTER (?other_president_end < ?day_before) # other president died as expresident
    }
  )
}
ORDER BY ?date
 Try it! Persons and institutions related in some way to Russian politics # Added 2022-03
# people and institutions that have the affiliation attribute assigned to Russia 
select ?item ?itemLabel ?itemDescription where { ?item wdt:P1416 wd:Q159. SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } } limit 100
 Try it!  Advanced Queries Bubble charts Overall causes of death ranking #defaultView:BubbleChart
#TEMPLATE={\"template\":\"Overall causes of death ranking of ?thing \",\"variables\":{\"?thing\": {\"query\":\"SELECT ?id  (COUNT(?id) AS ?count) WHERE {  ?sub wdt:P509 ?y.  ?sub wdt:P31 ?id. } GROUP BY ?id \"} } }
SELECT ?cid ?cause (COUNT(*) AS ?count) WHERE {
  BIND(wd:Q5 AS ?thing)
  ?pid wdt:P31 ?thing;
      wdt:P509 ?cid.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?cid rdfs:label ?cause}
}
GROUP BY ?cid ?cause
ORDER BY DESC(?count) ?cause
 Try it! WWII battle durations #defaultView:BubbleChart
SELECT DISTINCT ?item ?itemLabel (?end - ?start AS ?duration)
WHERE
{
	?item wdt:P361* wd:Q362 ;
          wdt:P31/wdt:P279* wd:Q178561 ;
          wdt:P580 ?start ;
          wdt:P582 ?end .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! The top 10 heaviest humans #defaultView:BubbleChart
#TEMPLATE={ \"template\": \"The top 10 heaviest ?type \", \"variables\": { \"?type\": { \"query\": \"SELECT DISTINCT ?id WHERE { ?i wdt:P2067 ?v. ?i wdt:P31 ?id}\" } } }
SELECT ?item ?itemLabel ?mass
WHERE {
  {
    SELECT ?item ?mass WHERE {
      ?item wdt:P31 wd:Q5;
            p:P2067/psn:P2067/wikibase:quantityAmount ?mass.
    }
    ORDER BY DESC(?mass)
    LIMIT 10
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,fr,de\" }
}
 Try it! Values of uses (P2283) in scholarly articles # Values of \"uses\" used in scholarly articles
# Demonstrates how to turn off the optimizer and start with the lowest number of edges first.
#defaultView:BubbleChart
SELECT ?uses ?usesLabel (count(?item) as ?c)
WHERE 
{
  hint:Query hint:optimizer \"None\".
  ?item wdt:P2283 ?uses. # ~20,000 edges
  ?item wdt:P31 wd:Q13442814. # ~37M edges
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
group by ?uses ?usesLabel
order by desc(?c)
 Try it! Timeline Timeline of space probes #defaultView:Timeline
SELECT ?item ?itemLabel ?launchdate (SAMPLE(?image) AS ?image)
WHERE
{
	?item wdt:P31 wd:Q26529 .
    ?item wdt:P619 ?launchdate .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
    OPTIONAL { ?item wdt:P18 ?image }
}
GROUP BY ?item ?itemLabel ?launchdate
 Try it! Timeline of compositions by Wolfgang Amadeus Mozart #defaultView:Timeline
SELECT DISTINCT ?item ?itemLabel ?catalog_code ?publication_date
WHERE {
	?item wdt:P86 wd:Q254 ; # composer: W. A. Mozart
          wdt:P528 ?catalog_code ;
          wdt:P577 ?publication_date .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Dimensions Dimensions of elements #defaultView:Dimensions
SELECT ?elementLabel ?boiling_point ?melting_point ?electronegativity ?density ?mass WHERE {
?element wdt:P31 wd:Q11344;
   wdt:P2102 ?boiling_point;
   wdt:P2101 ?melting_point;
   wdt:P1108 ?electronegativity;
   wdt:P2054 ?density;
   wdt:P2067 ?mass.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
LIMIT 100
 Try it! Graph Children of Genghis Khan #defaultView:Graph
PREFIX gas: <http://www.bigdata.com/rdf/gas#>

SELECT ?item ?itemLabel ?pic ?linkTo
WHERE {
  SERVICE gas:service {
    gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;
                gas:in wd:Q720 ;
                gas:traversalDirection \"Forward\" ;
                gas:out ?item ;
                gas:out1 ?depth ;

                gas:maxIterations 4 ;
                gas:linkType wdt:P40 .
  }
  OPTIONAL { ?item wdt:P40 ?linkTo }
  OPTIONAL { ?item wdt:P18 ?pic }
  SERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Firearms cartridges and which they are based on #Show firearms cartridges and which they are based on
#defaultView:Graph
SELECT 
?item ?itemLabel ?image 
?other ?otherLabel ?image2
WHERE
{
    ?item  wdt:P279+ wd:Q37144 .   # cartridges
    ?item  wdt:P144    ?other  .   # if the cartridge is based on another
    OPTIONAL {
      ?item  wdt:P18     ?image  .   # grab image
      ?other wdt:P18     ?image2 .   # grab image
    }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Music genres #graph rendering could be slow due to large number of results

#defaultView:Graph
SELECT ?item ?itemLabel ?_image ?_subclass_of ?_subclass_ofLabel
WHERE {
  ?item wdt:P31 wd:Q188451;
        wdt:P279 ?_subclass_of.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image. }
}
 Try it! Groups of characters in the Marvel universe #defaultView:Graph
SELECT ?char ?charLabel ?group ?groupLabel (\"7FFF00\" as ?rgb)
WHERE {
	?group wdt:P31 wd:Q14514600 ;  # group of fictional characters
          wdt:P1080 wd:Q931597.  # from Marvel universe
 ?char wdt:P463 ?group # member of group
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Line chart Average number of children per year The following query uses these:Items: human (Q5)   Properties: instance of (P31)   , number of children (P1971)   , date of birth (P569)   #defaultView:LineChart
SELECT  (str(?year) AS ?year) (AVG( ?_number_of_children ) AS ?count) WHERE {
  ?item wdt:P31 wd:Q5.
  ?item wdt:P1971 ?_number_of_children.
  ?item wdt:P569 ?_date_of_birth.
  BIND( year(?_date_of_birth) as ?year ).
  FILTER( ?year > 1900)
}

GROUP BY ?year Try it! Population of countries sharing a border with Germany #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q183;   # shares border with Germany
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Population of countries sharing a border with Cameroon #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q1009;  # shares border with Cameroon
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Number of books by year and genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?genreLabel )  WHERE {
  ?item wdt:P31 wd:Q571;
        wdt:P577 ?_publication_date;
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?_genre rdfs:label ?genreLabel.}
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Number of bands by year and genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count) (SAMPLE(?_genreLabel) AS ?_genreLabel) WHERE {
  ?item wdt:P31 wd:Q215380; # instance of: band
        wdt:P571 ?_date;   # inception
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_genre rdfs:label ?_genreLabel.}
  FILTER(?_date >= \"1960-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Bar chart Battles per year per country last 80 years #defaultView:BarChart

SELECT(SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel)  WHERE {
  ?subj wdt:P31 wd:Q178561.  # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. }  # start time
  OPTIONAL { ?subj wdt:P585 ?d2. }  # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. }  # end time
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(STR(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.  # country of location of battle
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_country rdfs:label ?_countryLabel.}
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Battles per year per continent and country last 80 years (animated) #defaultView:BarChart
SELECT (SAMPLE(?_continentLabel) AS ?continent) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel) (SAMPLE(?year) AS ?year)  WHERE {
  ?subj wdt:P31 wd:Q178561.        # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. } # start date
  OPTIONAL { ?subj wdt:P585 ?d2. } # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. } # end date
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(str(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.
  ?_country wdt:P30 ?_continent.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
       ?_country rdfs:label ?_countryLabel.
       ?_continent rdfs:label ?_continentLabel.}
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
}
GROUP BY ?year ?_country
 Try it! Yearly Population stacked by country The following query uses these:Items: sovereign state (Q3624078)   , estimation (Q791801)   , census (Q39825)   Properties: instance of (P31)   , population (P1082)   , point in time (P585)   , determination method (P459)   #defaultView:BarChart
# male/female population _must_ not be added unqualified as total population (!)
# this is an error and should be fixed at the item using P1540 and P1539 instead
# (wrong query result may be a manifestation of such)
SELECT ?year (AVG(?pop) AS ?population) ?countryLabel
       (COUNT(*) AS ?number_of_chosen_sources) (SAMPLE(?method) AS ?a_source_of_those_chosen)
WHERE
{
  ?country wdt:P31 wd:Q3624078;#more useful than Q6256;
           p:P1082 ?popStatement .
  ?popStatement ps:P1082 ?pop;
                pq:P585 ?date .
  BIND(STR(YEAR(?date)) AS ?year)
  #FILTER ( (YEAR(?date)) >= 2000 ) 
  # IF multiple ?pop values per country per year exist, we prioritize by source
  #       census 1st, others 2nd, estimation(s) 3rd, unknown sources (none supplies P459) last
  # note: wikibase:rank won't help here: each year may have multiple statements for ?pop value
  #       rank:prefered is used for the best value (or values) of the latest or current year
  #       rank:normal may be justified for all of multiple ?pop values for a given year
  OPTIONAL { ?popStatement pq:P459 ?method. }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?d; pq:P459 ?estimate ].
             FILTER(STR(YEAR(?d)) = ?year). FILTER(?estimate = wd:Q791801). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?e; pq:P459 ?census ].
             FILTER(STR(YEAR(?e)) = ?year). FILTER(?census = wd:Q39825). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?f; pq:P459 ?other ].
             FILTER(STR(YEAR(?f)) = ?year). FILTER(?other != wd:Q39825 && ?other != wd:Q791801). }
  BIND(COALESCE( 
    IF(BOUND(?census), ?census, 1/0),
    IF(BOUND(?other), ?other, 1/0),
    IF(BOUND(?estimate), ?estimate, 1/0) ) AS ?pref_method).
  FILTER(IF(BOUND(?pref_method),?method = ?pref_method,true))
  # .. still need to group if multiple values per country per year exist and
  # - none is qualified with P459
  # - multiple ?estimate or multiple ?census (>1 value from same source)
  # - ?other yields more than one source (>1 values are better than optionally
  #                         supplied estimate, but no census source available)

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }               
}
GROUP BY ?year ?countryLabel
ORDER BY ?year ?countryLabel Try it! Built power plants per year per country #defaultView:BarChart
SELECT (SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?count) (SAMPLE(?_countryLabel) AS ?_countryLabel) WHERE {
  ?object wdt:P31/wdt:P279* wd:Q134447. # Power stations or subtypes
  BIND(STR(YEAR(?_inception)) AS ?year)
  ?object wdt:P571 ?_inception;
          wdt:P17 ?_country.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?_country rdfs:label ?_countryLabel. }
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Bar chart of paintings produced per year by Piet Mondrian #defaultView:BarChart
SELECT ?year (COUNT(?year) as ?count) WHERE {
  ?painting wdt:P31 wd:Q3305213.
  ?painting wdt:P170 wd:Q151803.
  ?painting wdt:P571 ?inception.
  BIND(str(year(?inception)) AS ?year)
  OPTIONAL { ?painting wdt:P18 ?image. }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} GROUP BY ?year ?count ORDER BY ?year
 Try it! Bar chart with ratio of male / female creators for public art in city of Nijmegen, the Netherlands #defaultView:BarChart
select ?genderLabel (count(?gender) as ?genderCount) where {
  ?item wdt:P136 wd:Q557141;
        wdt:P131 wd:Q47887;
        wdt:P170 ?creator. 
    
  ?creator wdt:P21 ?gender.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} group by ?genderLabel ?genderCount
 Try it! Area chart Cancer deaths per year and cancer type The following query uses these:Items: human (Q5)   , cancer (Q12078)   Properties: instance of (P31)   , cause of death (P509)   , date of death (P570)   , subclass of (P279)   #defaultView:AreaChart
SELECT ?cod (STR(SAMPLE(?yearOfDeath)) AS ?YEAR_Of_DEATH) (COUNT(*) AS ?NUMBER_OF_DEATHS) ?cause WHERE {
  ?pid wdt:P31 wd:Q5;  # instance of human
       wdt:P509 ?cod;  # cause of death
       wdt:P570 ?_date_of_death.
  ?cod wdt:P279* wd:Q12078.  # type of cancer
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                         ?cod rdfs:label ?cause. }
  BIND ( YEAR(?_date_of_death) AS ?yearOfDeath )
  FILTER( ?yearOfDeath > 1960 )
}
GROUP BY ?cod ?cause ?yearOfDeath Try it! Ծառ Continents, countries, regions and capitals The following query uses these:Items: continent (Q5107)   , country (Q6256)   , city (Q515)   Properties: instance of (P31)   , continent (P30)   , contains the administrative territorial entity (P150)   , locator map image (P242)   , flag image (P41)   , capital (P36)   , image (P18)   , population (P1082)   , head of government (P6)   , twinned administrative body (P190)   , inception (P571)   , located in or next to body of water (P206)   , has part(s) (P527)   #defaultView:Tree
SELECT ?continent ?continentFlag ?continentLabel ?country ?countryLabel ?countryFlag ?region ?regionLabel ?regionFlag ?city ?cityLabel ?cityImage ?property ?propertyLabel ?value ?valueLabel WHERE {
  {
    SELECT * WHERE {
      ?continent wdt:P31 wd:Q5107.
      ?country wdt:P30 ?continent.
      ?country p:P31/ps:P31 wd:Q6256.
      ?country wdt:P150 ?region.
      OPTIONAL {
        ?continent wdt:P242 ?continentFlag.
        ?country wdt:P41 ?countryFlag.
        ?region wdt:P41 ?regionFlag.
      }
      OPTIONAL {
        ?region wdt:P36 ?city.
        ?city wdt:P31 wd:Q515.
        ?city wdt:P18 ?cityImage.
        OPTIONAL {
          VALUES (?prop) {
            (wdt:P1082)
            (wdt:P6)
            (wdt:P190)
            (wdt:P31)
            (wdt:P571)
            (wdt:P150)
            (wdt:P206)
            (wdt:P527)
          }
          ?city ?prop ?value.
          ?property ?ref ?prop.
          ?property rdf:type wikibase:Property.
        }
      }
    }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Viennese composers and their compositions by tonality The following query uses these:Items: human (Q5)   , Vienna (Q1741)   Properties: instance of (P31)   , place of birth (P19)   , place of death (P20)   , residence (P551)   , image (P18)   , composer (P86)   , tonality (P826)   #defaultView:Tree
SELECT ?composer ?composerLabel ?composerImage ?tonality ?tonalityLabel ?composition ?compositionLabel WHERE {
  ?composer wdt:P31 wd:Q5;
            wdt:P19|wdt:P20|wdt:P551 wd:Q1741.
  OPTIONAL { ?composer wdt:P18 ?composerImage. }
  ?composition wdt:P86 ?composer;
               wdt:P826 ?tonality.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de-at,de\". }
}
ORDER BY ?composerLabel ?tonalityLabel Try it! Treemap Popular television series (in treeview) #added before 2016-10

#defaultView:TreeMap
SELECT ?show ?showLabel  ?season ?cleanSeasonLabel ?episode ?episodeLabel
WHERE
{
	{
		BIND(wd:Q886 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-23) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	} 
	UNION
	{
		BIND(wd:Q16538 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-20) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}  
	UNION
	{
		BIND(wd:Q147235 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(CONCAT(\"S\", SUBSTR(?_seasonLabel, 25)) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}

	SERVICE wikibase:label {  bd:serviceParam wikibase:language \"en\" }
}
 Try it! Famous people categorised into eye and hair color #defaultView:TreeMap
SELECT ?eyes ?hairColorLabel (COUNT(?person) as ?count)
WHERE
{
	?person wdt:P1340 ?eyeColor.
    ?person wdt:P1884 ?hairColor.
    ?person wdt:P2048 ?height.
    ?eyeColor rdfs:label ?_eyeColorLabel.
    FILTER((LANG(?_eyeColorLabel)) = \"en\")
    BIND(CONCAT(?_eyeColorLabel, \" eyes\") AS ?eyes)
   
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
GROUP BY ?eyes ?hairColorLabel
 Try it! Scatter chart Number of films by year and genre The following query uses these:Items: film (Q11424)   Properties: instance of (P31)   , publication date (P577)   , genre (P136)   #defaultView:ScatterChart
SELECT   ?year  (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?label )  (?year as ?year_shown) WHERE {
  ?item wdt:P31 wd:Q11424.
  ?item wdt:P577 ?_publication_date.
  ?item wdt:P136 ?_genre.
  ?_genre rdfs:label ?_genreLabel.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  FILTER((LANG(?_genreLabel)) = \"en\")
 
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 30) Try it! Օրացույցներ Calendar of birth dates of women who studied at the University of Oxford SELECT ?monthLabel (?day_int as ?d) ?personLabel ?personDesc
   (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?rperson),32) )) as ?link) WHERE {
{ SELECT ?month_int ?month ?day_int (SAMPLE(?person) AS ?rperson) WHERE {
?month wdt:P31 wd:Q47018901; wdt:P1545 ?month_ordinal. # These lines generate a calendar from January 1 to December 31
?day p:P361 [ps:P361 ?month; pq:P1545 ?day_ordinal ].
 BIND(xsd:integer(?month_ordinal) AS ?month_int)
 BIND(xsd:integer(?day_ordinal) AS ?day_int)
OPTIONAL {
# Define the people we're interested in
{?person wdt:P69 wd:Q34433 } UNION {?person wdt:P69/wdt:P31 wd:Q2581649 } # educated at Oxford or an Oxford college
?person wdt:P21 wd:Q6581072 ; # female
   p:P569/psv:P569 ?date_node. # birth date
?date_node wikibase:timePrecision \"11\"^^xsd:integer ; # birth date has specific day
   wikibase:timeValue ?birthdate .        
filter(DAY(?birthdate)=?day_int) filter (MONTH(?birthdate)=?month_int )
}
} GROUP BY ?month_int ?month ?day_int }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
?rperson rdfs:label ?personLabel. ?rperson schema:description ?personDesc. ?month rdfs:label ?monthLabel }
} ORDER BY ?month_int ?day_int
 Try it! Samples with coordinates to illustrate maps Items around with user location #defaultView:Map{\"layer\":\"?instance_ofLabel\"}
SELECT ?place ?placeLabel ?image ?coordinate_location ?dist ?instance_of ?instance_ofLabel WHERE {
  SERVICE wikibase:around {
    ?place wdt:P625 ?coordinate_location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\".
    bd:serviceParam wikibase:distance ?dist.
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?place wdt:P18 ?image. }
  OPTIONAL { ?place wdt:P31 ?instance_of. }
}
 Try it! Locations of national parks #defaultView:Map
SELECT ?objectLabel ?objectDescription ?link ?coord
WHERE {
  ?object wdt:P31/wdt:P279? wd:Q46169 .
          OPTIONAL { ?object wdt:P856 ?link. } 
          OPTIONAL { ?object wdt:P625 ?coord . }
          SERVICE wikibase:label {
               bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\"
          }
}
 Try it! Airports within 100km of Berlin #added before 2016-10

#defaultView:Map
SELECT ?place ?placeLabel ?location
WHERE
{
  # Berlin coordinates
  wd:Q64 wdt:P625 ?berlinLoc .
  SERVICE wikibase:around {
    ?place wdt:P625 ?location .
    bd:serviceParam wikibase:center ?berlinLoc .
    bd:serviceParam wikibase:radius \"100\" .
  } .
  # Is an airport
  FILTER EXISTS { ?place wdt:P31/wdt:P279* wd:Q1248784 } .
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
  } 
}
 Try it! Օդանավակայաններ Բելգիայում #List of airports in Belgium
#defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor
WHERE {
  ?airport wdt:P31 wd:Q1248784 ;
          ?range wd:Q31;
          wdt:P625 ?coor.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! International airports named after women # Airports named after women
# List of airports that are named after women
# Written by WiseWoman auf der #wmdemv 2019
# defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor ?namedafterLabel
WHERE {
  ?airport wdt:P31 wd:Q644371 ;  
          # ?range wd:Q183;
          wdt:P625 ?coor.
  ?airport wdt:P138 ?namedafter .
  ?namedafter wdt:P31 wd:Q5 .
  ?namedafter wdt:P21 wd:Q6581072 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Schools between San Jose, CA and Sacramento, CA The following query uses these:Items: San Jose (Q16553)   , Sacramento (Q18013)   , school (Q3914)   Properties: coordinate location (P625)   , instance of (P31)   , subclass of (P279)    Features: map (Q24515275)   , wikibase:box (Q26211169)   , wikibase:box with West and East corners (Q26211177)  # Schools between San Jose, CA and Sacramento, CA
#defaultView:Map
SELECT *
WHERE
{ hint:Query hint:optimizer \"None\" .
  wd:Q16553 wdt:P625 ?SJloc .
  wd:Q18013 wdt:P625 ?SCloc .
  SERVICE wikibase:box {
      ?place wdt:P625 ?location .
      bd:serviceParam wikibase:cornerWest ?SJloc .
      bd:serviceParam wikibase:cornerEast ?SCloc .
    }
  ?place wdt:P31/wdt:P279* wd:Q3914 .
} Try it! Big cities, grouped into map layers by population #defaultView:Map
SELECT DISTINCT ?city ?cityLabel (SAMPLE(?location) AS ?location) (MAX(?population) AS ?population) (SAMPLE(?layer) AS ?layer)
WHERE
{
  ?city wdt:P31/wdt:P279* wd:Q515;
        wdt:P625 ?location;
        wdt:P1082 ?population.
  FILTER(?population >= 500000).
  BIND(
    IF(?population < 1000000, \"<1M\",
    IF(?population < 2000000, \"1M-2M\",
    IF(?population < 5000000, \"2M-5M\",
    IF(?population < 10000000, \"5M-10M\",
    IF(?population < 20000000, \"10M-20M\",
    \">20M\")))))
    AS ?layer).
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?city ?cityLabel
 Try it! Places with free wifi #defaultView:Map
# Places with free wi-fi
SELECT ?item ?itemLabel (SAMPLE(?coord) AS ?coord)
WHERE {
	?item wdt:P2848 wd:Q1543615 ;  # wi-fi gratis
	      wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} GROUP BY ?item ?itemLabel
 Try it! Basic map of U1 subway stations in Berlin #added before 2016-10
#defaultView:Map
SELECT ?stationLabel ?coord
WHERE {
	?station wdt:P81 wd:Q99691 ;
		 wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\" }
}
 Try it! Advanced map of Stockholm Metro (Q272926) Map of Stockholm Metro (query) Locations of universities in Cameroon #added before 2016-10
#defaultView:Map
SELECT ?universityLabel ?universityDescription ?website ?coord
WHERE {
	?university wdt:P31/wdt:P279* wd:Q3918 ;
		wdt:P17 wd:Q1009 ;
		wdt:P625 ?coord .
	OPTIONAL {
		?university wdt:P856 ?website
	}
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"en,de\" .
	}
}
 Try it! Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany #added before 2016-10
 #defaultView:Map
SELECT ?item ?itemLabel ?coord
WHERE
{
	?item wdt:P31/wdt:P279* wd:Q486972;
    	      wdt:P17 wd:Q183;
    	      rdfs:label ?itemLabel;
    	      wdt:P625 ?coord;
    	 FILTER (lang(?itemLabel) = \"de\") .
    	 FILTER regex (?itemLabel, \"(ow|itz)$\").
}
 Try it! Locations of power stations #defaultView:Map
SELECT DISTINCT ?objectLabel ?coord ?layer
WHERE
{
  ?object wdt:P31/wdt:P279* wd:Q159719;
     wdt:P625 ?coord.
  ?object wdt:P31 ?type. ?type wdt:P279* wd:Q159719.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?type rdfs:label ?layer }
}
 Try it! Locations of stone arch bridges #defaultView:Map
SELECT ?label ?coord ?place ?image
WHERE {
	?place wdt:P31 wd:Q14276458 ;  # instance of deck arch bridge
            wdt:P186 wd:Q22731 ;  # made of stone
            wdt:P625 ?coord .
	OPTIONAL { ?place wdt:P18 ?image }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?place rdfs:label ?label }
}
 Try it! Locations of aqueducts #defaultView:Map
SELECT ?place ?placeLabel ?coord ?layer
WHERE {
   ?place wdt:P31/wdt:P279? wd:Q474 ; # instance of aqueduct
          wdt:P625 ?coord ;
          wdt:P31 ?type.
  ?type wdt:P279* wd:Q474
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                       ?type rdfs:label ?layer}
}
 Try it! Locations of archaeological sites, with images #defaultView:Map
SELECT ?siteLabel ?coord ?image ?site
WHERE {
   ?site wdt:P31/wdt:P279* wd:Q839954 ;
      wdt:P625 ?coord ;
      wdt:P18 ?image .
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Locations of castles that are also archaeological sites #defaultView:Map
SELECT ?label ?coord ?subj
WHERE {
   ?subj wdt:P31 wd:Q839954 ; # instance of archaeological site
         wdt:P31/wdt:P279* wd:Q23413 ;  # instance or subclass of castle
         wdt:P625 ?coord .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?subj rdfs:label ?label}
}
 Try it! Locations of battles #added before 2016-10
#defaultView:Map
SELECT ?label ?coord ?subj ?year
WHERE
{
	?subj wdt:P31 wd:Q178561 .
	?subj wdt:P625 ?coord .
	OPTIONAL {?subj wdt:P580 ?d1}
	OPTIONAL {?subj wdt:P585 ?d2}
  	OPTIONAL {?subj wdt:P582 ?d3}
	BIND(IF(!BOUND(?d1),(IF(!BOUND(?d2),?d3,?d2)),?d1) as ?date)
	BIND(YEAR(?date) as ?year)
	?subj rdfs:label ?label filter (lang(?label) = \"en\")
}
 Try it! Places of worship #added before 2016-10

#defaultView:Map
SELECT ?item ?itemLabel ?_coordinate_location ?_image WHERE {
  ?item wdt:P31/wdt:P279* wd:Q1370598.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
   ?item wdt:P625 ?_coordinate_location.
  ?item wdt:P18 ?_image.
}
 Try it! All museums (including subclass of museum) in Washington, D.C. with coordinates #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?name ?coord ?lat ?lon
WHERE {
   hint:Query hint:optimizer \"None\" .
   ?item wdt:P131* wd:Q61 .
   ?item wdt:P31/wdt:P279* wd:Q33506 .
   ?item wdt:P625 ?coord .
   ?item p:P625 ?coordinate .
   ?coordinate psv:P625 ?coordinate_node .
   ?coordinate_node wikibase:geoLatitude ?lat .
   ?coordinate_node wikibase:geoLongitude ?lon .
   SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
    ?item rdfs:label ?name
   }
}
ORDER BY ASC (?name)
 Try it! Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) #defaultView:Map
select ?museum ?museumLabel ?layer (sample(?location) as ?location) where {
  ?museum wdt:P31/wdt:P279* wd:Q33506;
          wdt:P17 wd:Q55;
          wdt:P625 ?location.
  optional { ?museum wdt:P2851 ?layer. }
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} group by ?museum ?museumLabel ?layer
 Try it! All ski resorts with coordinates #defaultView:Map
SELECT ?item ?itemLabel ?coord #?lat ?lon
WHERE
{
   ?item               wdt:P31        wd:Q130003.
   ?item               wdt:P625         ?coord.

#  ?item                 p:P625         ?statementnode.
#  ?statementnode      psv:P625         ?valuenode.
#  ?valuenode     wikibase:geoLatitude  ?lat.
#  ?valuenode     wikibase:geoLongitude ?lon.

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Փարոսներ Նորվեգիայում #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?coords ?image
WHERE {
	?item wdt:P31 wd:Q39715 ;
          wdt:P17 wd:Q20 ;
          wdt:P625 ?coords
	OPTIONAL { ?item wdt:P18 ?image } 
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],nb,nn,en,fi\"  } 
}
ORDER BY ?itemLabel
 Try it! Most beautiful villages of France #defaultView:Map
SELECT ?item ?itemLabel ?geoLocation ?image
WHERE {
    ?item wdt:P463 wd:Q1010307 ;  # member of Les Plus Beaux Villages de France (organisation)
          wdt:P625 ?geoLocation .
    OPTIONAL { ?item wdt:P18 ?image }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" }
}
 Try it! Locations in Fiji This query shows a way of mapping locations which span the 180th meridian, without the points being split between the left and right edges of the map. #defaultView:Map
select ?item ?coords_ where {
  ?item wdt:P17 wd:Q712 .
  ?item p:P625/psv:P625 ?coords .
  ?coords wikibase:geoLatitude ?lat ;
          wikibase:geoLongitude ?lon .
  bind(strdt(concat(\"Point(\", if((?lon < 0), str(?lon + 360), str(?lon)), \" \", str(?lat), \")\"), geo:wktLiteral) as ?coords_) .
} limit 1000
 Try it! Map of disasters, color-coded by disaster type Map of disasters color-coded by disaster type #defaultView:Map{\"layer\":\"?typeLabel\"}
SELECT ?item ?itemLabel ?geo ?type ?typeLabel (SAMPLE(?_image) AS ?image) WHERE {
  ?type wdt:P279* wd:Q3839081 .
  ?item wdt:P31 ?type ;
        wdt:P625 ?geo .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image }
}
GROUP BY ?item ?itemLabel ?geo ?type ?typeLabel
 Try it! Monuments and other heritage items located 1 km around the users location #defaultView:Map
select distinct ?monument ?monumentLabel ?heritageLabel (sample(?distance) as ?distance) (sample(?location) as ?location) (sample(?image) as ?image) where {
  ?monument wdt:P1435 ?heritage.
  
  service wikibase:around {   
    ?monument wdt:P625 ?location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\" . 
    bd:serviceParam wikibase:distance ?distance .
  }
  
  optional {
    ?monument wdt:P18 ?image.
  }
  
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,nl\". }
} group by ?monument ?monumentLabel ?heritageLabel order by ?distance
 Try it! Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article Map of newspapers in the United States by presence of the template Infobox newspaper in their English Wikipedia article integrates a text search for the template's name using the MediaWiki API into a SPARQL query #defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?id ?coords ?article ?rgb WHERE {
 ?c wdt:P279* wd:Q11032 .
  ?item wdt:P31 ?c .
 ?item wdt:P17|wdt:P495 wd:Q30 .
 OPTIONAL{?item wdt:P5454 ?id .}
 ?item wdt:P291 ?place .
 ?place wdt:P625 ?coords.
 OPTIONAL {   
   SELECT ?item ?pageid ?ns WHERE {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam mwapi:generator \"search\" .
      bd:serviceParam mwapi:gsrsearch \"hastemplate:\\\"infobox newspaper\\\"\" .
      bd:serviceParam mwapi:gsrlimit \"max\" .
      ?item wikibase:apiOutputItem mwapi:item .
      ?pageid wikibase:apiOutput \"@pageid\" .
      ?ns wikibase:apiOutput \"@ns\" .
    }
  } LIMIT 15000
 }
    
  OPTIONAL {
      ?article schema:about ?item .
      ?article schema:inLanguage \"en\" .
      FILTER (SUBSTR(str(?article), 1, 25) = \"https://en.wikipedia.org/\")
  }

  BIND( IF(BOUND(?article),   IF(BOUND(?ns), \"009500\" , \"FFF000\" )  ,  \"FF0000\"   )  AS ?rgb).  
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
 Try it! List of all the lakes in Cameroon The following query uses these:Items: lake (Q23397)   , Cameroon (Q1009)   Properties: instance of (P31)   , subclass of (P279)   , country (P17)   , coordinate location (P625)   , image (P18)    Features: map (Q24515275)  """@en,
    """Other languages: English Nederlands Türkçe español français svenska українська հայերեն 中文 日本語 Contents 1 Requêtes de démonstration 1.1 Les plus grandes villes ayant une femme pour maire 1.2 Liste des pays classés selon leur nombre de villes ayant une femme pour maire 1.3 Noms populaires au sein des humains 1.4 Prénoms existants avec un maximum de variantes 1.5 Noms de famille les plus populaires pour les personnages de fiction 1.6 Femmes sans illustration avec le plus de liens de sites nées après 1921 1.7 Qui fête son anniversaire aujourd'hui ? 1.8 Chercher John et Sarah Connor 1.9 Données sur Douglas Adams 1.10 Données sur Douglas Adams (version modifiée) 1.11 Données sur Barbara Harris - groupées par thème 1.12 Personnes enterrées à plusieurs endroits 1.13 All oldest living US ex-presidents in chronological order 1.14 Personnes et institutions liées d'une certaine manière à la politique russe 2 Requêtes avancées 2.1 Diagrammes à bulles 2.1.1 Rang de toutes les causes de mort 2.1.2 Durée des batailles pendant la Seconde guerre mondiale 2.1.3 Les 10 humains les plus lourds 2.1.4 Valeurs de uses (P2283) dans des articles universitaires 2.2 Dates importantes 2.2.1 Chronologie des tests spatiaux 2.2.2 Chronologie des compositions de Wolfgang Amadeus Mozart 2.3 Dimensions 2.3.1 Dimensions des éléments 2.4 Graphique 2.4.1 Enfants de Genghis Khan 2.4.2 Cartouches d'armes à feu et armes pour lesquelles elles sont conçues 2.4.3 Genres musicaux 2.4.4 Groupe de personnages de l'univers Marvel 2.5 Graphique en lignes 2.5.1 Nombre moyen d'enfants par année 2.5.2 Population des pays partageant une frontière avec l'Allemagne 2.5.3 Population des pays partageant une frontière avec le Cameroun 2.5.4 Nombre de livres par genre et par année 2.5.5 Nombre de groupes musicaux par année et par genre 2.6 Graphique en barre 2.6.1 Batailles par année et par pays sur ces 80 dernières années 2.6.2 Batailles par année, continent et pays durant ces 80 dernières années (avec animation) 2.6.3 Population annuelle présentée par pays 2.6.4 Centrales électriques construites par année et par pays 2.6.5 Diagramme en barres des tableaux produits annuellement par Piet Mondrian 2.6.6 Diagramme en barres du ratio hommes / femmes des créateurs d'art public pour la ville de Nijmègue, aux Pays-Bas 2.7 Graphique en aires 2.7.1 Morts du cancer par année et par type de cancer 2.8 Arbre 2.8.1 Continents, pays, régions et capitales 2.8.2 Compositeurs viennois et leurs compositions par tonalité 2.9 Arborescence 2.9.1 Séries télévisées populaires (arborescence) 2.9.2 Personnes célèbres en fonction de la couleur des yeux et des cheveux 2.10 Graphe de dispersion 2.10.1 Nombre de films par genre et par année 2.11 Calendriers 2.11.1 Calendrier des dates de naissance des femmes qui ont étudié à l'université d'Oxford 2.12 Exemples avec des coordonnées pour illustrer les cartes 2.12.1 Eléments à proximité du lieu de l'utilisateur 2.12.2 Emplacement des parcs nationaux 2.12.3 Aéroports dans un rayon de 100km autour de Berlin 2.12.4 Aéroports de Belgique 2.12.5 Aéroports internationaux portant des noms de femmes 2.12.6 Ecoles entre San Jose et Sacramento en Californie 2.12.7 Grandes villes groupées selon la population par niveaux géographiques 2.12.8 Endroits avec wifi gratuit 2.12.9 Carte basique des stations de métro de la ligne U1 à Berlin 2.12.10 Carte détaillée de Stockholm Metro (Q272926) 2.12.11 Emplacement des universités du Cameroun 2.12.12 Distribution des familles humaines dont les noms se terminent par « -ow » ou « -itz » en Allemagne 2.12.13 Emplacement des centrales électriques 2.12.14 Emplacement des ponts à arche de pierre 2.12.15 Emplacement des aqueducs 2.12.16 Emplacement des sites archéologiques avec images 2.12.17 Emplacement des sites archéologiques avec château 2.12.18 Localisation des batailles 2.12.19 Lieux de culte 2.12.20 Tous les musées (y compris leurs sous-classes) de Washington, D.C. avec les coordonnées géographiques 2.12.21 Carte des musées des Pays-Bas avec une couleur indiquant s'ils acceptent le Museumkaart (Q2237462) 2.12.22 Tous les stations de ski avec leurs coordonnées 2.12.23 Phares de Norvège 2.12.24 Les plus beaux villages de France 2.12.25 Localisations dans les îles Fidji 2.12.26 Carte des catastrophes naturelles, colorisée selon le type de catastrophe 2.12.27 Monuments et autres éléments du passé situés 1 km autour du lieu de l'utilisateur 2.12.28 Carte des journaux des Etats Unis d'aprés l'infobox du journal présente dans l'article correspondant de la Wikipedia anglaise 2.12.29 Liste de tous les lacs du Cameroun 2.13 Listeria 2.13.1 Les femmes nées au Pays de Galles sans article en gallois pour Listeria 2.13.2 Personnes nées en Occitanie pour Listeria 2.13.3 Personnes nées en Écosse pour Listeria 2.14 Rassembler et disperser 2.14.1 Enfants de Genghis Khan 2.15 Echantillonage 2.15.1 Articles scientifiques sans description 2.16 API Mediawiki 2.16.1 Filtrer les étiquettes à l'aide de EntitySearch du service MWAPI pour fournir la recherche de texte complet 2.16.2 Utilisation de MWAPI pour baser une requête sur des articles dans une catégorie Wikipédia 2.16.3 Trouver des déclarations avec des références contenant des liens externes vers wipo.int 2.16.4 Trouver des métadonnées comme l'artiste et la licence pour une image 2.16.5 Obtenir le nombre de pages vues pour tous les articles d'une catégorie 2.17 Fédération 2.17.1 Obtenir les propriétés OpenStreetMap de premier niveau du bâtiment principal de l'Université d'Helsinki 2.17.2 Obtenir des informations sur l'élément Europeana 2.17.3 Partage des énergies renouvelables en électricité 2.17.4 Obtenir des nœuds OpenStreetMap avec une étiquette inarisami dans wikipedia mais sans l'étiquette inarisami en OSM 3 Requêtes utiles pour les services externes 3.1 Propriétés et valeurs de meilleur rang d'un article donné Requêtes de démonstration Ces requêtes montrent la puissance et les fonctionnalités de l'interface utilisateur SPARQL et WDQS (WikiData Query Service). Les plus grandes villes ayant une femme pour maire #added before 2016-10
#TEMPLATE={\"template\":\"Largest ?c with ?sex head of government\",\"variables\":{\"?sex\":{\"query\":\" SELECT ?id WHERE { ?id wdt:P31 wd:Q48264 .  } \"},\"?c\":{\"query\":\"SELECT DISTINCT ?id WHERE {  ?c wdt:P31 ?id.  ?c p:P6 ?mayor. }\"} } }
SELECT DISTINCT ?city ?cityLabel ?mayor ?mayorLabel
WHERE
{
  BIND(wd:Q6581072 AS ?sex)
  BIND(wd:Q515 AS ?c)

	?city wdt:P31/wdt:P279* ?c .  # find instances of subclasses of city
	?city p:P6 ?statement .            # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .          # ... that has the value ?mayor
	?mayor wdt:P21 ?sex .       # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	
	# Now select the population value of the ?city
	# (wdt: properties use only statements of \"preferred\" rank if any, usually meaning \"current population\")
	?city wdt:P1082 ?population .
	# Optionally, find English labels for city and mayor:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
	}
}
ORDER BY DESC(?population)
LIMIT 10
 Try it! Liste des pays classés selon leur nombre de villes ayant une femme pour maire #added before 2016-10
SELECT ?country ?countryLabel (count(*) AS ?count)
WHERE
{
	?city wdt:P31/wdt:P279* wd:Q515 . # find instances of subclasses of city
	?city p:P6 ?statement .           # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .         # ... that has the value ?mayor
	?mayor wdt:P21 wd:Q6581072 .      # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	?city wdt:P17 ?country .          # Also find the country of the city
 	
	# If available, get the \"ru\" label of the country, use \"en\" as fallback:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"ru,en\" .
	}
}
GROUP BY ?country ?countryLabel
ORDER BY DESC(?count)
LIMIT 100
 Try it! Noms populaires au sein des humains #defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?human) AS ?count) WHERE {
    # ?human wdt:P31 wd:Q5.
      ?human wdt:P734 ?surname.
    }
    GROUP BY ?surname ORDER BY DESC(?count) LIMIT 100
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} 
ORDER BY DESC(?count)
 Try it! Prénoms existants avec un maximum de variantes #added before 2016-10

SELECT ?name ?nameLabel (COUNT(?otherName) AS ?count)
WHERE
{
  ?name wdt:P31 wd:Q202444;
        wdt:P460 ?otherName.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?name ?nameLabel
ORDER BY DESC(?count)
LIMIT 10
 Try it! Noms de famille les plus populaires pour les personnages de fiction #added before 2016-10

#defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?person) AS ?count) WHERE {
      ?person (wdt:P31/wdt:P279*) wd:Q95074.
      ?person wdt:P734 ?surname.
    }
    GROUP BY ?surname
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?count)
LIMIT 100
 Try it! Femmes sans illustration avec le plus de liens de sites nées après 1921 SELECT ?s ?desc ?linkcount
WHERE
{
  ?s wdt:P31 wd:Q5 ;   # human
     wdt:P21 wd:Q6581072 ;  # gender: female
     wdt:P569 ?born .
  FILTER (?born >= \"1921-01-01T00:00:00Z\"^^xsd:dateTime) .
  ?s wikibase:sitelinks ?linkcount .
  MINUS {
    ?s wdt:P18 []  # exclude if there is an image
  }
?s rdfs:label ?desc FILTER(lang(?desc)=\"en\").
}
GROUP BY ?s ?desc ?linkcount
ORDER BY DESC(?linkcount)
LIMIT 50
 Try it! Qui fête son anniversaire aujourd'hui ? #Whose birthday is today?
SELECT ?entity ?entityLabel ?entityDescription (YEAR(?date) as ?year)
WHERE {
    BIND(MONTH(NOW()) AS ?nowMonth)
    BIND(DAY(NOW()) AS ?nowDay)
    ?entity wdt:P569 ?date .
    FILTER (MONTH(?date) = ?nowMonth && DAY(?date) = ?nowDay)

SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }   
}
LIMIT 20
 Try it! Chercher John et Sarah Connor #added before 2016-10
 SELECT * WHERE {
  ?p wdt:P1080 wd:Q620588 . # from fictional universe: Terminator
  ?p rdfs:label ?pl .
  FILTER (lang(?pl) = \"en\")
  ?p wdt:P25 ?m .  # ?m is mother of ?p
  ?m rdfs:label ?ml .
  FILTER (lang(?ml) = \"en\")
}
 Try it! Données sur Douglas Adams #added before 2016-10

PREFIX entity: <http://www.wikidata.org/entity/>
#partial results

SELECT ?propUrl ?propLabel ?valUrl ?valLabel ?picture
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"identity\"@en AS ?propLabel ) .
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel
	}
	
  	?valUrl rdfs:label ?valLabel
	FILTER (LANG(?valLabel) = 'en') .
	OPTIONAL{ ?valUrl wdt:P18 ?picture .}
	FILTER (lang(?propLabel) = 'en' )
}
ORDER BY ?propUrl ?valUrl
LIMIT 200
 Try it! Données sur Douglas Adams (version modifiée) PREFIX entity: <http://www.wikidata.org/entity/>

#  In addition to the original query this one comes with some advantages:
#  - You will get only literals as results, (even if the values are stored as IRI in wikibase)
#  - That means you will also get properties as birth date, alphanumeric identifier and so on.
#  - The list is ordered numerically by property number. (So P19 comes before P100) 
#  - All label, altLabel and description in a given Language are included.
#  You may open a separate column ?valUrl if you need also the IRI
#
#  Please advise, if there is an option to put the Q-Number  and/or the Language 
#  code into a runtime variable. 

SELECT ?propNumber ?propLabel ?val
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"Name\"@de AS ?propLabel ) .
       entity:Q42 rdfs:label ?val .
      
        FILTER (LANG(?val) = \"de\") 
	}
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"AltLabel\"@de AS ?propLabel ) .
        optional{entity:Q42 skos:altLabel ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"Beschreibung\"@de AS ?propLabel ) .
        optional{entity:Q42 schema:description ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
   	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' )
        filter  isliteral(?valUrl) 
        BIND(?valUrl AS ?val)
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' ) 
        filter  isIRI(?valUrl) 
        ?valUrl rdfs:label ?valLabel 
		FILTER (LANG(?valLabel) = \"de\") 
         BIND(CONCAT(?valLabel) AS ?val)
	}
        BIND( SUBSTR(str(?propUrl),38, 250) AS ?propNumber)
}
ORDER BY xsd:integer(?propNumber)
 Try it! Données sur Barbara Harris - groupées par thème # This query collects data related to entities on Barbara Harris. 
# It demonstrates collecting individual attributes and concatenating them for easier post processing. 

SELECT 
  ?item
(SAMPLE(?itemLabel) AS ?itemLabel) 
(SAMPLE(?itemDescription) AS ?itemDescription) 
  (SAMPLE(?pic) AS ?pic) 
(SAMPLE(?date_of_birth) AS ?date_of_birth) 
(GROUP_CONCAT(DISTINCT ?country_of_citizenship; SEPARATOR=\", \") AS ?country_of_citizenships)
(GROUP_CONCAT(DISTINCT ?country_of_citizenshipLabel; SEPARATOR=\", \") AS ?country_of_citizenshipLabels)

(GROUP_CONCAT(DISTINCT ?occupation; SEPARATOR=\", \") AS ?occupations)
(GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR=\", \") AS ?occupationLabels)

(GROUP_CONCAT(DISTINCT ?country; SEPARATOR=\", \") AS ?countries)
(GROUP_CONCAT(DISTINCT ?countryLabel; SEPARATOR=\", \") AS ?countryLabels)


WHERE {
  VALUES ?item {
    wd:Q269809
    wd:Q274590
    wd:Q24576851
    wd:Q807461
    wd:Q4858963
    wd:Q27954833
    wd:Q4859015
    wd:Q826930
  }
  OPTIONAL { ?item wdt:P18 ?pic. }
  OPTIONAL { ?item wdt:P27 ?country_of_citizenship. }
  OPTIONAL { ?item wdt:P106 ?occupation. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  OPTIONAL { ?item wdt:P31 ?instance_of. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
    ?item rdfs:label ?itemLabel.
    ?item rdfs:description ?itemDescription.
    ?country_of_citizenship rdfs:label ?country_of_citizenshipLabel.
    ?occupation rdfs:label ?occupationLabel.
    ?country rdfs:label ?countryLabel.
  }
}
GROUP BY ?item
 Try it! Personnes enterrées à plusieurs endroits # This query collects burial places of individuals, and sorts them in decreasing order
SELECT ?human (COUNT(?place) AS ?count) WHERE {
  ?human wdt:P31 wd:Q5.
  ?human wdt:P119 ?place.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}
GROUP BY ?human 
ORDER BY DESC(?count)
 Try it! All oldest living US ex-presidents in chronological order # Added 2020-07
# All persons who have been the oldest living US ex-president with dates in chronological order
SELECT DISTINCT ?date ?president ?presidentLabel
WITH
{
  # Persons who is/were president of USA
  SELECT ?president ?presidentLabel ?president_enddate ?president_birthdate ?president_deathdate
  WHERE
  {
    ?president wdt:P31 wd:Q5.
    ?president p:P39 ?president_statement.
    ?president_statement ps:P39 wd:Q11696.
    ?president_statement pq:P582 ?president_enddate.
    ?president wdt:P569 ?president_birthdate.
    OPTIONAL { ?president wdt:P570 ?president_deathdate. }
    ?president rdfs:label ?presidentLabel.
    FILTER (LANG(?presidentLabel) = \"en\")
  }
} AS %presidents
WITH
{
  # Dates where who is oldest living expresident can change
  SELECT DISTINCT ?date
  WHERE
  {
    {
      INCLUDE %presidents
      BIND(?president_enddate + \"P1D\"^^xsd:duration AS ?date)
    }
    UNION
    {
      INCLUDE %presidents
      BIND(?president_deathdate + \"P1D\"^^xsd:duration AS ?date)
    }
  }
} AS %dates
WITH
{
  # Find the age for all living expresidents for each value of ?date
  SELECT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    INCLUDE %presidents
    FILTER (?president_enddate < ?date) # Must have become expresident
    FILTER IF(BOUND(?president_deathdate), ?president_deathdate >= ?date, true) # Must still be living
    BIND (?date - ?president_birthdate AS ?age)
  }
} AS %ages
WITH
{
  # Find the oldest age for a living expresident for each value of ?date
  SELECT ?date (MAX(?age) AS ?oldest)
  WHERE
  {
    INCLUDE %ages
  }
  GROUP BY ?date
} AS %oldest
WITH
{
  SELECT DISTINCT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    OPTIONAL
    {
      INCLUDE %ages
      INCLUDE %oldest
      FILTER (?age = ?oldest)
    }
  }
} AS %result
WHERE
{
  # A result is a change from the previous date if ?president's presidency ended the day before ?date,
  # or if an older expresident died the day before ?date. Filter out results that don't fulfill this.
  INCLUDE %result
  BIND (?date - \"P1D\"^^xsd:duration AS ?day_before)
  FILTER
  (
    ! BOUND(?president)||
    EXISTS
    {
      ?president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?day_before.
    } ||
    EXISTS
    {
      ?other_president wdt:P31 wd:Q5.
      ?other_president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?other_president_end.
      ?other_president wdt:P569 ?other_president_birthdate.
      ?other_president wdt:P570 ?day_before.
      FILTER (?other_president_birthdate < ?president_birthdate) # Other president is oldest
      FILTER (?other_president_end < ?day_before) # other president died as expresident
    }
  )
}
ORDER BY ?date
 Try it! Personnes et institutions liées d'une certaine manière à la politique russe # Added 2022-03
# people and institutions that have the affiliation attribute assigned to Russia 
select ?item ?itemLabel ?itemDescription where { ?item wdt:P1416 wd:Q159. SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } } limit 100
 Try it!  Requêtes avancées Diagrammes à bulles Rang de toutes les causes de mort #defaultView:BubbleChart
#TEMPLATE={\"template\":\"Overall causes of death ranking of ?thing \",\"variables\":{\"?thing\": {\"query\":\"SELECT ?id  (COUNT(?id) AS ?count) WHERE {  ?sub wdt:P509 ?y.  ?sub wdt:P31 ?id. } GROUP BY ?id \"} } }
SELECT ?cid ?cause (COUNT(*) AS ?count) WHERE {
  BIND(wd:Q5 AS ?thing)
  ?pid wdt:P31 ?thing;
      wdt:P509 ?cid.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?cid rdfs:label ?cause}
}
GROUP BY ?cid ?cause
ORDER BY DESC(?count) ?cause
 Try it! Durée des batailles pendant la Seconde guerre mondiale #defaultView:BubbleChart
SELECT DISTINCT ?item ?itemLabel (?end - ?start AS ?duration)
WHERE
{
	?item wdt:P361* wd:Q362 ;
          wdt:P31/wdt:P279* wd:Q178561 ;
          wdt:P580 ?start ;
          wdt:P582 ?end .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Les 10 humains les plus lourds #defaultView:BubbleChart
#TEMPLATE={ \"template\": \"The top 10 heaviest ?type \", \"variables\": { \"?type\": { \"query\": \"SELECT DISTINCT ?id WHERE { ?i wdt:P2067 ?v. ?i wdt:P31 ?id}\" } } }
SELECT ?item ?itemLabel ?mass
WHERE {
  {
    SELECT ?item ?mass WHERE {
      ?item wdt:P31 wd:Q5;
            p:P2067/psn:P2067/wikibase:quantityAmount ?mass.
    }
    ORDER BY DESC(?mass)
    LIMIT 10
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,fr,de\" }
}
 Try it! Valeurs de uses (P2283) dans des articles universitaires # Values of \"uses\" used in scholarly articles
# Demonstrates how to turn off the optimizer and start with the lowest number of edges first.
#defaultView:BubbleChart
SELECT ?uses ?usesLabel (count(?item) as ?c)
WHERE 
{
  hint:Query hint:optimizer \"None\".
  ?item wdt:P2283 ?uses. # ~20,000 edges
  ?item wdt:P31 wd:Q13442814. # ~37M edges
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
group by ?uses ?usesLabel
order by desc(?c)
 Try it! Dates importantes Chronologie des tests spatiaux #defaultView:Timeline
SELECT ?item ?itemLabel ?launchdate (SAMPLE(?image) AS ?image)
WHERE
{
	?item wdt:P31 wd:Q26529 .
    ?item wdt:P619 ?launchdate .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
    OPTIONAL { ?item wdt:P18 ?image }
}
GROUP BY ?item ?itemLabel ?launchdate
 Try it! Chronologie des compositions de Wolfgang Amadeus Mozart #defaultView:Timeline
SELECT DISTINCT ?item ?itemLabel ?catalog_code ?publication_date
WHERE {
	?item wdt:P86 wd:Q254 ; # composer: W. A. Mozart
          wdt:P528 ?catalog_code ;
          wdt:P577 ?publication_date .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Dimensions Dimensions des éléments #defaultView:Dimensions
SELECT ?elementLabel ?boiling_point ?melting_point ?electronegativity ?density ?mass WHERE {
?element wdt:P31 wd:Q11344;
   wdt:P2102 ?boiling_point;
   wdt:P2101 ?melting_point;
   wdt:P1108 ?electronegativity;
   wdt:P2054 ?density;
   wdt:P2067 ?mass.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
LIMIT 100
 Try it! Graphique Enfants de Genghis Khan #defaultView:Graph
PREFIX gas: <http://www.bigdata.com/rdf/gas#>

SELECT ?item ?itemLabel ?pic ?linkTo
WHERE {
  SERVICE gas:service {
    gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;
                gas:in wd:Q720 ;
                gas:traversalDirection \"Forward\" ;
                gas:out ?item ;
                gas:out1 ?depth ;

                gas:maxIterations 4 ;
                gas:linkType wdt:P40 .
  }
  OPTIONAL { ?item wdt:P40 ?linkTo }
  OPTIONAL { ?item wdt:P18 ?pic }
  SERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Cartouches d'armes à feu et armes pour lesquelles elles sont conçues #Show firearms cartridges and which they are based on
#defaultView:Graph
SELECT 
?item ?itemLabel ?image 
?other ?otherLabel ?image2
WHERE
{
    ?item  wdt:P279+ wd:Q37144 .   # cartridges
    ?item  wdt:P144    ?other  .   # if the cartridge is based on another
    OPTIONAL {
      ?item  wdt:P18     ?image  .   # grab image
      ?other wdt:P18     ?image2 .   # grab image
    }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Genres musicaux #graph rendering could be slow due to large number of results

#defaultView:Graph
SELECT ?item ?itemLabel ?_image ?_subclass_of ?_subclass_ofLabel
WHERE {
  ?item wdt:P31 wd:Q188451;
        wdt:P279 ?_subclass_of.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image. }
}
 Try it! Groupe de personnages de l'univers Marvel #defaultView:Graph
SELECT ?char ?charLabel ?group ?groupLabel (\"7FFF00\" as ?rgb)
WHERE {
	?group wdt:P31 wd:Q14514600 ;  # group of fictional characters
          wdt:P1080 wd:Q931597.  # from Marvel universe
 ?char wdt:P463 ?group # member of group
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Graphique en lignes Nombre moyen d'enfants par année The following query uses these:Items: human (Q5)   Properties: instance of (P31)   , number of children (P1971)   , date of birth (P569)   #defaultView:LineChart
SELECT  (str(?year) AS ?year) (AVG( ?_number_of_children ) AS ?count) WHERE {
  ?item wdt:P31 wd:Q5.
  ?item wdt:P1971 ?_number_of_children.
  ?item wdt:P569 ?_date_of_birth.
  BIND( year(?_date_of_birth) as ?year ).
  FILTER( ?year > 1900)
}

GROUP BY ?year Try it! Population des pays partageant une frontière avec l'Allemagne #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q183;   # shares border with Germany
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Population des pays partageant une frontière avec le Cameroun #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q1009;  # shares border with Cameroon
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Nombre de livres par genre et par année #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?genreLabel )  WHERE {
  ?item wdt:P31 wd:Q571;
        wdt:P577 ?_publication_date;
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?_genre rdfs:label ?genreLabel.}
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Nombre de groupes musicaux par année et par genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count) (SAMPLE(?_genreLabel) AS ?_genreLabel) WHERE {
  ?item wdt:P31 wd:Q215380; # instance of: band
        wdt:P571 ?_date;   # inception
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_genre rdfs:label ?_genreLabel.}
  FILTER(?_date >= \"1960-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Graphique en barre Batailles par année et par pays sur ces 80 dernières années #defaultView:BarChart

SELECT(SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel)  WHERE {
  ?subj wdt:P31 wd:Q178561.  # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. }  # start time
  OPTIONAL { ?subj wdt:P585 ?d2. }  # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. }  # end time
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(STR(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.  # country of location of battle
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_country rdfs:label ?_countryLabel.}
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Batailles par année, continent et pays durant ces 80 dernières années (avec animation) #defaultView:BarChart
SELECT (SAMPLE(?_continentLabel) AS ?continent) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel) (SAMPLE(?year) AS ?year)  WHERE {
  ?subj wdt:P31 wd:Q178561.        # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. } # start date
  OPTIONAL { ?subj wdt:P585 ?d2. } # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. } # end date
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(str(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.
  ?_country wdt:P30 ?_continent.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
       ?_country rdfs:label ?_countryLabel.
       ?_continent rdfs:label ?_continentLabel.}
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
}
GROUP BY ?year ?_country
 Try it! Population annuelle présentée par pays The following query uses these:Items: sovereign state (Q3624078)   , estimation (Q791801)   , census (Q39825)   Properties: instance of (P31)   , population (P1082)   , point in time (P585)   , determination method (P459)   #defaultView:BarChart
# male/female population _must_ not be added unqualified as total population (!)
# this is an error and should be fixed at the item using P1540 and P1539 instead
# (wrong query result may be a manifestation of such)
SELECT ?year (AVG(?pop) AS ?population) ?countryLabel
       (COUNT(*) AS ?number_of_chosen_sources) (SAMPLE(?method) AS ?a_source_of_those_chosen)
WHERE
{
  ?country wdt:P31 wd:Q3624078;#more useful than Q6256;
           p:P1082 ?popStatement .
  ?popStatement ps:P1082 ?pop;
                pq:P585 ?date .
  BIND(STR(YEAR(?date)) AS ?year)
  #FILTER ( (YEAR(?date)) >= 2000 ) 
  # IF multiple ?pop values per country per year exist, we prioritize by source
  #       census 1st, others 2nd, estimation(s) 3rd, unknown sources (none supplies P459) last
  # note: wikibase:rank won't help here: each year may have multiple statements for ?pop value
  #       rank:prefered is used for the best value (or values) of the latest or current year
  #       rank:normal may be justified for all of multiple ?pop values for a given year
  OPTIONAL { ?popStatement pq:P459 ?method. }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?d; pq:P459 ?estimate ].
             FILTER(STR(YEAR(?d)) = ?year). FILTER(?estimate = wd:Q791801). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?e; pq:P459 ?census ].
             FILTER(STR(YEAR(?e)) = ?year). FILTER(?census = wd:Q39825). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?f; pq:P459 ?other ].
             FILTER(STR(YEAR(?f)) = ?year). FILTER(?other != wd:Q39825 && ?other != wd:Q791801). }
  BIND(COALESCE( 
    IF(BOUND(?census), ?census, 1/0),
    IF(BOUND(?other), ?other, 1/0),
    IF(BOUND(?estimate), ?estimate, 1/0) ) AS ?pref_method).
  FILTER(IF(BOUND(?pref_method),?method = ?pref_method,true))
  # .. still need to group if multiple values per country per year exist and
  # - none is qualified with P459
  # - multiple ?estimate or multiple ?census (>1 value from same source)
  # - ?other yields more than one source (>1 values are better than optionally
  #                         supplied estimate, but no census source available)

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }               
}
GROUP BY ?year ?countryLabel
ORDER BY ?year ?countryLabel Try it! Centrales électriques construites par année et par pays #defaultView:BarChart
SELECT (SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?count) (SAMPLE(?_countryLabel) AS ?_countryLabel) WHERE {
  ?object wdt:P31/wdt:P279* wd:Q134447. # Power stations or subtypes
  BIND(STR(YEAR(?_inception)) AS ?year)
  ?object wdt:P571 ?_inception;
          wdt:P17 ?_country.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?_country rdfs:label ?_countryLabel. }
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Diagramme en barres des tableaux produits annuellement par Piet Mondrian #defaultView:BarChart
SELECT ?year (COUNT(?year) as ?count) WHERE {
  ?painting wdt:P31 wd:Q3305213.
  ?painting wdt:P170 wd:Q151803.
  ?painting wdt:P571 ?inception.
  BIND(str(year(?inception)) AS ?year)
  OPTIONAL { ?painting wdt:P18 ?image. }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} GROUP BY ?year ?count ORDER BY ?year
 Try it! Diagramme en barres du ratio hommes / femmes des créateurs d'art public pour la ville de Nijmègue, aux Pays-Bas #defaultView:BarChart
select ?genderLabel (count(?gender) as ?genderCount) where {
  ?item wdt:P136 wd:Q557141;
        wdt:P131 wd:Q47887;
        wdt:P170 ?creator. 
    
  ?creator wdt:P21 ?gender.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} group by ?genderLabel ?genderCount
 Try it! Graphique en aires Morts du cancer par année et par type de cancer The following query uses these:Items: human (Q5)   , cancer (Q12078)   Properties: instance of (P31)   , cause of death (P509)   , date of death (P570)   , subclass of (P279)   #defaultView:AreaChart
SELECT ?cod (STR(SAMPLE(?yearOfDeath)) AS ?YEAR_Of_DEATH) (COUNT(*) AS ?NUMBER_OF_DEATHS) ?cause WHERE {
  ?pid wdt:P31 wd:Q5;  # instance of human
       wdt:P509 ?cod;  # cause of death
       wdt:P570 ?_date_of_death.
  ?cod wdt:P279* wd:Q12078.  # type of cancer
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                         ?cod rdfs:label ?cause. }
  BIND ( YEAR(?_date_of_death) AS ?yearOfDeath )
  FILTER( ?yearOfDeath > 1960 )
}
GROUP BY ?cod ?cause ?yearOfDeath Try it! Arbre Continents, pays, régions et capitales The following query uses these:Items: continent (Q5107)   , country (Q6256)   , city (Q515)   Properties: instance of (P31)   , continent (P30)   , contains the administrative territorial entity (P150)   , locator map image (P242)   , flag image (P41)   , capital (P36)   , image (P18)   , population (P1082)   , head of government (P6)   , twinned administrative body (P190)   , inception (P571)   , located in or next to body of water (P206)   , has part(s) (P527)   #defaultView:Tree
SELECT ?continent ?continentFlag ?continentLabel ?country ?countryLabel ?countryFlag ?region ?regionLabel ?regionFlag ?city ?cityLabel ?cityImage ?property ?propertyLabel ?value ?valueLabel WHERE {
  {
    SELECT * WHERE {
      ?continent wdt:P31 wd:Q5107.
      ?country wdt:P30 ?continent.
      ?country p:P31/ps:P31 wd:Q6256.
      ?country wdt:P150 ?region.
      OPTIONAL {
        ?continent wdt:P242 ?continentFlag.
        ?country wdt:P41 ?countryFlag.
        ?region wdt:P41 ?regionFlag.
      }
      OPTIONAL {
        ?region wdt:P36 ?city.
        ?city wdt:P31 wd:Q515.
        ?city wdt:P18 ?cityImage.
        OPTIONAL {
          VALUES (?prop) {
            (wdt:P1082)
            (wdt:P6)
            (wdt:P190)
            (wdt:P31)
            (wdt:P571)
            (wdt:P150)
            (wdt:P206)
            (wdt:P527)
          }
          ?city ?prop ?value.
          ?property ?ref ?prop.
          ?property rdf:type wikibase:Property.
        }
      }
    }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Compositeurs viennois et leurs compositions par tonalité The following query uses these:Items: human (Q5)   , Vienna (Q1741)   Properties: instance of (P31)   , place of birth (P19)   , place of death (P20)   , residence (P551)   , image (P18)   , composer (P86)   , tonality (P826)   #defaultView:Tree
SELECT ?composer ?composerLabel ?composerImage ?tonality ?tonalityLabel ?composition ?compositionLabel WHERE {
  ?composer wdt:P31 wd:Q5;
            wdt:P19|wdt:P20|wdt:P551 wd:Q1741.
  OPTIONAL { ?composer wdt:P18 ?composerImage. }
  ?composition wdt:P86 ?composer;
               wdt:P826 ?tonality.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de-at,de\". }
}
ORDER BY ?composerLabel ?tonalityLabel Try it! Arborescence Séries télévisées populaires (arborescence) #added before 2016-10

#defaultView:TreeMap
SELECT ?show ?showLabel  ?season ?cleanSeasonLabel ?episode ?episodeLabel
WHERE
{
	{
		BIND(wd:Q886 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-23) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	} 
	UNION
	{
		BIND(wd:Q16538 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-20) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}  
	UNION
	{
		BIND(wd:Q147235 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(CONCAT(\"S\", SUBSTR(?_seasonLabel, 25)) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}

	SERVICE wikibase:label {  bd:serviceParam wikibase:language \"en\" }
}
 Try it! Personnes célèbres en fonction de la couleur des yeux et des cheveux #defaultView:TreeMap
SELECT ?eyes ?hairColorLabel (COUNT(?person) as ?count)
WHERE
{
	?person wdt:P1340 ?eyeColor.
    ?person wdt:P1884 ?hairColor.
    ?person wdt:P2048 ?height.
    ?eyeColor rdfs:label ?_eyeColorLabel.
    FILTER((LANG(?_eyeColorLabel)) = \"en\")
    BIND(CONCAT(?_eyeColorLabel, \" eyes\") AS ?eyes)
   
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
GROUP BY ?eyes ?hairColorLabel
 Try it! Graphe de dispersion Nombre de films par genre et par année The following query uses these:Items: film (Q11424)   Properties: instance of (P31)   , publication date (P577)   , genre (P136)   #defaultView:ScatterChart
SELECT   ?year  (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?label )  (?year as ?year_shown) WHERE {
  ?item wdt:P31 wd:Q11424.
  ?item wdt:P577 ?_publication_date.
  ?item wdt:P136 ?_genre.
  ?_genre rdfs:label ?_genreLabel.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  FILTER((LANG(?_genreLabel)) = \"en\")
 
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 30) Try it! Calendriers Calendrier des dates de naissance des femmes qui ont étudié à l'université d'Oxford SELECT ?monthLabel (?day_int as ?d) ?personLabel ?personDesc
   (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?rperson),32) )) as ?link) WHERE {
{ SELECT ?month_int ?month ?day_int (SAMPLE(?person) AS ?rperson) WHERE {
?month wdt:P31 wd:Q47018901; wdt:P1545 ?month_ordinal. # These lines generate a calendar from January 1 to December 31
?day p:P361 [ps:P361 ?month; pq:P1545 ?day_ordinal ].
 BIND(xsd:integer(?month_ordinal) AS ?month_int)
 BIND(xsd:integer(?day_ordinal) AS ?day_int)
OPTIONAL {
# Define the people we're interested in
{?person wdt:P69 wd:Q34433 } UNION {?person wdt:P69/wdt:P31 wd:Q2581649 } # educated at Oxford or an Oxford college
?person wdt:P21 wd:Q6581072 ; # female
   p:P569/psv:P569 ?date_node. # birth date
?date_node wikibase:timePrecision \"11\"^^xsd:integer ; # birth date has specific day
   wikibase:timeValue ?birthdate .        
filter(DAY(?birthdate)=?day_int) filter (MONTH(?birthdate)=?month_int )
}
} GROUP BY ?month_int ?month ?day_int }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
?rperson rdfs:label ?personLabel. ?rperson schema:description ?personDesc. ?month rdfs:label ?monthLabel }
} ORDER BY ?month_int ?day_int
 Try it! Exemples avec des coordonnées pour illustrer les cartes Eléments à proximité du lieu de l'utilisateur #defaultView:Map{\"layer\":\"?instance_ofLabel\"}
SELECT ?place ?placeLabel ?image ?coordinate_location ?dist ?instance_of ?instance_ofLabel WHERE {
  SERVICE wikibase:around {
    ?place wdt:P625 ?coordinate_location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\".
    bd:serviceParam wikibase:distance ?dist.
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?place wdt:P18 ?image. }
  OPTIONAL { ?place wdt:P31 ?instance_of. }
}
 Try it! Emplacement des parcs nationaux #defaultView:Map
SELECT ?objectLabel ?objectDescription ?link ?coord
WHERE {
  ?object wdt:P31/wdt:P279? wd:Q46169 .
          OPTIONAL { ?object wdt:P856 ?link. } 
          OPTIONAL { ?object wdt:P625 ?coord . }
          SERVICE wikibase:label {
               bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\"
          }
}
 Try it! Aéroports dans un rayon de 100km autour de Berlin #added before 2016-10

#defaultView:Map
SELECT ?place ?placeLabel ?location
WHERE
{
  # Berlin coordinates
  wd:Q64 wdt:P625 ?berlinLoc .
  SERVICE wikibase:around {
    ?place wdt:P625 ?location .
    bd:serviceParam wikibase:center ?berlinLoc .
    bd:serviceParam wikibase:radius \"100\" .
  } .
  # Is an airport
  FILTER EXISTS { ?place wdt:P31/wdt:P279* wd:Q1248784 } .
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
  } 
}
 Try it! Aéroports de Belgique #List of airports in Belgium
#defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor
WHERE {
  ?airport wdt:P31 wd:Q1248784 ;
          ?range wd:Q31;
          wdt:P625 ?coor.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Aéroports internationaux portant des noms de femmes # Airports named after women
# List of airports that are named after women
# Written by WiseWoman auf der #wmdemv 2019
# defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor ?namedafterLabel
WHERE {
  ?airport wdt:P31 wd:Q644371 ;  
          # ?range wd:Q183;
          wdt:P625 ?coor.
  ?airport wdt:P138 ?namedafter .
  ?namedafter wdt:P31 wd:Q5 .
  ?namedafter wdt:P21 wd:Q6581072 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Ecoles entre San Jose et Sacramento en Californie The following query uses these:Items: San Jose (Q16553)   , Sacramento (Q18013)   , school (Q3914)   Properties: coordinate location (P625)   , instance of (P31)   , subclass of (P279)    Features: map (Q24515275)   , wikibase:box (Q26211169)   , wikibase:box with West and East corners (Q26211177)  # Schools between San Jose, CA and Sacramento, CA
#defaultView:Map
SELECT *
WHERE
{ hint:Query hint:optimizer \"None\" .
  wd:Q16553 wdt:P625 ?SJloc .
  wd:Q18013 wdt:P625 ?SCloc .
  SERVICE wikibase:box {
      ?place wdt:P625 ?location .
      bd:serviceParam wikibase:cornerWest ?SJloc .
      bd:serviceParam wikibase:cornerEast ?SCloc .
    }
  ?place wdt:P31/wdt:P279* wd:Q3914 .
} Try it! Grandes villes groupées selon la population par niveaux géographiques #defaultView:Map
SELECT DISTINCT ?city ?cityLabel (SAMPLE(?location) AS ?location) (MAX(?population) AS ?population) (SAMPLE(?layer) AS ?layer)
WHERE
{
  ?city wdt:P31/wdt:P279* wd:Q515;
        wdt:P625 ?location;
        wdt:P1082 ?population.
  FILTER(?population >= 500000).
  BIND(
    IF(?population < 1000000, \"<1M\",
    IF(?population < 2000000, \"1M-2M\",
    IF(?population < 5000000, \"2M-5M\",
    IF(?population < 10000000, \"5M-10M\",
    IF(?population < 20000000, \"10M-20M\",
    \">20M\")))))
    AS ?layer).
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?city ?cityLabel
 Try it! Endroits avec wifi gratuit #defaultView:Map
# Places with free wi-fi
SELECT ?item ?itemLabel (SAMPLE(?coord) AS ?coord)
WHERE {
	?item wdt:P2848 wd:Q1543615 ;  # wi-fi gratis
	      wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} GROUP BY ?item ?itemLabel
 Try it! Carte basique des stations de métro de la ligne U1 à Berlin #added before 2016-10
#defaultView:Map
SELECT ?stationLabel ?coord
WHERE {
	?station wdt:P81 wd:Q99691 ;
		 wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\" }
}
 Try it! Carte détaillée de Stockholm Metro (Q272926) Map of Stockholm Metro (query) Emplacement des universités du Cameroun #added before 2016-10
#defaultView:Map
SELECT ?universityLabel ?universityDescription ?website ?coord
WHERE {
	?university wdt:P31/wdt:P279* wd:Q3918 ;
		wdt:P17 wd:Q1009 ;
		wdt:P625 ?coord .
	OPTIONAL {
		?university wdt:P856 ?website
	}
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"en,de\" .
	}
}
 Try it! Distribution des familles humaines dont les noms se terminent par « -ow » ou « -itz » en Allemagne #added before 2016-10
 #defaultView:Map
SELECT ?item ?itemLabel ?coord
WHERE
{
	?item wdt:P31/wdt:P279* wd:Q486972;
    	      wdt:P17 wd:Q183;
    	      rdfs:label ?itemLabel;
    	      wdt:P625 ?coord;
    	 FILTER (lang(?itemLabel) = \"de\") .
    	 FILTER regex (?itemLabel, \"(ow|itz)$\").
}
 Try it! Emplacement des centrales électriques #defaultView:Map
SELECT DISTINCT ?objectLabel ?coord ?layer
WHERE
{
  ?object wdt:P31/wdt:P279* wd:Q159719;
     wdt:P625 ?coord.
  ?object wdt:P31 ?type. ?type wdt:P279* wd:Q159719.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?type rdfs:label ?layer }
}
 Try it! Emplacement des ponts à arche de pierre #defaultView:Map
SELECT ?label ?coord ?place ?image
WHERE {
	?place wdt:P31 wd:Q14276458 ;  # instance of deck arch bridge
            wdt:P186 wd:Q22731 ;  # made of stone
            wdt:P625 ?coord .
	OPTIONAL { ?place wdt:P18 ?image }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?place rdfs:label ?label }
}
 Try it! Emplacement des aqueducs #defaultView:Map
SELECT ?place ?placeLabel ?coord ?layer
WHERE {
   ?place wdt:P31/wdt:P279? wd:Q474 ; # instance of aqueduct
          wdt:P625 ?coord ;
          wdt:P31 ?type.
  ?type wdt:P279* wd:Q474
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                       ?type rdfs:label ?layer}
}
 Try it! Emplacement des sites archéologiques avec images #defaultView:Map
SELECT ?siteLabel ?coord ?image ?site
WHERE {
   ?site wdt:P31/wdt:P279* wd:Q839954 ;
      wdt:P625 ?coord ;
      wdt:P18 ?image .
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Emplacement des sites archéologiques avec château #defaultView:Map
SELECT ?label ?coord ?subj
WHERE {
   ?subj wdt:P31 wd:Q839954 ; # instance of archaeological site
         wdt:P31/wdt:P279* wd:Q23413 ;  # instance or subclass of castle
         wdt:P625 ?coord .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?subj rdfs:label ?label}
}
 Try it! Localisation des batailles #added before 2016-10
#defaultView:Map
SELECT ?label ?coord ?subj ?year
WHERE
{
	?subj wdt:P31 wd:Q178561 .
	?subj wdt:P625 ?coord .
	OPTIONAL {?subj wdt:P580 ?d1}
	OPTIONAL {?subj wdt:P585 ?d2}
  	OPTIONAL {?subj wdt:P582 ?d3}
	BIND(IF(!BOUND(?d1),(IF(!BOUND(?d2),?d3,?d2)),?d1) as ?date)
	BIND(YEAR(?date) as ?year)
	?subj rdfs:label ?label filter (lang(?label) = \"en\")
}
 Try it! Lieux de culte #added before 2016-10

#defaultView:Map
SELECT ?item ?itemLabel ?_coordinate_location ?_image WHERE {
  ?item wdt:P31/wdt:P279* wd:Q1370598.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
   ?item wdt:P625 ?_coordinate_location.
  ?item wdt:P18 ?_image.
}
 Try it! Tous les musées (y compris leurs sous-classes) de Washington, D.C. avec les coordonnées géographiques #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?name ?coord ?lat ?lon
WHERE {
   hint:Query hint:optimizer \"None\" .
   ?item wdt:P131* wd:Q61 .
   ?item wdt:P31/wdt:P279* wd:Q33506 .
   ?item wdt:P625 ?coord .
   ?item p:P625 ?coordinate .
   ?coordinate psv:P625 ?coordinate_node .
   ?coordinate_node wikibase:geoLatitude ?lat .
   ?coordinate_node wikibase:geoLongitude ?lon .
   SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
    ?item rdfs:label ?name
   }
}
ORDER BY ASC (?name)
 Try it! Carte des musées des Pays-Bas avec une couleur indiquant s'ils acceptent le Museumkaart (Q2237462) #defaultView:Map
select ?museum ?museumLabel ?layer (sample(?location) as ?location) where {
  ?museum wdt:P31/wdt:P279* wd:Q33506;
          wdt:P17 wd:Q55;
          wdt:P625 ?location.
  optional { ?museum wdt:P2851 ?layer. }
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} group by ?museum ?museumLabel ?layer
 Try it! Tous les stations de ski avec leurs coordonnées #defaultView:Map
SELECT ?item ?itemLabel ?coord #?lat ?lon
WHERE
{
   ?item               wdt:P31        wd:Q130003.
   ?item               wdt:P625         ?coord.

#  ?item                 p:P625         ?statementnode.
#  ?statementnode      psv:P625         ?valuenode.
#  ?valuenode     wikibase:geoLatitude  ?lat.
#  ?valuenode     wikibase:geoLongitude ?lon.

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Phares de Norvège #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?coords ?image
WHERE {
	?item wdt:P31 wd:Q39715 ;
          wdt:P17 wd:Q20 ;
          wdt:P625 ?coords
	OPTIONAL { ?item wdt:P18 ?image } 
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],nb,nn,en,fi\"  } 
}
ORDER BY ?itemLabel
 Try it! Les plus beaux villages de France #defaultView:Map
SELECT ?item ?itemLabel ?geoLocation ?image
WHERE {
    ?item wdt:P463 wd:Q1010307 ;  # member of Les Plus Beaux Villages de France (organisation)
          wdt:P625 ?geoLocation .
    OPTIONAL { ?item wdt:P18 ?image }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" }
}
 Try it! Localisations dans les îles Fidji This query shows a way of mapping locations which span the 180th meridian, without the points being split between the left and right edges of the map. #defaultView:Map
select ?item ?coords_ where {
  ?item wdt:P17 wd:Q712 .
  ?item p:P625/psv:P625 ?coords .
  ?coords wikibase:geoLatitude ?lat ;
          wikibase:geoLongitude ?lon .
  bind(strdt(concat(\"Point(\", if((?lon < 0), str(?lon + 360), str(?lon)), \" \", str(?lat), \")\"), geo:wktLiteral) as ?coords_) .
} limit 1000
 Try it! Carte des catastrophes naturelles, colorisée selon le type de catastrophe Carte des catastrophes naturelles (couleur selon le type) #defaultView:Map{\"layer\":\"?typeLabel\"}
SELECT ?item ?itemLabel ?geo ?type ?typeLabel (SAMPLE(?_image) AS ?image) WHERE {
  ?type wdt:P279* wd:Q3839081 .
  ?item wdt:P31 ?type ;
        wdt:P625 ?geo .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image }
}
GROUP BY ?item ?itemLabel ?geo ?type ?typeLabel
 Try it! Monuments et autres éléments du passé situés 1 km autour du lieu de l'utilisateur #defaultView:Map
select distinct ?monument ?monumentLabel ?heritageLabel (sample(?distance) as ?distance) (sample(?location) as ?location) (sample(?image) as ?image) where {
  ?monument wdt:P1435 ?heritage.
  
  service wikibase:around {   
    ?monument wdt:P625 ?location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\" . 
    bd:serviceParam wikibase:distance ?distance .
  }
  
  optional {
    ?monument wdt:P18 ?image.
  }
  
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,nl\". }
} group by ?monument ?monumentLabel ?heritageLabel order by ?distance
 Try it! Carte des journaux des Etats Unis d'aprés l'infobox du journal présente dans l'article correspondant de la Wikipedia anglaise Map of newspapers in the United States by presence of the template Infobox newspaper in their English Wikipedia article integrates a text search for the template's name using the MediaWiki API into a SPARQL query #defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?id ?coords ?article ?rgb WHERE {
 ?c wdt:P279* wd:Q11032 .
  ?item wdt:P31 ?c .
 ?item wdt:P17|wdt:P495 wd:Q30 .
 OPTIONAL{?item wdt:P5454 ?id .}
 ?item wdt:P291 ?place .
 ?place wdt:P625 ?coords.
 OPTIONAL {   
   SELECT ?item ?pageid ?ns WHERE {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam mwapi:generator \"search\" .
      bd:serviceParam mwapi:gsrsearch \"hastemplate:\\\"infobox newspaper\\\"\" .
      bd:serviceParam mwapi:gsrlimit \"max\" .
      ?item wikibase:apiOutputItem mwapi:item .
      ?pageid wikibase:apiOutput \"@pageid\" .
      ?ns wikibase:apiOutput \"@ns\" .
    }
  } LIMIT 15000
 }
    
  OPTIONAL {
      ?article schema:about ?item .
      ?article schema:inLanguage \"en\" .
      FILTER (SUBSTR(str(?article), 1, 25) = \"https://en.wikipedia.org/\")
  }

  BIND( IF(BOUND(?article),   IF(BOUND(?ns), \"009500\" , \"FFF000\" )  ,  \"FF0000\"   )  AS ?rgb).  
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
 Try it! Liste de tous les lacs du Cameroun The following query uses these:Items: lake (Q23397)   , Cameroon (Q1009)   Properties: instance of (P31)   , subclass of (P279)   , country (P17)   , coordinate location (P625)   , image (P18)    Features: map (Q24515275)  """@en,
    """Other languages: English Nederlands Türkçe español français svenska українська հայերեն 中文 日本語 Contents 1 Showcase Queries 1.1 Largest cities with female mayor 1.2 List of countries ordered by the number of their cities with female mayor 1.3 Popular surnames among humans 1.4 Given names with most variations 1.5 Popular surnames among fictional characters 1.6 Women with most sitelinks and no image born in 1921 or later 1.7 Whose birthday is today? 1.8 Finding John and Sarah Connor 1.9 Data of Douglas Adams 1.10 Data of Douglas Adams (modified version) 1.11 Data of Barbara Harris - Grouped per item 1.12 People who have been buried in multiple places 1.13 All oldest living US ex-presidents in chronological order 1.14 Persons and institutions related in some way to Russian politics 2 Advanced Queries 2.1 Bubble charts 2.1.1 Overall causes of death ranking 2.1.2 WWII battle durations 2.1.3 The top 10 heaviest humans 2.1.4 Values of uses (P2283) in scholarly articles 2.2 Timeline 2.2.1 Timeline of space probes 2.2.2 Timeline of compositions by Wolfgang Amadeus Mozart 2.3 Dimensions 2.3.1 Dimensions of elements 2.4 Graph 2.4.1 Children of Genghis Khan 2.4.2 Firearms cartridges and which they are based on 2.4.3 Music genres 2.4.4 Groups of characters in the Marvel universe 2.5 Line chart 2.5.1 Average number of children per year 2.5.2 Population of countries sharing a border with Germany 2.5.3 Population of countries sharing a border with Cameroon 2.5.4 Number of books by year and genre 2.5.5 Number of bands by year and genre 2.6 Bar chart 2.6.1 Battles per year per country last 80 years 2.6.2 Battles per year per continent and country last 80 years (animated) 2.6.3 Yearly Population stacked by country 2.6.4 Built power plants per year per country 2.6.5 Bar chart of paintings produced per year by Piet Mondrian 2.6.6 Hollanda'nın Nijmegen şehrindeki kamuya açık sanatlarda kadın / erkek yaratıcıların oranını gösteren çubuk grafik 2.7 Area chart 2.7.1 Cancer deaths per year and cancer type 2.8 Tree 2.8.1 Continents, countries, regions and capitals 2.8.2 Viennese composers and their compositions by tonality 2.9 Treemap 2.9.1 Popular television series (in treeview) 2.9.2 Famous people categorised into eye and hair color 2.10 Scatter chart 2.10.1 Number of films by year and genre 2.11 Calendars 2.11.1 Calendar of birth dates of women who studied at the University of Oxford 2.12 Samples with coordinates to illustrate maps 2.12.1 Items around with user location 2.12.2 Locations of national parks 2.12.3 Airports within 100km of Berlin 2.12.4 Airports in Belgium 2.12.5 International airports named after women 2.12.6 Schools between San Jose, CA and Sacramento, CA 2.12.7 Big cities, grouped into map layers by population 2.12.8 Places with free wifi 2.12.9 Basic map of U1 subway stations in Berlin 2.12.10 Advanced map of Stockholm Metro (Q272926) 2.12.11 Locations of universities in Cameroon 2.12.12 Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany 2.12.13 Locations of power stations 2.12.14 Locations of stone arch bridges 2.12.15 Locations of aqueducts 2.12.16 Locations of archaeological sites, with images 2.12.17 Locations of castles that are also archaeological sites 2.12.18 Locations of battles 2.12.19 Places of worship 2.12.20 All museums (including subclass of museum) in Washington, D.C. with coordinates 2.12.21 Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) 2.12.22 All ski resorts with coordinates 2.12.23 Lighthouses in Norway 2.12.24 Most beautiful villages of France 2.12.25 Locations in Fiji 2.12.26 Map of disasters, color-coded by disaster type 2.12.27 Monuments and other heritage items located 1 km around the users location 2.12.28 Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article 2.12.29 List of all the lakes in Cameroon 2.13 Listeria 2.13.1 Women born in Wales without an article in Welsh for Listeria 2.13.2 People born in Occitania for Listeria 2.13.3 People born in Scotland for Listeria 2.14 Gather Apply Scatter 2.14.1 Children of Genghis Khan 2.15 Sampling 2.15.1 Scientific articles without any description 2.16 Mediawiki API 2.16.1 Filter labels using EntitySearch from mwapi service to provide Full Text Search 2.16.2 Using mwapi to base a query on articles in a Wikipedia category 2.16.3 Find statements with references containing external links to wipo.int 2.16.4 Find metadata like artist and license for an image 2.16.5 Getting pageviews for all articles in a category 2.17 Federation 2.17.1 Get OpenStreetMap top level properties of Helsinki University main building 2.17.2 Get information of Europeana item 2.17.3 Share of renewable energy in electricity 2.17.4 Get OpenStreetMap nodes with inarisami label in wikipedia but without inarisami label in OSM 3 Queries useful to external services 3.1 The best ranked properties and values of a given item Showcase Queries These queries show the power and functionality of SPARQL and WDQS GUI. Largest cities with female mayor #added before 2016-10
#TEMPLATE={\"template\":\"Largest ?c with ?sex head of government\",\"variables\":{\"?sex\":{\"query\":\" SELECT ?id WHERE { ?id wdt:P31 wd:Q48264 .  } \"},\"?c\":{\"query\":\"SELECT DISTINCT ?id WHERE {  ?c wdt:P31 ?id.  ?c p:P6 ?mayor. }\"} } }
SELECT DISTINCT ?city ?cityLabel ?mayor ?mayorLabel
WHERE
{
  BIND(wd:Q6581072 AS ?sex)
  BIND(wd:Q515 AS ?c)

	?city wdt:P31/wdt:P279* ?c .  # find instances of subclasses of city
	?city p:P6 ?statement .            # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .          # ... that has the value ?mayor
	?mayor wdt:P21 ?sex .       # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	
	# Now select the population value of the ?city
	# (wdt: properties use only statements of \"preferred\" rank if any, usually meaning \"current population\")
	?city wdt:P1082 ?population .
	# Optionally, find English labels for city and mayor:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
	}
}
ORDER BY DESC(?population)
LIMIT 10
 Try it! List of countries ordered by the number of their cities with female mayor #added before 2016-10
SELECT ?country ?countryLabel (count(*) AS ?count)
WHERE
{
	?city wdt:P31/wdt:P279* wd:Q515 . # find instances of subclasses of city
	?city p:P6 ?statement .           # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .         # ... that has the value ?mayor
	?mayor wdt:P21 wd:Q6581072 .      # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	?city wdt:P17 ?country .          # Also find the country of the city
 	
	# If available, get the \"ru\" label of the country, use \"en\" as fallback:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"ru,en\" .
	}
}
GROUP BY ?country ?countryLabel
ORDER BY DESC(?count)
LIMIT 100
 Try it! Popular surnames among humans #defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?human) AS ?count) WHERE {
    # ?human wdt:P31 wd:Q5.
      ?human wdt:P734 ?surname.
    }
    GROUP BY ?surname ORDER BY DESC(?count) LIMIT 100
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} 
ORDER BY DESC(?count)
 Try it! Given names with most variations #added before 2016-10

SELECT ?name ?nameLabel (COUNT(?otherName) AS ?count)
WHERE
{
  ?name wdt:P31 wd:Q202444;
        wdt:P460 ?otherName.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?name ?nameLabel
ORDER BY DESC(?count)
LIMIT 10
 Try it! Popular surnames among fictional characters #added before 2016-10

#defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?person) AS ?count) WHERE {
      ?person (wdt:P31/wdt:P279*) wd:Q95074.
      ?person wdt:P734 ?surname.
    }
    GROUP BY ?surname
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?count)
LIMIT 100
 Try it! Women with most sitelinks and no image born in 1921 or later SELECT ?s ?desc ?linkcount
WHERE
{
  ?s wdt:P31 wd:Q5 ;   # human
     wdt:P21 wd:Q6581072 ;  # gender: female
     wdt:P569 ?born .
  FILTER (?born >= \"1921-01-01T00:00:00Z\"^^xsd:dateTime) .
  ?s wikibase:sitelinks ?linkcount .
  MINUS {
    ?s wdt:P18 []  # exclude if there is an image
  }
?s rdfs:label ?desc FILTER(lang(?desc)=\"en\").
}
GROUP BY ?s ?desc ?linkcount
ORDER BY DESC(?linkcount)
LIMIT 50
 Try it! Whose birthday is today? #Whose birthday is today?
SELECT ?entity ?entityLabel ?entityDescription (YEAR(?date) as ?year)
WHERE {
    BIND(MONTH(NOW()) AS ?nowMonth)
    BIND(DAY(NOW()) AS ?nowDay)
    ?entity wdt:P569 ?date .
    FILTER (MONTH(?date) = ?nowMonth && DAY(?date) = ?nowDay)

SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }   
}
LIMIT 20
 Try it! Finding John and Sarah Connor #added before 2016-10
 SELECT * WHERE {
  ?p wdt:P1080 wd:Q620588 . # from fictional universe: Terminator
  ?p rdfs:label ?pl .
  FILTER (lang(?pl) = \"en\")
  ?p wdt:P25 ?m .  # ?m is mother of ?p
  ?m rdfs:label ?ml .
  FILTER (lang(?ml) = \"en\")
}
 Try it! Data of Douglas Adams #added before 2016-10

PREFIX entity: <http://www.wikidata.org/entity/>
#partial results

SELECT ?propUrl ?propLabel ?valUrl ?valLabel ?picture
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"identity\"@en AS ?propLabel ) .
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel
	}
	
  	?valUrl rdfs:label ?valLabel
	FILTER (LANG(?valLabel) = 'en') .
	OPTIONAL{ ?valUrl wdt:P18 ?picture .}
	FILTER (lang(?propLabel) = 'en' )
}
ORDER BY ?propUrl ?valUrl
LIMIT 200
 Try it! Data of Douglas Adams (modified version) PREFIX entity: <http://www.wikidata.org/entity/>

#  In addition to the original query this one comes with some advantages:
#  - You will get only literals as results, (even if the values are stored as IRI in wikibase)
#  - That means you will also get properties as birth date, alphanumeric identifier and so on.
#  - The list is ordered numerically by property number. (So P19 comes before P100) 
#  - All label, altLabel and description in a given Language are included.
#  You may open a separate column ?valUrl if you need also the IRI
#
#  Please advise, if there is an option to put the Q-Number  and/or the Language 
#  code into a runtime variable. 

SELECT ?propNumber ?propLabel ?val
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"Name\"@de AS ?propLabel ) .
       entity:Q42 rdfs:label ?val .
      
        FILTER (LANG(?val) = \"de\") 
	}
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"AltLabel\"@de AS ?propLabel ) .
        optional{entity:Q42 skos:altLabel ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"Beschreibung\"@de AS ?propLabel ) .
        optional{entity:Q42 schema:description ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
   	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' )
        filter  isliteral(?valUrl) 
        BIND(?valUrl AS ?val)
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' ) 
        filter  isIRI(?valUrl) 
        ?valUrl rdfs:label ?valLabel 
		FILTER (LANG(?valLabel) = \"de\") 
         BIND(CONCAT(?valLabel) AS ?val)
	}
        BIND( SUBSTR(str(?propUrl),38, 250) AS ?propNumber)
}
ORDER BY xsd:integer(?propNumber)
 Try it! Data of Barbara Harris - Grouped per item # This query collects data related to entities on Barbara Harris. 
# It demonstrates collecting individual attributes and concatenating them for easier post processing. 

SELECT 
  ?item
(SAMPLE(?itemLabel) AS ?itemLabel) 
(SAMPLE(?itemDescription) AS ?itemDescription) 
  (SAMPLE(?pic) AS ?pic) 
(SAMPLE(?date_of_birth) AS ?date_of_birth) 
(GROUP_CONCAT(DISTINCT ?country_of_citizenship; SEPARATOR=\", \") AS ?country_of_citizenships)
(GROUP_CONCAT(DISTINCT ?country_of_citizenshipLabel; SEPARATOR=\", \") AS ?country_of_citizenshipLabels)

(GROUP_CONCAT(DISTINCT ?occupation; SEPARATOR=\", \") AS ?occupations)
(GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR=\", \") AS ?occupationLabels)

(GROUP_CONCAT(DISTINCT ?country; SEPARATOR=\", \") AS ?countries)
(GROUP_CONCAT(DISTINCT ?countryLabel; SEPARATOR=\", \") AS ?countryLabels)


WHERE {
  VALUES ?item {
    wd:Q269809
    wd:Q274590
    wd:Q24576851
    wd:Q807461
    wd:Q4858963
    wd:Q27954833
    wd:Q4859015
    wd:Q826930
  }
  OPTIONAL { ?item wdt:P18 ?pic. }
  OPTIONAL { ?item wdt:P27 ?country_of_citizenship. }
  OPTIONAL { ?item wdt:P106 ?occupation. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  OPTIONAL { ?item wdt:P31 ?instance_of. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
    ?item rdfs:label ?itemLabel.
    ?item rdfs:description ?itemDescription.
    ?country_of_citizenship rdfs:label ?country_of_citizenshipLabel.
    ?occupation rdfs:label ?occupationLabel.
    ?country rdfs:label ?countryLabel.
  }
}
GROUP BY ?item
 Try it! People who have been buried in multiple places # This query collects burial places of individuals, and sorts them in decreasing order
SELECT ?human (COUNT(?place) AS ?count) WHERE {
  ?human wdt:P31 wd:Q5.
  ?human wdt:P119 ?place.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}
GROUP BY ?human 
ORDER BY DESC(?count)
 Try it! All oldest living US ex-presidents in chronological order # Added 2020-07
# All persons who have been the oldest living US ex-president with dates in chronological order
SELECT DISTINCT ?date ?president ?presidentLabel
WITH
{
  # Persons who is/were president of USA
  SELECT ?president ?presidentLabel ?president_enddate ?president_birthdate ?president_deathdate
  WHERE
  {
    ?president wdt:P31 wd:Q5.
    ?president p:P39 ?president_statement.
    ?president_statement ps:P39 wd:Q11696.
    ?president_statement pq:P582 ?president_enddate.
    ?president wdt:P569 ?president_birthdate.
    OPTIONAL { ?president wdt:P570 ?president_deathdate. }
    ?president rdfs:label ?presidentLabel.
    FILTER (LANG(?presidentLabel) = \"en\")
  }
} AS %presidents
WITH
{
  # Dates where who is oldest living expresident can change
  SELECT DISTINCT ?date
  WHERE
  {
    {
      INCLUDE %presidents
      BIND(?president_enddate + \"P1D\"^^xsd:duration AS ?date)
    }
    UNION
    {
      INCLUDE %presidents
      BIND(?president_deathdate + \"P1D\"^^xsd:duration AS ?date)
    }
  }
} AS %dates
WITH
{
  # Find the age for all living expresidents for each value of ?date
  SELECT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    INCLUDE %presidents
    FILTER (?president_enddate < ?date) # Must have become expresident
    FILTER IF(BOUND(?president_deathdate), ?president_deathdate >= ?date, true) # Must still be living
    BIND (?date - ?president_birthdate AS ?age)
  }
} AS %ages
WITH
{
  # Find the oldest age for a living expresident for each value of ?date
  SELECT ?date (MAX(?age) AS ?oldest)
  WHERE
  {
    INCLUDE %ages
  }
  GROUP BY ?date
} AS %oldest
WITH
{
  SELECT DISTINCT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    OPTIONAL
    {
      INCLUDE %ages
      INCLUDE %oldest
      FILTER (?age = ?oldest)
    }
  }
} AS %result
WHERE
{
  # A result is a change from the previous date if ?president's presidency ended the day before ?date,
  # or if an older expresident died the day before ?date. Filter out results that don't fulfill this.
  INCLUDE %result
  BIND (?date - \"P1D\"^^xsd:duration AS ?day_before)
  FILTER
  (
    ! BOUND(?president)||
    EXISTS
    {
      ?president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?day_before.
    } ||
    EXISTS
    {
      ?other_president wdt:P31 wd:Q5.
      ?other_president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?other_president_end.
      ?other_president wdt:P569 ?other_president_birthdate.
      ?other_president wdt:P570 ?day_before.
      FILTER (?other_president_birthdate < ?president_birthdate) # Other president is oldest
      FILTER (?other_president_end < ?day_before) # other president died as expresident
    }
  )
}
ORDER BY ?date
 Try it! Persons and institutions related in some way to Russian politics # Added 2022-03
# people and institutions that have the affiliation attribute assigned to Russia 
select ?item ?itemLabel ?itemDescription where { ?item wdt:P1416 wd:Q159. SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } } limit 100
 Try it!  Advanced Queries Bubble charts Overall causes of death ranking #defaultView:BubbleChart
#TEMPLATE={\"template\":\"Overall causes of death ranking of ?thing \",\"variables\":{\"?thing\": {\"query\":\"SELECT ?id  (COUNT(?id) AS ?count) WHERE {  ?sub wdt:P509 ?y.  ?sub wdt:P31 ?id. } GROUP BY ?id \"} } }
SELECT ?cid ?cause (COUNT(*) AS ?count) WHERE {
  BIND(wd:Q5 AS ?thing)
  ?pid wdt:P31 ?thing;
      wdt:P509 ?cid.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?cid rdfs:label ?cause}
}
GROUP BY ?cid ?cause
ORDER BY DESC(?count) ?cause
 Try it! WWII battle durations #defaultView:BubbleChart
SELECT DISTINCT ?item ?itemLabel (?end - ?start AS ?duration)
WHERE
{
	?item wdt:P361* wd:Q362 ;
          wdt:P31/wdt:P279* wd:Q178561 ;
          wdt:P580 ?start ;
          wdt:P582 ?end .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! The top 10 heaviest humans #defaultView:BubbleChart
#TEMPLATE={ \"template\": \"The top 10 heaviest ?type \", \"variables\": { \"?type\": { \"query\": \"SELECT DISTINCT ?id WHERE { ?i wdt:P2067 ?v. ?i wdt:P31 ?id}\" } } }
SELECT ?item ?itemLabel ?mass
WHERE {
  {
    SELECT ?item ?mass WHERE {
      ?item wdt:P31 wd:Q5;
            p:P2067/psn:P2067/wikibase:quantityAmount ?mass.
    }
    ORDER BY DESC(?mass)
    LIMIT 10
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,fr,de\" }
}
 Try it! Values of uses (P2283) in scholarly articles # Values of \"uses\" used in scholarly articles
# Demonstrates how to turn off the optimizer and start with the lowest number of edges first.
#defaultView:BubbleChart
SELECT ?uses ?usesLabel (count(?item) as ?c)
WHERE 
{
  hint:Query hint:optimizer \"None\".
  ?item wdt:P2283 ?uses. # ~20,000 edges
  ?item wdt:P31 wd:Q13442814. # ~37M edges
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
group by ?uses ?usesLabel
order by desc(?c)
 Try it! Timeline Timeline of space probes #defaultView:Timeline
SELECT ?item ?itemLabel ?launchdate (SAMPLE(?image) AS ?image)
WHERE
{
	?item wdt:P31 wd:Q26529 .
    ?item wdt:P619 ?launchdate .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
    OPTIONAL { ?item wdt:P18 ?image }
}
GROUP BY ?item ?itemLabel ?launchdate
 Try it! Timeline of compositions by Wolfgang Amadeus Mozart #defaultView:Timeline
SELECT DISTINCT ?item ?itemLabel ?catalog_code ?publication_date
WHERE {
	?item wdt:P86 wd:Q254 ; # composer: W. A. Mozart
          wdt:P528 ?catalog_code ;
          wdt:P577 ?publication_date .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Dimensions Dimensions of elements #defaultView:Dimensions
SELECT ?elementLabel ?boiling_point ?melting_point ?electronegativity ?density ?mass WHERE {
?element wdt:P31 wd:Q11344;
   wdt:P2102 ?boiling_point;
   wdt:P2101 ?melting_point;
   wdt:P1108 ?electronegativity;
   wdt:P2054 ?density;
   wdt:P2067 ?mass.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
LIMIT 100
 Try it! Graph Children of Genghis Khan #defaultView:Graph
PREFIX gas: <http://www.bigdata.com/rdf/gas#>

SELECT ?item ?itemLabel ?pic ?linkTo
WHERE {
  SERVICE gas:service {
    gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;
                gas:in wd:Q720 ;
                gas:traversalDirection \"Forward\" ;
                gas:out ?item ;
                gas:out1 ?depth ;

                gas:maxIterations 4 ;
                gas:linkType wdt:P40 .
  }
  OPTIONAL { ?item wdt:P40 ?linkTo }
  OPTIONAL { ?item wdt:P18 ?pic }
  SERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Firearms cartridges and which they are based on #Show firearms cartridges and which they are based on
#defaultView:Graph
SELECT 
?item ?itemLabel ?image 
?other ?otherLabel ?image2
WHERE
{
    ?item  wdt:P279+ wd:Q37144 .   # cartridges
    ?item  wdt:P144    ?other  .   # if the cartridge is based on another
    OPTIONAL {
      ?item  wdt:P18     ?image  .   # grab image
      ?other wdt:P18     ?image2 .   # grab image
    }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Music genres #graph rendering could be slow due to large number of results

#defaultView:Graph
SELECT ?item ?itemLabel ?_image ?_subclass_of ?_subclass_ofLabel
WHERE {
  ?item wdt:P31 wd:Q188451;
        wdt:P279 ?_subclass_of.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image. }
}
 Try it! Groups of characters in the Marvel universe #defaultView:Graph
SELECT ?char ?charLabel ?group ?groupLabel (\"7FFF00\" as ?rgb)
WHERE {
	?group wdt:P31 wd:Q14514600 ;  # group of fictional characters
          wdt:P1080 wd:Q931597.  # from Marvel universe
 ?char wdt:P463 ?group # member of group
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Line chart Average number of children per year The following query uses these:Items: human (Q5)   Properties: instance of (P31)   , number of children (P1971)   , date of birth (P569)   #defaultView:LineChart
SELECT  (str(?year) AS ?year) (AVG( ?_number_of_children ) AS ?count) WHERE {
  ?item wdt:P31 wd:Q5.
  ?item wdt:P1971 ?_number_of_children.
  ?item wdt:P569 ?_date_of_birth.
  BIND( year(?_date_of_birth) as ?year ).
  FILTER( ?year > 1900)
}

GROUP BY ?year Try it! Population of countries sharing a border with Germany #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q183;   # shares border with Germany
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Population of countries sharing a border with Cameroon #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q1009;  # shares border with Cameroon
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Number of books by year and genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?genreLabel )  WHERE {
  ?item wdt:P31 wd:Q571;
        wdt:P577 ?_publication_date;
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?_genre rdfs:label ?genreLabel.}
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Number of bands by year and genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count) (SAMPLE(?_genreLabel) AS ?_genreLabel) WHERE {
  ?item wdt:P31 wd:Q215380; # instance of: band
        wdt:P571 ?_date;   # inception
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_genre rdfs:label ?_genreLabel.}
  FILTER(?_date >= \"1960-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Bar chart Battles per year per country last 80 years #defaultView:BarChart

SELECT(SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel)  WHERE {
  ?subj wdt:P31 wd:Q178561.  # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. }  # start time
  OPTIONAL { ?subj wdt:P585 ?d2. }  # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. }  # end time
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(STR(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.  # country of location of battle
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_country rdfs:label ?_countryLabel.}
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Battles per year per continent and country last 80 years (animated) #defaultView:BarChart
SELECT (SAMPLE(?_continentLabel) AS ?continent) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel) (SAMPLE(?year) AS ?year)  WHERE {
  ?subj wdt:P31 wd:Q178561.        # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. } # start date
  OPTIONAL { ?subj wdt:P585 ?d2. } # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. } # end date
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(str(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.
  ?_country wdt:P30 ?_continent.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
       ?_country rdfs:label ?_countryLabel.
       ?_continent rdfs:label ?_continentLabel.}
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
}
GROUP BY ?year ?_country
 Try it! Yearly Population stacked by country The following query uses these:Items: sovereign state (Q3624078)   , estimation (Q791801)   , census (Q39825)   Properties: instance of (P31)   , population (P1082)   , point in time (P585)   , determination method (P459)   #defaultView:BarChart
# male/female population _must_ not be added unqualified as total population (!)
# this is an error and should be fixed at the item using P1540 and P1539 instead
# (wrong query result may be a manifestation of such)
SELECT ?year (AVG(?pop) AS ?population) ?countryLabel
       (COUNT(*) AS ?number_of_chosen_sources) (SAMPLE(?method) AS ?a_source_of_those_chosen)
WHERE
{
  ?country wdt:P31 wd:Q3624078;#more useful than Q6256;
           p:P1082 ?popStatement .
  ?popStatement ps:P1082 ?pop;
                pq:P585 ?date .
  BIND(STR(YEAR(?date)) AS ?year)
  #FILTER ( (YEAR(?date)) >= 2000 ) 
  # IF multiple ?pop values per country per year exist, we prioritize by source
  #       census 1st, others 2nd, estimation(s) 3rd, unknown sources (none supplies P459) last
  # note: wikibase:rank won't help here: each year may have multiple statements for ?pop value
  #       rank:prefered is used for the best value (or values) of the latest or current year
  #       rank:normal may be justified for all of multiple ?pop values for a given year
  OPTIONAL { ?popStatement pq:P459 ?method. }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?d; pq:P459 ?estimate ].
             FILTER(STR(YEAR(?d)) = ?year). FILTER(?estimate = wd:Q791801). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?e; pq:P459 ?census ].
             FILTER(STR(YEAR(?e)) = ?year). FILTER(?census = wd:Q39825). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?f; pq:P459 ?other ].
             FILTER(STR(YEAR(?f)) = ?year). FILTER(?other != wd:Q39825 && ?other != wd:Q791801). }
  BIND(COALESCE( 
    IF(BOUND(?census), ?census, 1/0),
    IF(BOUND(?other), ?other, 1/0),
    IF(BOUND(?estimate), ?estimate, 1/0) ) AS ?pref_method).
  FILTER(IF(BOUND(?pref_method),?method = ?pref_method,true))
  # .. still need to group if multiple values per country per year exist and
  # - none is qualified with P459
  # - multiple ?estimate or multiple ?census (>1 value from same source)
  # - ?other yields more than one source (>1 values are better than optionally
  #                         supplied estimate, but no census source available)

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }               
}
GROUP BY ?year ?countryLabel
ORDER BY ?year ?countryLabel Try it! Built power plants per year per country #defaultView:BarChart
SELECT (SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?count) (SAMPLE(?_countryLabel) AS ?_countryLabel) WHERE {
  ?object wdt:P31/wdt:P279* wd:Q134447. # Power stations or subtypes
  BIND(STR(YEAR(?_inception)) AS ?year)
  ?object wdt:P571 ?_inception;
          wdt:P17 ?_country.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?_country rdfs:label ?_countryLabel. }
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Bar chart of paintings produced per year by Piet Mondrian #defaultView:BarChart
SELECT ?year (COUNT(?year) as ?count) WHERE {
  ?painting wdt:P31 wd:Q3305213.
  ?painting wdt:P170 wd:Q151803.
  ?painting wdt:P571 ?inception.
  BIND(str(year(?inception)) AS ?year)
  OPTIONAL { ?painting wdt:P18 ?image. }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} GROUP BY ?year ?count ORDER BY ?year
 Try it! Hollanda'nın Nijmegen şehrindeki kamuya açık sanatlarda kadın / erkek yaratıcıların oranını gösteren çubuk grafik #defaultView:BarChart
select ?genderLabel (count(?gender) as ?genderCount) where {
  ?item wdt:P136 wd:Q557141;
        wdt:P131 wd:Q47887;
        wdt:P170 ?creator. 
    
  ?creator wdt:P21 ?gender.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} group by ?genderLabel ?genderCount
 Try it! Area chart Cancer deaths per year and cancer type The following query uses these:Items: human (Q5)   , cancer (Q12078)   Properties: instance of (P31)   , cause of death (P509)   , date of death (P570)   , subclass of (P279)   #defaultView:AreaChart
SELECT ?cod (STR(SAMPLE(?yearOfDeath)) AS ?YEAR_Of_DEATH) (COUNT(*) AS ?NUMBER_OF_DEATHS) ?cause WHERE {
  ?pid wdt:P31 wd:Q5;  # instance of human
       wdt:P509 ?cod;  # cause of death
       wdt:P570 ?_date_of_death.
  ?cod wdt:P279* wd:Q12078.  # type of cancer
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                         ?cod rdfs:label ?cause. }
  BIND ( YEAR(?_date_of_death) AS ?yearOfDeath )
  FILTER( ?yearOfDeath > 1960 )
}
GROUP BY ?cod ?cause ?yearOfDeath Try it! Tree Continents, countries, regions and capitals The following query uses these:Items: continent (Q5107)   , country (Q6256)   , city (Q515)   Properties: instance of (P31)   , continent (P30)   , contains the administrative territorial entity (P150)   , locator map image (P242)   , flag image (P41)   , capital (P36)   , image (P18)   , population (P1082)   , head of government (P6)   , twinned administrative body (P190)   , inception (P571)   , located in or next to body of water (P206)   , has part(s) (P527)   #defaultView:Tree
SELECT ?continent ?continentFlag ?continentLabel ?country ?countryLabel ?countryFlag ?region ?regionLabel ?regionFlag ?city ?cityLabel ?cityImage ?property ?propertyLabel ?value ?valueLabel WHERE {
  {
    SELECT * WHERE {
      ?continent wdt:P31 wd:Q5107.
      ?country wdt:P30 ?continent.
      ?country p:P31/ps:P31 wd:Q6256.
      ?country wdt:P150 ?region.
      OPTIONAL {
        ?continent wdt:P242 ?continentFlag.
        ?country wdt:P41 ?countryFlag.
        ?region wdt:P41 ?regionFlag.
      }
      OPTIONAL {
        ?region wdt:P36 ?city.
        ?city wdt:P31 wd:Q515.
        ?city wdt:P18 ?cityImage.
        OPTIONAL {
          VALUES (?prop) {
            (wdt:P1082)
            (wdt:P6)
            (wdt:P190)
            (wdt:P31)
            (wdt:P571)
            (wdt:P150)
            (wdt:P206)
            (wdt:P527)
          }
          ?city ?prop ?value.
          ?property ?ref ?prop.
          ?property rdf:type wikibase:Property.
        }
      }
    }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Viennese composers and their compositions by tonality The following query uses these:Items: human (Q5)   , Vienna (Q1741)   Properties: instance of (P31)   , place of birth (P19)   , place of death (P20)   , residence (P551)   , image (P18)   , composer (P86)   , tonality (P826)   #defaultView:Tree
SELECT ?composer ?composerLabel ?composerImage ?tonality ?tonalityLabel ?composition ?compositionLabel WHERE {
  ?composer wdt:P31 wd:Q5;
            wdt:P19|wdt:P20|wdt:P551 wd:Q1741.
  OPTIONAL { ?composer wdt:P18 ?composerImage. }
  ?composition wdt:P86 ?composer;
               wdt:P826 ?tonality.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de-at,de\". }
}
ORDER BY ?composerLabel ?tonalityLabel Try it! Treemap Popular television series (in treeview) #added before 2016-10

#defaultView:TreeMap
SELECT ?show ?showLabel  ?season ?cleanSeasonLabel ?episode ?episodeLabel
WHERE
{
	{
		BIND(wd:Q886 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-23) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	} 
	UNION
	{
		BIND(wd:Q16538 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-20) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}  
	UNION
	{
		BIND(wd:Q147235 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(CONCAT(\"S\", SUBSTR(?_seasonLabel, 25)) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}

	SERVICE wikibase:label {  bd:serviceParam wikibase:language \"en\" }
}
 Try it! Famous people categorised into eye and hair color #defaultView:TreeMap
SELECT ?eyes ?hairColorLabel (COUNT(?person) as ?count)
WHERE
{
	?person wdt:P1340 ?eyeColor.
    ?person wdt:P1884 ?hairColor.
    ?person wdt:P2048 ?height.
    ?eyeColor rdfs:label ?_eyeColorLabel.
    FILTER((LANG(?_eyeColorLabel)) = \"en\")
    BIND(CONCAT(?_eyeColorLabel, \" eyes\") AS ?eyes)
   
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
GROUP BY ?eyes ?hairColorLabel
 Try it! Scatter chart Number of films by year and genre The following query uses these:Items: film (Q11424)   Properties: instance of (P31)   , publication date (P577)   , genre (P136)   #defaultView:ScatterChart
SELECT   ?year  (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?label )  (?year as ?year_shown) WHERE {
  ?item wdt:P31 wd:Q11424.
  ?item wdt:P577 ?_publication_date.
  ?item wdt:P136 ?_genre.
  ?_genre rdfs:label ?_genreLabel.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  FILTER((LANG(?_genreLabel)) = \"en\")
 
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 30) Try it! Calendars Calendar of birth dates of women who studied at the University of Oxford SELECT ?monthLabel (?day_int as ?d) ?personLabel ?personDesc
   (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?rperson),32) )) as ?link) WHERE {
{ SELECT ?month_int ?month ?day_int (SAMPLE(?person) AS ?rperson) WHERE {
?month wdt:P31 wd:Q47018901; wdt:P1545 ?month_ordinal. # These lines generate a calendar from January 1 to December 31
?day p:P361 [ps:P361 ?month; pq:P1545 ?day_ordinal ].
 BIND(xsd:integer(?month_ordinal) AS ?month_int)
 BIND(xsd:integer(?day_ordinal) AS ?day_int)
OPTIONAL {
# Define the people we're interested in
{?person wdt:P69 wd:Q34433 } UNION {?person wdt:P69/wdt:P31 wd:Q2581649 } # educated at Oxford or an Oxford college
?person wdt:P21 wd:Q6581072 ; # female
   p:P569/psv:P569 ?date_node. # birth date
?date_node wikibase:timePrecision \"11\"^^xsd:integer ; # birth date has specific day
   wikibase:timeValue ?birthdate .        
filter(DAY(?birthdate)=?day_int) filter (MONTH(?birthdate)=?month_int )
}
} GROUP BY ?month_int ?month ?day_int }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
?rperson rdfs:label ?personLabel. ?rperson schema:description ?personDesc. ?month rdfs:label ?monthLabel }
} ORDER BY ?month_int ?day_int
 Try it! Samples with coordinates to illustrate maps Items around with user location #defaultView:Map{\"layer\":\"?instance_ofLabel\"}
SELECT ?place ?placeLabel ?image ?coordinate_location ?dist ?instance_of ?instance_ofLabel WHERE {
  SERVICE wikibase:around {
    ?place wdt:P625 ?coordinate_location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\".
    bd:serviceParam wikibase:distance ?dist.
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?place wdt:P18 ?image. }
  OPTIONAL { ?place wdt:P31 ?instance_of. }
}
 Try it! Locations of national parks #defaultView:Map
SELECT ?objectLabel ?objectDescription ?link ?coord
WHERE {
  ?object wdt:P31/wdt:P279? wd:Q46169 .
          OPTIONAL { ?object wdt:P856 ?link. } 
          OPTIONAL { ?object wdt:P625 ?coord . }
          SERVICE wikibase:label {
               bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\"
          }
}
 Try it! Airports within 100km of Berlin #added before 2016-10

#defaultView:Map
SELECT ?place ?placeLabel ?location
WHERE
{
  # Berlin coordinates
  wd:Q64 wdt:P625 ?berlinLoc .
  SERVICE wikibase:around {
    ?place wdt:P625 ?location .
    bd:serviceParam wikibase:center ?berlinLoc .
    bd:serviceParam wikibase:radius \"100\" .
  } .
  # Is an airport
  FILTER EXISTS { ?place wdt:P31/wdt:P279* wd:Q1248784 } .
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
  } 
}
 Try it! Airports in Belgium #List of airports in Belgium
#defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor
WHERE {
  ?airport wdt:P31 wd:Q1248784 ;
          ?range wd:Q31;
          wdt:P625 ?coor.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! International airports named after women # Airports named after women
# List of airports that are named after women
# Written by WiseWoman auf der #wmdemv 2019
# defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor ?namedafterLabel
WHERE {
  ?airport wdt:P31 wd:Q644371 ;  
          # ?range wd:Q183;
          wdt:P625 ?coor.
  ?airport wdt:P138 ?namedafter .
  ?namedafter wdt:P31 wd:Q5 .
  ?namedafter wdt:P21 wd:Q6581072 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Schools between San Jose, CA and Sacramento, CA The following query uses these:Items: San Jose (Q16553)   , Sacramento (Q18013)   , school (Q3914)   Properties: coordinate location (P625)   , instance of (P31)   , subclass of (P279)    Features: map (Q24515275)   , wikibase:box (Q26211169)   , wikibase:box with West and East corners (Q26211177)  # Schools between San Jose, CA and Sacramento, CA
#defaultView:Map
SELECT *
WHERE
{ hint:Query hint:optimizer \"None\" .
  wd:Q16553 wdt:P625 ?SJloc .
  wd:Q18013 wdt:P625 ?SCloc .
  SERVICE wikibase:box {
      ?place wdt:P625 ?location .
      bd:serviceParam wikibase:cornerWest ?SJloc .
      bd:serviceParam wikibase:cornerEast ?SCloc .
    }
  ?place wdt:P31/wdt:P279* wd:Q3914 .
} Try it! Big cities, grouped into map layers by population #defaultView:Map
SELECT DISTINCT ?city ?cityLabel (SAMPLE(?location) AS ?location) (MAX(?population) AS ?population) (SAMPLE(?layer) AS ?layer)
WHERE
{
  ?city wdt:P31/wdt:P279* wd:Q515;
        wdt:P625 ?location;
        wdt:P1082 ?population.
  FILTER(?population >= 500000).
  BIND(
    IF(?population < 1000000, \"<1M\",
    IF(?population < 2000000, \"1M-2M\",
    IF(?population < 5000000, \"2M-5M\",
    IF(?population < 10000000, \"5M-10M\",
    IF(?population < 20000000, \"10M-20M\",
    \">20M\")))))
    AS ?layer).
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?city ?cityLabel
 Try it! Places with free wifi #defaultView:Map
# Places with free wi-fi
SELECT ?item ?itemLabel (SAMPLE(?coord) AS ?coord)
WHERE {
	?item wdt:P2848 wd:Q1543615 ;  # wi-fi gratis
	      wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} GROUP BY ?item ?itemLabel
 Try it! Basic map of U1 subway stations in Berlin #added before 2016-10
#defaultView:Map
SELECT ?stationLabel ?coord
WHERE {
	?station wdt:P81 wd:Q99691 ;
		 wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\" }
}
 Try it! Advanced map of Stockholm Metro (Q272926) Map of Stockholm Metro (query) Locations of universities in Cameroon #added before 2016-10
#defaultView:Map
SELECT ?universityLabel ?universityDescription ?website ?coord
WHERE {
	?university wdt:P31/wdt:P279* wd:Q3918 ;
		wdt:P17 wd:Q1009 ;
		wdt:P625 ?coord .
	OPTIONAL {
		?university wdt:P856 ?website
	}
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"en,de\" .
	}
}
 Try it! Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany #added before 2016-10
 #defaultView:Map
SELECT ?item ?itemLabel ?coord
WHERE
{
	?item wdt:P31/wdt:P279* wd:Q486972;
    	      wdt:P17 wd:Q183;
    	      rdfs:label ?itemLabel;
    	      wdt:P625 ?coord;
    	 FILTER (lang(?itemLabel) = \"de\") .
    	 FILTER regex (?itemLabel, \"(ow|itz)$\").
}
 Try it! Locations of power stations #defaultView:Map
SELECT DISTINCT ?objectLabel ?coord ?layer
WHERE
{
  ?object wdt:P31/wdt:P279* wd:Q159719;
     wdt:P625 ?coord.
  ?object wdt:P31 ?type. ?type wdt:P279* wd:Q159719.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?type rdfs:label ?layer }
}
 Try it! Locations of stone arch bridges #defaultView:Map
SELECT ?label ?coord ?place ?image
WHERE {
	?place wdt:P31 wd:Q14276458 ;  # instance of deck arch bridge
            wdt:P186 wd:Q22731 ;  # made of stone
            wdt:P625 ?coord .
	OPTIONAL { ?place wdt:P18 ?image }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?place rdfs:label ?label }
}
 Try it! Locations of aqueducts #defaultView:Map
SELECT ?place ?placeLabel ?coord ?layer
WHERE {
   ?place wdt:P31/wdt:P279? wd:Q474 ; # instance of aqueduct
          wdt:P625 ?coord ;
          wdt:P31 ?type.
  ?type wdt:P279* wd:Q474
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                       ?type rdfs:label ?layer}
}
 Try it! Locations of archaeological sites, with images #defaultView:Map
SELECT ?siteLabel ?coord ?image ?site
WHERE {
   ?site wdt:P31/wdt:P279* wd:Q839954 ;
      wdt:P625 ?coord ;
      wdt:P18 ?image .
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Locations of castles that are also archaeological sites #defaultView:Map
SELECT ?label ?coord ?subj
WHERE {
   ?subj wdt:P31 wd:Q839954 ; # instance of archaeological site
         wdt:P31/wdt:P279* wd:Q23413 ;  # instance or subclass of castle
         wdt:P625 ?coord .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?subj rdfs:label ?label}
}
 Try it! Locations of battles #added before 2016-10
#defaultView:Map
SELECT ?label ?coord ?subj ?year
WHERE
{
	?subj wdt:P31 wd:Q178561 .
	?subj wdt:P625 ?coord .
	OPTIONAL {?subj wdt:P580 ?d1}
	OPTIONAL {?subj wdt:P585 ?d2}
  	OPTIONAL {?subj wdt:P582 ?d3}
	BIND(IF(!BOUND(?d1),(IF(!BOUND(?d2),?d3,?d2)),?d1) as ?date)
	BIND(YEAR(?date) as ?year)
	?subj rdfs:label ?label filter (lang(?label) = \"en\")
}
 Try it! Places of worship #added before 2016-10

#defaultView:Map
SELECT ?item ?itemLabel ?_coordinate_location ?_image WHERE {
  ?item wdt:P31/wdt:P279* wd:Q1370598.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
   ?item wdt:P625 ?_coordinate_location.
  ?item wdt:P18 ?_image.
}
 Try it! All museums (including subclass of museum) in Washington, D.C. with coordinates #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?name ?coord ?lat ?lon
WHERE {
   hint:Query hint:optimizer \"None\" .
   ?item wdt:P131* wd:Q61 .
   ?item wdt:P31/wdt:P279* wd:Q33506 .
   ?item wdt:P625 ?coord .
   ?item p:P625 ?coordinate .
   ?coordinate psv:P625 ?coordinate_node .
   ?coordinate_node wikibase:geoLatitude ?lat .
   ?coordinate_node wikibase:geoLongitude ?lon .
   SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
    ?item rdfs:label ?name
   }
}
ORDER BY ASC (?name)
 Try it! Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) #defaultView:Map
select ?museum ?museumLabel ?layer (sample(?location) as ?location) where {
  ?museum wdt:P31/wdt:P279* wd:Q33506;
          wdt:P17 wd:Q55;
          wdt:P625 ?location.
  optional { ?museum wdt:P2851 ?layer. }
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} group by ?museum ?museumLabel ?layer
 Try it! All ski resorts with coordinates #defaultView:Map
SELECT ?item ?itemLabel ?coord #?lat ?lon
WHERE
{
   ?item               wdt:P31        wd:Q130003.
   ?item               wdt:P625         ?coord.

#  ?item                 p:P625         ?statementnode.
#  ?statementnode      psv:P625         ?valuenode.
#  ?valuenode     wikibase:geoLatitude  ?lat.
#  ?valuenode     wikibase:geoLongitude ?lon.

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Lighthouses in Norway #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?coords ?image
WHERE {
	?item wdt:P31 wd:Q39715 ;
          wdt:P17 wd:Q20 ;
          wdt:P625 ?coords
	OPTIONAL { ?item wdt:P18 ?image } 
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],nb,nn,en,fi\"  } 
}
ORDER BY ?itemLabel
 Try it! Most beautiful villages of France #defaultView:Map
SELECT ?item ?itemLabel ?geoLocation ?image
WHERE {
    ?item wdt:P463 wd:Q1010307 ;  # member of Les Plus Beaux Villages de France (organisation)
          wdt:P625 ?geoLocation .
    OPTIONAL { ?item wdt:P18 ?image }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" }
}
 Try it! Locations in Fiji This query shows a way of mapping locations which span the 180th meridian, without the points being split between the left and right edges of the map. #defaultView:Map
select ?item ?coords_ where {
  ?item wdt:P17 wd:Q712 .
  ?item p:P625/psv:P625 ?coords .
  ?coords wikibase:geoLatitude ?lat ;
          wikibase:geoLongitude ?lon .
  bind(strdt(concat(\"Point(\", if((?lon < 0), str(?lon + 360), str(?lon)), \" \", str(?lat), \")\"), geo:wktLiteral) as ?coords_) .
} limit 1000
 Try it! Map of disasters, color-coded by disaster type Map of disasters color-coded by disaster type #defaultView:Map{\"layer\":\"?typeLabel\"}
SELECT ?item ?itemLabel ?geo ?type ?typeLabel (SAMPLE(?_image) AS ?image) WHERE {
  ?type wdt:P279* wd:Q3839081 .
  ?item wdt:P31 ?type ;
        wdt:P625 ?geo .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image }
}
GROUP BY ?item ?itemLabel ?geo ?type ?typeLabel
 Try it! Monuments and other heritage items located 1 km around the users location #defaultView:Map
select distinct ?monument ?monumentLabel ?heritageLabel (sample(?distance) as ?distance) (sample(?location) as ?location) (sample(?image) as ?image) where {
  ?monument wdt:P1435 ?heritage.
  
  service wikibase:around {   
    ?monument wdt:P625 ?location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\" . 
    bd:serviceParam wikibase:distance ?distance .
  }
  
  optional {
    ?monument wdt:P18 ?image.
  }
  
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,nl\". }
} group by ?monument ?monumentLabel ?heritageLabel order by ?distance
 Try it! Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article Map of newspapers in the United States by presence of the template Infobox newspaper in their English Wikipedia article integrates a text search for the template's name using the MediaWiki API into a SPARQL query #defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?id ?coords ?article ?rgb WHERE {
 ?c wdt:P279* wd:Q11032 .
  ?item wdt:P31 ?c .
 ?item wdt:P17|wdt:P495 wd:Q30 .
 OPTIONAL{?item wdt:P5454 ?id .}
 ?item wdt:P291 ?place .
 ?place wdt:P625 ?coords.
 OPTIONAL {   
   SELECT ?item ?pageid ?ns WHERE {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam mwapi:generator \"search\" .
      bd:serviceParam mwapi:gsrsearch \"hastemplate:\\\"infobox newspaper\\\"\" .
      bd:serviceParam mwapi:gsrlimit \"max\" .
      ?item wikibase:apiOutputItem mwapi:item .
      ?pageid wikibase:apiOutput \"@pageid\" .
      ?ns wikibase:apiOutput \"@ns\" .
    }
  } LIMIT 15000
 }
    
  OPTIONAL {
      ?article schema:about ?item .
      ?article schema:inLanguage \"en\" .
      FILTER (SUBSTR(str(?article), 1, 25) = \"https://en.wikipedia.org/\")
  }

  BIND( IF(BOUND(?article),   IF(BOUND(?ns), \"009500\" , \"FFF000\" )  ,  \"FF0000\"   )  AS ?rgb).  
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
 Try it! List of all the lakes in Cameroon The following query uses these:Items: lake (Q23397)   , Cameroon (Q1009)   Properties: instance of (P31)   , subclass of (P279)   , country (P17)   , coordinate location (P625)   , image (P18)    Features: map (Q24515275)  """@en,
    """Other languages: English Nederlands Türkçe español français svenska українська հայերեն 中文 日本語 Contents 1 Showcase Queries 1.1 Largest cities with female mayor 1.2 List of countries ordered by the number of their cities with female mayor 1.3 Popular surnames among humans 1.4 Given names with most variations 1.5 Popular surnames among fictional characters 1.6 Women with most sitelinks and no image born in 1921 or later 1.7 ¿Quién cumple años hoy? 1.8 Finding John and Sarah Connor 1.9 Data of Douglas Adams 1.10 Data of Douglas Adams (modified version) 1.11 Data of Barbara Harris - Grouped per item 1.12 People who have been buried in multiple places 1.13 All oldest living US ex-presidents in chronological order 1.14 Persons and institutions related in some way to Russian politics 2 Advanced Queries 2.1 Bubble charts 2.1.1 Overall causes of death ranking 2.1.2 WWII battle durations 2.1.3 The top 10 heaviest humans 2.1.4 Values of uses (P2283) in scholarly articles 2.2 Timeline 2.2.1 Timeline of space probes 2.2.2 Timeline of compositions by Wolfgang Amadeus Mozart 2.3 Dimensions 2.3.1 Dimensions of elements 2.4 Graph 2.4.1 Children of Genghis Khan 2.4.2 Firearms cartridges and which they are based on 2.4.3 Music genres 2.4.4 Groups of characters in the Marvel universe 2.5 Line chart 2.5.1 Average number of children per year 2.5.2 Population of countries sharing a border with Germany 2.5.3 Population of countries sharing a border with Cameroon 2.5.4 Number of books by year and genre 2.5.5 Number of bands by year and genre 2.6 Bar chart 2.6.1 Battles per year per country last 80 years 2.6.2 Battles per year per continent and country last 80 years (animated) 2.6.3 Yearly Population stacked by country 2.6.4 Built power plants per year per country 2.6.5 Bar chart of paintings produced per year by Piet Mondrian 2.6.6 Bar chart with ratio of male / female creators for public art in city of Nijmegen, the Netherlands 2.7 Area chart 2.7.1 Cancer deaths per year and cancer type 2.8 Tree 2.8.1 Continents, countries, regions and capitals 2.8.2 Viennese composers and their compositions by tonality 2.9 Treemap 2.9.1 Popular television series (in treeview) 2.9.2 Famous people categorised into eye and hair color 2.10 Scatter chart 2.10.1 Number of films by year and genre 2.11 Calendars 2.11.1 Calendar of birth dates of women who studied at the University of Oxford 2.12 Samples with coordinates to illustrate maps 2.12.1 Items around with user location 2.12.2 Locations of national parks 2.12.3 Airports within 100km of Berlin 2.12.4 Airports in Belgium 2.12.5 International airports named after women 2.12.6 Schools between San Jose, CA and Sacramento, CA 2.12.7 Big cities, grouped into map layers by population 2.12.8 Places with free wifi 2.12.9 Basic map of U1 subway stations in Berlin 2.12.10 Advanced map of Stockholm Metro (Q272926) 2.12.11 Locations of universities in Cameroon 2.12.12 Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany 2.12.13 Locations of power stations 2.12.14 Locations of stone arch bridges 2.12.15 Locations of aqueducts 2.12.16 Locations of archaeological sites, with images 2.12.17 Locations of castles that are also archaeological sites 2.12.18 Locations of battles 2.12.19 Places of worship 2.12.20 All museums (including subclass of museum) in Washington, D.C. with coordinates 2.12.21 Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) 2.12.22 All ski resorts with coordinates 2.12.23 Lighthouses in Norway 2.12.24 Most beautiful villages of France 2.12.25 Locations in Fiji 2.12.26 Map of disasters, color-coded by disaster type 2.12.27 Monuments and other heritage items located 1 km around the users location 2.12.28 Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article 2.12.29 List of all the lakes in Cameroon 2.13 Listeria 2.13.1 Women born in Wales without an article in Welsh for Listeria 2.13.2 People born in Occitania for Listeria 2.13.3 People born in Scotland for Listeria 2.14 Gather Apply Scatter 2.14.1 Children of Genghis Khan 2.15 Sampling 2.15.1 Scientific articles without any description 2.16 Mediawiki API 2.16.1 Filter labels using EntitySearch from mwapi service to provide Full Text Search 2.16.2 Using mwapi to base a query on articles in a Wikipedia category 2.16.3 Find statements with references containing external links to wipo.int 2.16.4 Find metadata like artist and license for an image 2.16.5 Getting pageviews for all articles in a category 2.17 Federation 2.17.1 Get OpenStreetMap top level properties of Helsinki University main building 2.17.2 Get information of Europeana item 2.17.3 Share of renewable energy in electricity 2.17.4 Get OpenStreetMap nodes with inarisami label in wikipedia but without inarisami label in OSM 3 Queries useful to external services 3.1 The best ranked properties and values of a given item Showcase Queries These queries show the power and functionality of SPARQL and WDQS GUI. Largest cities with female mayor #added before 2016-10
#TEMPLATE={\"template\":\"Largest ?c with ?sex head of government\",\"variables\":{\"?sex\":{\"query\":\" SELECT ?id WHERE { ?id wdt:P31 wd:Q48264 .  } \"},\"?c\":{\"query\":\"SELECT DISTINCT ?id WHERE {  ?c wdt:P31 ?id.  ?c p:P6 ?mayor. }\"} } }
SELECT DISTINCT ?city ?cityLabel ?mayor ?mayorLabel
WHERE
{
  BIND(wd:Q6581072 AS ?sex)
  BIND(wd:Q515 AS ?c)

	?city wdt:P31/wdt:P279* ?c .  # find instances of subclasses of city
	?city p:P6 ?statement .            # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .          # ... that has the value ?mayor
	?mayor wdt:P21 ?sex .       # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	
	# Now select the population value of the ?city
	# (wdt: properties use only statements of \"preferred\" rank if any, usually meaning \"current population\")
	?city wdt:P1082 ?population .
	# Optionally, find English labels for city and mayor:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
	}
}
ORDER BY DESC(?population)
LIMIT 10
 Try it! List of countries ordered by the number of their cities with female mayor #added before 2016-10
SELECT ?country ?countryLabel (count(*) AS ?count)
WHERE
{
	?city wdt:P31/wdt:P279* wd:Q515 . # find instances of subclasses of city
	?city p:P6 ?statement .           # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .         # ... that has the value ?mayor
	?mayor wdt:P21 wd:Q6581072 .      # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	?city wdt:P17 ?country .          # Also find the country of the city
 	
	# If available, get the \"ru\" label of the country, use \"en\" as fallback:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"ru,en\" .
	}
}
GROUP BY ?country ?countryLabel
ORDER BY DESC(?count)
LIMIT 100
 Try it! Popular surnames among humans #defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?human) AS ?count) WHERE {
    # ?human wdt:P31 wd:Q5.
      ?human wdt:P734 ?surname.
    }
    GROUP BY ?surname ORDER BY DESC(?count) LIMIT 100
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} 
ORDER BY DESC(?count)
 Try it! Given names with most variations #added before 2016-10

SELECT ?name ?nameLabel (COUNT(?otherName) AS ?count)
WHERE
{
  ?name wdt:P31 wd:Q202444;
        wdt:P460 ?otherName.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?name ?nameLabel
ORDER BY DESC(?count)
LIMIT 10
 Try it! Popular surnames among fictional characters #added before 2016-10

#defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?person) AS ?count) WHERE {
      ?person (wdt:P31/wdt:P279*) wd:Q95074.
      ?person wdt:P734 ?surname.
    }
    GROUP BY ?surname
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?count)
LIMIT 100
 Try it! Women with most sitelinks and no image born in 1921 or later SELECT ?s ?desc ?linkcount
WHERE
{
  ?s wdt:P31 wd:Q5 ;   # human
     wdt:P21 wd:Q6581072 ;  # gender: female
     wdt:P569 ?born .
  FILTER (?born >= \"1921-01-01T00:00:00Z\"^^xsd:dateTime) .
  ?s wikibase:sitelinks ?linkcount .
  MINUS {
    ?s wdt:P18 []  # exclude if there is an image
  }
?s rdfs:label ?desc FILTER(lang(?desc)=\"en\").
}
GROUP BY ?s ?desc ?linkcount
ORDER BY DESC(?linkcount)
LIMIT 50
 Try it! ¿Quién cumple años hoy? #Whose birthday is today?
SELECT ?entity ?entityLabel ?entityDescription (YEAR(?date) as ?year)
WHERE {
    BIND(MONTH(NOW()) AS ?nowMonth)
    BIND(DAY(NOW()) AS ?nowDay)
    ?entity wdt:P569 ?date .
    FILTER (MONTH(?date) = ?nowMonth && DAY(?date) = ?nowDay)

SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }   
}
LIMIT 20
 Try it! Finding John and Sarah Connor #added before 2016-10
 SELECT * WHERE {
  ?p wdt:P1080 wd:Q620588 . # from fictional universe: Terminator
  ?p rdfs:label ?pl .
  FILTER (lang(?pl) = \"en\")
  ?p wdt:P25 ?m .  # ?m is mother of ?p
  ?m rdfs:label ?ml .
  FILTER (lang(?ml) = \"en\")
}
 Try it! Data of Douglas Adams #added before 2016-10

PREFIX entity: <http://www.wikidata.org/entity/>
#partial results

SELECT ?propUrl ?propLabel ?valUrl ?valLabel ?picture
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"identity\"@en AS ?propLabel ) .
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel
	}
	
  	?valUrl rdfs:label ?valLabel
	FILTER (LANG(?valLabel) = 'en') .
	OPTIONAL{ ?valUrl wdt:P18 ?picture .}
	FILTER (lang(?propLabel) = 'en' )
}
ORDER BY ?propUrl ?valUrl
LIMIT 200
 Try it! Data of Douglas Adams (modified version) PREFIX entity: <http://www.wikidata.org/entity/>

#  In addition to the original query this one comes with some advantages:
#  - You will get only literals as results, (even if the values are stored as IRI in wikibase)
#  - That means you will also get properties as birth date, alphanumeric identifier and so on.
#  - The list is ordered numerically by property number. (So P19 comes before P100) 
#  - All label, altLabel and description in a given Language are included.
#  You may open a separate column ?valUrl if you need also the IRI
#
#  Please advise, if there is an option to put the Q-Number  and/or the Language 
#  code into a runtime variable. 

SELECT ?propNumber ?propLabel ?val
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"Name\"@de AS ?propLabel ) .
       entity:Q42 rdfs:label ?val .
      
        FILTER (LANG(?val) = \"de\") 
	}
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"AltLabel\"@de AS ?propLabel ) .
        optional{entity:Q42 skos:altLabel ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"Beschreibung\"@de AS ?propLabel ) .
        optional{entity:Q42 schema:description ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
   	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' )
        filter  isliteral(?valUrl) 
        BIND(?valUrl AS ?val)
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' ) 
        filter  isIRI(?valUrl) 
        ?valUrl rdfs:label ?valLabel 
		FILTER (LANG(?valLabel) = \"de\") 
         BIND(CONCAT(?valLabel) AS ?val)
	}
        BIND( SUBSTR(str(?propUrl),38, 250) AS ?propNumber)
}
ORDER BY xsd:integer(?propNumber)
 Try it! Data of Barbara Harris - Grouped per item # This query collects data related to entities on Barbara Harris. 
# It demonstrates collecting individual attributes and concatenating them for easier post processing. 

SELECT 
  ?item
(SAMPLE(?itemLabel) AS ?itemLabel) 
(SAMPLE(?itemDescription) AS ?itemDescription) 
  (SAMPLE(?pic) AS ?pic) 
(SAMPLE(?date_of_birth) AS ?date_of_birth) 
(GROUP_CONCAT(DISTINCT ?country_of_citizenship; SEPARATOR=\", \") AS ?country_of_citizenships)
(GROUP_CONCAT(DISTINCT ?country_of_citizenshipLabel; SEPARATOR=\", \") AS ?country_of_citizenshipLabels)

(GROUP_CONCAT(DISTINCT ?occupation; SEPARATOR=\", \") AS ?occupations)
(GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR=\", \") AS ?occupationLabels)

(GROUP_CONCAT(DISTINCT ?country; SEPARATOR=\", \") AS ?countries)
(GROUP_CONCAT(DISTINCT ?countryLabel; SEPARATOR=\", \") AS ?countryLabels)


WHERE {
  VALUES ?item {
    wd:Q269809
    wd:Q274590
    wd:Q24576851
    wd:Q807461
    wd:Q4858963
    wd:Q27954833
    wd:Q4859015
    wd:Q826930
  }
  OPTIONAL { ?item wdt:P18 ?pic. }
  OPTIONAL { ?item wdt:P27 ?country_of_citizenship. }
  OPTIONAL { ?item wdt:P106 ?occupation. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  OPTIONAL { ?item wdt:P31 ?instance_of. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
    ?item rdfs:label ?itemLabel.
    ?item rdfs:description ?itemDescription.
    ?country_of_citizenship rdfs:label ?country_of_citizenshipLabel.
    ?occupation rdfs:label ?occupationLabel.
    ?country rdfs:label ?countryLabel.
  }
}
GROUP BY ?item
 Try it! People who have been buried in multiple places # This query collects burial places of individuals, and sorts them in decreasing order
SELECT ?human (COUNT(?place) AS ?count) WHERE {
  ?human wdt:P31 wd:Q5.
  ?human wdt:P119 ?place.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}
GROUP BY ?human 
ORDER BY DESC(?count)
 Try it! All oldest living US ex-presidents in chronological order # Added 2020-07
# All persons who have been the oldest living US ex-president with dates in chronological order
SELECT DISTINCT ?date ?president ?presidentLabel
WITH
{
  # Persons who is/were president of USA
  SELECT ?president ?presidentLabel ?president_enddate ?president_birthdate ?president_deathdate
  WHERE
  {
    ?president wdt:P31 wd:Q5.
    ?president p:P39 ?president_statement.
    ?president_statement ps:P39 wd:Q11696.
    ?president_statement pq:P582 ?president_enddate.
    ?president wdt:P569 ?president_birthdate.
    OPTIONAL { ?president wdt:P570 ?president_deathdate. }
    ?president rdfs:label ?presidentLabel.
    FILTER (LANG(?presidentLabel) = \"en\")
  }
} AS %presidents
WITH
{
  # Dates where who is oldest living expresident can change
  SELECT DISTINCT ?date
  WHERE
  {
    {
      INCLUDE %presidents
      BIND(?president_enddate + \"P1D\"^^xsd:duration AS ?date)
    }
    UNION
    {
      INCLUDE %presidents
      BIND(?president_deathdate + \"P1D\"^^xsd:duration AS ?date)
    }
  }
} AS %dates
WITH
{
  # Find the age for all living expresidents for each value of ?date
  SELECT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    INCLUDE %presidents
    FILTER (?president_enddate < ?date) # Must have become expresident
    FILTER IF(BOUND(?president_deathdate), ?president_deathdate >= ?date, true) # Must still be living
    BIND (?date - ?president_birthdate AS ?age)
  }
} AS %ages
WITH
{
  # Find the oldest age for a living expresident for each value of ?date
  SELECT ?date (MAX(?age) AS ?oldest)
  WHERE
  {
    INCLUDE %ages
  }
  GROUP BY ?date
} AS %oldest
WITH
{
  SELECT DISTINCT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    OPTIONAL
    {
      INCLUDE %ages
      INCLUDE %oldest
      FILTER (?age = ?oldest)
    }
  }
} AS %result
WHERE
{
  # A result is a change from the previous date if ?president's presidency ended the day before ?date,
  # or if an older expresident died the day before ?date. Filter out results that don't fulfill this.
  INCLUDE %result
  BIND (?date - \"P1D\"^^xsd:duration AS ?day_before)
  FILTER
  (
    ! BOUND(?president)||
    EXISTS
    {
      ?president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?day_before.
    } ||
    EXISTS
    {
      ?other_president wdt:P31 wd:Q5.
      ?other_president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?other_president_end.
      ?other_president wdt:P569 ?other_president_birthdate.
      ?other_president wdt:P570 ?day_before.
      FILTER (?other_president_birthdate < ?president_birthdate) # Other president is oldest
      FILTER (?other_president_end < ?day_before) # other president died as expresident
    }
  )
}
ORDER BY ?date
 Try it! Persons and institutions related in some way to Russian politics # Added 2022-03
# people and institutions that have the affiliation attribute assigned to Russia 
select ?item ?itemLabel ?itemDescription where { ?item wdt:P1416 wd:Q159. SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } } limit 100
 Try it!  Advanced Queries Bubble charts Overall causes of death ranking #defaultView:BubbleChart
#TEMPLATE={\"template\":\"Overall causes of death ranking of ?thing \",\"variables\":{\"?thing\": {\"query\":\"SELECT ?id  (COUNT(?id) AS ?count) WHERE {  ?sub wdt:P509 ?y.  ?sub wdt:P31 ?id. } GROUP BY ?id \"} } }
SELECT ?cid ?cause (COUNT(*) AS ?count) WHERE {
  BIND(wd:Q5 AS ?thing)
  ?pid wdt:P31 ?thing;
      wdt:P509 ?cid.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?cid rdfs:label ?cause}
}
GROUP BY ?cid ?cause
ORDER BY DESC(?count) ?cause
 Try it! WWII battle durations #defaultView:BubbleChart
SELECT DISTINCT ?item ?itemLabel (?end - ?start AS ?duration)
WHERE
{
	?item wdt:P361* wd:Q362 ;
          wdt:P31/wdt:P279* wd:Q178561 ;
          wdt:P580 ?start ;
          wdt:P582 ?end .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! The top 10 heaviest humans #defaultView:BubbleChart
#TEMPLATE={ \"template\": \"The top 10 heaviest ?type \", \"variables\": { \"?type\": { \"query\": \"SELECT DISTINCT ?id WHERE { ?i wdt:P2067 ?v. ?i wdt:P31 ?id}\" } } }
SELECT ?item ?itemLabel ?mass
WHERE {
  {
    SELECT ?item ?mass WHERE {
      ?item wdt:P31 wd:Q5;
            p:P2067/psn:P2067/wikibase:quantityAmount ?mass.
    }
    ORDER BY DESC(?mass)
    LIMIT 10
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,fr,de\" }
}
 Try it! Values of uses (P2283) in scholarly articles # Values of \"uses\" used in scholarly articles
# Demonstrates how to turn off the optimizer and start with the lowest number of edges first.
#defaultView:BubbleChart
SELECT ?uses ?usesLabel (count(?item) as ?c)
WHERE 
{
  hint:Query hint:optimizer \"None\".
  ?item wdt:P2283 ?uses. # ~20,000 edges
  ?item wdt:P31 wd:Q13442814. # ~37M edges
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
group by ?uses ?usesLabel
order by desc(?c)
 Try it! Timeline Timeline of space probes #defaultView:Timeline
SELECT ?item ?itemLabel ?launchdate (SAMPLE(?image) AS ?image)
WHERE
{
	?item wdt:P31 wd:Q26529 .
    ?item wdt:P619 ?launchdate .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
    OPTIONAL { ?item wdt:P18 ?image }
}
GROUP BY ?item ?itemLabel ?launchdate
 Try it! Timeline of compositions by Wolfgang Amadeus Mozart #defaultView:Timeline
SELECT DISTINCT ?item ?itemLabel ?catalog_code ?publication_date
WHERE {
	?item wdt:P86 wd:Q254 ; # composer: W. A. Mozart
          wdt:P528 ?catalog_code ;
          wdt:P577 ?publication_date .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Dimensions Dimensions of elements #defaultView:Dimensions
SELECT ?elementLabel ?boiling_point ?melting_point ?electronegativity ?density ?mass WHERE {
?element wdt:P31 wd:Q11344;
   wdt:P2102 ?boiling_point;
   wdt:P2101 ?melting_point;
   wdt:P1108 ?electronegativity;
   wdt:P2054 ?density;
   wdt:P2067 ?mass.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
LIMIT 100
 Try it! Graph Children of Genghis Khan #defaultView:Graph
PREFIX gas: <http://www.bigdata.com/rdf/gas#>

SELECT ?item ?itemLabel ?pic ?linkTo
WHERE {
  SERVICE gas:service {
    gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;
                gas:in wd:Q720 ;
                gas:traversalDirection \"Forward\" ;
                gas:out ?item ;
                gas:out1 ?depth ;

                gas:maxIterations 4 ;
                gas:linkType wdt:P40 .
  }
  OPTIONAL { ?item wdt:P40 ?linkTo }
  OPTIONAL { ?item wdt:P18 ?pic }
  SERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Firearms cartridges and which they are based on #Show firearms cartridges and which they are based on
#defaultView:Graph
SELECT 
?item ?itemLabel ?image 
?other ?otherLabel ?image2
WHERE
{
    ?item  wdt:P279+ wd:Q37144 .   # cartridges
    ?item  wdt:P144    ?other  .   # if the cartridge is based on another
    OPTIONAL {
      ?item  wdt:P18     ?image  .   # grab image
      ?other wdt:P18     ?image2 .   # grab image
    }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Music genres #graph rendering could be slow due to large number of results

#defaultView:Graph
SELECT ?item ?itemLabel ?_image ?_subclass_of ?_subclass_ofLabel
WHERE {
  ?item wdt:P31 wd:Q188451;
        wdt:P279 ?_subclass_of.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image. }
}
 Try it! Groups of characters in the Marvel universe #defaultView:Graph
SELECT ?char ?charLabel ?group ?groupLabel (\"7FFF00\" as ?rgb)
WHERE {
	?group wdt:P31 wd:Q14514600 ;  # group of fictional characters
          wdt:P1080 wd:Q931597.  # from Marvel universe
 ?char wdt:P463 ?group # member of group
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Line chart Average number of children per year The following query uses these:Items: human (Q5)   Properties: instance of (P31)   , number of children (P1971)   , date of birth (P569)   #defaultView:LineChart
SELECT  (str(?year) AS ?year) (AVG( ?_number_of_children ) AS ?count) WHERE {
  ?item wdt:P31 wd:Q5.
  ?item wdt:P1971 ?_number_of_children.
  ?item wdt:P569 ?_date_of_birth.
  BIND( year(?_date_of_birth) as ?year ).
  FILTER( ?year > 1900)
}

GROUP BY ?year Try it! Population of countries sharing a border with Germany #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q183;   # shares border with Germany
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Population of countries sharing a border with Cameroon #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q1009;  # shares border with Cameroon
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Number of books by year and genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?genreLabel )  WHERE {
  ?item wdt:P31 wd:Q571;
        wdt:P577 ?_publication_date;
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?_genre rdfs:label ?genreLabel.}
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Number of bands by year and genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count) (SAMPLE(?_genreLabel) AS ?_genreLabel) WHERE {
  ?item wdt:P31 wd:Q215380; # instance of: band
        wdt:P571 ?_date;   # inception
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_genre rdfs:label ?_genreLabel.}
  FILTER(?_date >= \"1960-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Bar chart Battles per year per country last 80 years #defaultView:BarChart

SELECT(SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel)  WHERE {
  ?subj wdt:P31 wd:Q178561.  # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. }  # start time
  OPTIONAL { ?subj wdt:P585 ?d2. }  # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. }  # end time
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(STR(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.  # country of location of battle
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_country rdfs:label ?_countryLabel.}
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Battles per year per continent and country last 80 years (animated) #defaultView:BarChart
SELECT (SAMPLE(?_continentLabel) AS ?continent) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel) (SAMPLE(?year) AS ?year)  WHERE {
  ?subj wdt:P31 wd:Q178561.        # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. } # start date
  OPTIONAL { ?subj wdt:P585 ?d2. } # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. } # end date
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(str(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.
  ?_country wdt:P30 ?_continent.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
       ?_country rdfs:label ?_countryLabel.
       ?_continent rdfs:label ?_continentLabel.}
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
}
GROUP BY ?year ?_country
 Try it! Yearly Population stacked by country The following query uses these:Items: sovereign state (Q3624078)   , estimation (Q791801)   , census (Q39825)   Properties: instance of (P31)   , population (P1082)   , point in time (P585)   , determination method (P459)   #defaultView:BarChart
# male/female population _must_ not be added unqualified as total population (!)
# this is an error and should be fixed at the item using P1540 and P1539 instead
# (wrong query result may be a manifestation of such)
SELECT ?year (AVG(?pop) AS ?population) ?countryLabel
       (COUNT(*) AS ?number_of_chosen_sources) (SAMPLE(?method) AS ?a_source_of_those_chosen)
WHERE
{
  ?country wdt:P31 wd:Q3624078;#more useful than Q6256;
           p:P1082 ?popStatement .
  ?popStatement ps:P1082 ?pop;
                pq:P585 ?date .
  BIND(STR(YEAR(?date)) AS ?year)
  #FILTER ( (YEAR(?date)) >= 2000 ) 
  # IF multiple ?pop values per country per year exist, we prioritize by source
  #       census 1st, others 2nd, estimation(s) 3rd, unknown sources (none supplies P459) last
  # note: wikibase:rank won't help here: each year may have multiple statements for ?pop value
  #       rank:prefered is used for the best value (or values) of the latest or current year
  #       rank:normal may be justified for all of multiple ?pop values for a given year
  OPTIONAL { ?popStatement pq:P459 ?method. }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?d; pq:P459 ?estimate ].
             FILTER(STR(YEAR(?d)) = ?year). FILTER(?estimate = wd:Q791801). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?e; pq:P459 ?census ].
             FILTER(STR(YEAR(?e)) = ?year). FILTER(?census = wd:Q39825). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?f; pq:P459 ?other ].
             FILTER(STR(YEAR(?f)) = ?year). FILTER(?other != wd:Q39825 && ?other != wd:Q791801). }
  BIND(COALESCE( 
    IF(BOUND(?census), ?census, 1/0),
    IF(BOUND(?other), ?other, 1/0),
    IF(BOUND(?estimate), ?estimate, 1/0) ) AS ?pref_method).
  FILTER(IF(BOUND(?pref_method),?method = ?pref_method,true))
  # .. still need to group if multiple values per country per year exist and
  # - none is qualified with P459
  # - multiple ?estimate or multiple ?census (>1 value from same source)
  # - ?other yields more than one source (>1 values are better than optionally
  #                         supplied estimate, but no census source available)

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }               
}
GROUP BY ?year ?countryLabel
ORDER BY ?year ?countryLabel Try it! Built power plants per year per country #defaultView:BarChart
SELECT (SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?count) (SAMPLE(?_countryLabel) AS ?_countryLabel) WHERE {
  ?object wdt:P31/wdt:P279* wd:Q134447. # Power stations or subtypes
  BIND(STR(YEAR(?_inception)) AS ?year)
  ?object wdt:P571 ?_inception;
          wdt:P17 ?_country.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?_country rdfs:label ?_countryLabel. }
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Bar chart of paintings produced per year by Piet Mondrian #defaultView:BarChart
SELECT ?year (COUNT(?year) as ?count) WHERE {
  ?painting wdt:P31 wd:Q3305213.
  ?painting wdt:P170 wd:Q151803.
  ?painting wdt:P571 ?inception.
  BIND(str(year(?inception)) AS ?year)
  OPTIONAL { ?painting wdt:P18 ?image. }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} GROUP BY ?year ?count ORDER BY ?year
 Try it! Bar chart with ratio of male / female creators for public art in city of Nijmegen, the Netherlands #defaultView:BarChart
select ?genderLabel (count(?gender) as ?genderCount) where {
  ?item wdt:P136 wd:Q557141;
        wdt:P131 wd:Q47887;
        wdt:P170 ?creator. 
    
  ?creator wdt:P21 ?gender.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} group by ?genderLabel ?genderCount
 Try it! Area chart Cancer deaths per year and cancer type The following query uses these:Items: human (Q5)   , cancer (Q12078)   Properties: instance of (P31)   , cause of death (P509)   , date of death (P570)   , subclass of (P279)   #defaultView:AreaChart
SELECT ?cod (STR(SAMPLE(?yearOfDeath)) AS ?YEAR_Of_DEATH) (COUNT(*) AS ?NUMBER_OF_DEATHS) ?cause WHERE {
  ?pid wdt:P31 wd:Q5;  # instance of human
       wdt:P509 ?cod;  # cause of death
       wdt:P570 ?_date_of_death.
  ?cod wdt:P279* wd:Q12078.  # type of cancer
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                         ?cod rdfs:label ?cause. }
  BIND ( YEAR(?_date_of_death) AS ?yearOfDeath )
  FILTER( ?yearOfDeath > 1960 )
}
GROUP BY ?cod ?cause ?yearOfDeath Try it! Tree Continents, countries, regions and capitals The following query uses these:Items: continent (Q5107)   , country (Q6256)   , city (Q515)   Properties: instance of (P31)   , continent (P30)   , contains the administrative territorial entity (P150)   , locator map image (P242)   , flag image (P41)   , capital (P36)   , image (P18)   , population (P1082)   , head of government (P6)   , twinned administrative body (P190)   , inception (P571)   , located in or next to body of water (P206)   , has part(s) (P527)   #defaultView:Tree
SELECT ?continent ?continentFlag ?continentLabel ?country ?countryLabel ?countryFlag ?region ?regionLabel ?regionFlag ?city ?cityLabel ?cityImage ?property ?propertyLabel ?value ?valueLabel WHERE {
  {
    SELECT * WHERE {
      ?continent wdt:P31 wd:Q5107.
      ?country wdt:P30 ?continent.
      ?country p:P31/ps:P31 wd:Q6256.
      ?country wdt:P150 ?region.
      OPTIONAL {
        ?continent wdt:P242 ?continentFlag.
        ?country wdt:P41 ?countryFlag.
        ?region wdt:P41 ?regionFlag.
      }
      OPTIONAL {
        ?region wdt:P36 ?city.
        ?city wdt:P31 wd:Q515.
        ?city wdt:P18 ?cityImage.
        OPTIONAL {
          VALUES (?prop) {
            (wdt:P1082)
            (wdt:P6)
            (wdt:P190)
            (wdt:P31)
            (wdt:P571)
            (wdt:P150)
            (wdt:P206)
            (wdt:P527)
          }
          ?city ?prop ?value.
          ?property ?ref ?prop.
          ?property rdf:type wikibase:Property.
        }
      }
    }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Viennese composers and their compositions by tonality The following query uses these:Items: human (Q5)   , Vienna (Q1741)   Properties: instance of (P31)   , place of birth (P19)   , place of death (P20)   , residence (P551)   , image (P18)   , composer (P86)   , tonality (P826)   #defaultView:Tree
SELECT ?composer ?composerLabel ?composerImage ?tonality ?tonalityLabel ?composition ?compositionLabel WHERE {
  ?composer wdt:P31 wd:Q5;
            wdt:P19|wdt:P20|wdt:P551 wd:Q1741.
  OPTIONAL { ?composer wdt:P18 ?composerImage. }
  ?composition wdt:P86 ?composer;
               wdt:P826 ?tonality.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de-at,de\". }
}
ORDER BY ?composerLabel ?tonalityLabel Try it! Treemap Popular television series (in treeview) #added before 2016-10

#defaultView:TreeMap
SELECT ?show ?showLabel  ?season ?cleanSeasonLabel ?episode ?episodeLabel
WHERE
{
	{
		BIND(wd:Q886 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-23) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	} 
	UNION
	{
		BIND(wd:Q16538 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-20) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}  
	UNION
	{
		BIND(wd:Q147235 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(CONCAT(\"S\", SUBSTR(?_seasonLabel, 25)) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}

	SERVICE wikibase:label {  bd:serviceParam wikibase:language \"en\" }
}
 Try it! Famous people categorised into eye and hair color #defaultView:TreeMap
SELECT ?eyes ?hairColorLabel (COUNT(?person) as ?count)
WHERE
{
	?person wdt:P1340 ?eyeColor.
    ?person wdt:P1884 ?hairColor.
    ?person wdt:P2048 ?height.
    ?eyeColor rdfs:label ?_eyeColorLabel.
    FILTER((LANG(?_eyeColorLabel)) = \"en\")
    BIND(CONCAT(?_eyeColorLabel, \" eyes\") AS ?eyes)
   
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
GROUP BY ?eyes ?hairColorLabel
 Try it! Scatter chart Number of films by year and genre The following query uses these:Items: film (Q11424)   Properties: instance of (P31)   , publication date (P577)   , genre (P136)   #defaultView:ScatterChart
SELECT   ?year  (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?label )  (?year as ?year_shown) WHERE {
  ?item wdt:P31 wd:Q11424.
  ?item wdt:P577 ?_publication_date.
  ?item wdt:P136 ?_genre.
  ?_genre rdfs:label ?_genreLabel.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  FILTER((LANG(?_genreLabel)) = \"en\")
 
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 30) Try it! Calendars Calendar of birth dates of women who studied at the University of Oxford SELECT ?monthLabel (?day_int as ?d) ?personLabel ?personDesc
   (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?rperson),32) )) as ?link) WHERE {
{ SELECT ?month_int ?month ?day_int (SAMPLE(?person) AS ?rperson) WHERE {
?month wdt:P31 wd:Q47018901; wdt:P1545 ?month_ordinal. # These lines generate a calendar from January 1 to December 31
?day p:P361 [ps:P361 ?month; pq:P1545 ?day_ordinal ].
 BIND(xsd:integer(?month_ordinal) AS ?month_int)
 BIND(xsd:integer(?day_ordinal) AS ?day_int)
OPTIONAL {
# Define the people we're interested in
{?person wdt:P69 wd:Q34433 } UNION {?person wdt:P69/wdt:P31 wd:Q2581649 } # educated at Oxford or an Oxford college
?person wdt:P21 wd:Q6581072 ; # female
   p:P569/psv:P569 ?date_node. # birth date
?date_node wikibase:timePrecision \"11\"^^xsd:integer ; # birth date has specific day
   wikibase:timeValue ?birthdate .        
filter(DAY(?birthdate)=?day_int) filter (MONTH(?birthdate)=?month_int )
}
} GROUP BY ?month_int ?month ?day_int }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
?rperson rdfs:label ?personLabel. ?rperson schema:description ?personDesc. ?month rdfs:label ?monthLabel }
} ORDER BY ?month_int ?day_int
 Try it! Samples with coordinates to illustrate maps Items around with user location #defaultView:Map{\"layer\":\"?instance_ofLabel\"}
SELECT ?place ?placeLabel ?image ?coordinate_location ?dist ?instance_of ?instance_ofLabel WHERE {
  SERVICE wikibase:around {
    ?place wdt:P625 ?coordinate_location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\".
    bd:serviceParam wikibase:distance ?dist.
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?place wdt:P18 ?image. }
  OPTIONAL { ?place wdt:P31 ?instance_of. }
}
 Try it! Locations of national parks #defaultView:Map
SELECT ?objectLabel ?objectDescription ?link ?coord
WHERE {
  ?object wdt:P31/wdt:P279? wd:Q46169 .
          OPTIONAL { ?object wdt:P856 ?link. } 
          OPTIONAL { ?object wdt:P625 ?coord . }
          SERVICE wikibase:label {
               bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\"
          }
}
 Try it! Airports within 100km of Berlin #added before 2016-10

#defaultView:Map
SELECT ?place ?placeLabel ?location
WHERE
{
  # Berlin coordinates
  wd:Q64 wdt:P625 ?berlinLoc .
  SERVICE wikibase:around {
    ?place wdt:P625 ?location .
    bd:serviceParam wikibase:center ?berlinLoc .
    bd:serviceParam wikibase:radius \"100\" .
  } .
  # Is an airport
  FILTER EXISTS { ?place wdt:P31/wdt:P279* wd:Q1248784 } .
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
  } 
}
 Try it! Airports in Belgium #List of airports in Belgium
#defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor
WHERE {
  ?airport wdt:P31 wd:Q1248784 ;
          ?range wd:Q31;
          wdt:P625 ?coor.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! International airports named after women # Airports named after women
# List of airports that are named after women
# Written by WiseWoman auf der #wmdemv 2019
# defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor ?namedafterLabel
WHERE {
  ?airport wdt:P31 wd:Q644371 ;  
          # ?range wd:Q183;
          wdt:P625 ?coor.
  ?airport wdt:P138 ?namedafter .
  ?namedafter wdt:P31 wd:Q5 .
  ?namedafter wdt:P21 wd:Q6581072 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Schools between San Jose, CA and Sacramento, CA The following query uses these:Items: San Jose (Q16553)   , Sacramento (Q18013)   , school (Q3914)   Properties: coordinate location (P625)   , instance of (P31)   , subclass of (P279)    Features: map (Q24515275)   , wikibase:box (Q26211169)   , wikibase:box with West and East corners (Q26211177)  # Schools between San Jose, CA and Sacramento, CA
#defaultView:Map
SELECT *
WHERE
{ hint:Query hint:optimizer \"None\" .
  wd:Q16553 wdt:P625 ?SJloc .
  wd:Q18013 wdt:P625 ?SCloc .
  SERVICE wikibase:box {
      ?place wdt:P625 ?location .
      bd:serviceParam wikibase:cornerWest ?SJloc .
      bd:serviceParam wikibase:cornerEast ?SCloc .
    }
  ?place wdt:P31/wdt:P279* wd:Q3914 .
} Try it! Big cities, grouped into map layers by population #defaultView:Map
SELECT DISTINCT ?city ?cityLabel (SAMPLE(?location) AS ?location) (MAX(?population) AS ?population) (SAMPLE(?layer) AS ?layer)
WHERE
{
  ?city wdt:P31/wdt:P279* wd:Q515;
        wdt:P625 ?location;
        wdt:P1082 ?population.
  FILTER(?population >= 500000).
  BIND(
    IF(?population < 1000000, \"<1M\",
    IF(?population < 2000000, \"1M-2M\",
    IF(?population < 5000000, \"2M-5M\",
    IF(?population < 10000000, \"5M-10M\",
    IF(?population < 20000000, \"10M-20M\",
    \">20M\")))))
    AS ?layer).
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?city ?cityLabel
 Try it! Places with free wifi #defaultView:Map
# Places with free wi-fi
SELECT ?item ?itemLabel (SAMPLE(?coord) AS ?coord)
WHERE {
	?item wdt:P2848 wd:Q1543615 ;  # wi-fi gratis
	      wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} GROUP BY ?item ?itemLabel
 Try it! Basic map of U1 subway stations in Berlin #added before 2016-10
#defaultView:Map
SELECT ?stationLabel ?coord
WHERE {
	?station wdt:P81 wd:Q99691 ;
		 wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\" }
}
 Try it! Advanced map of Stockholm Metro (Q272926) Map of Stockholm Metro (query) Locations of universities in Cameroon #added before 2016-10
#defaultView:Map
SELECT ?universityLabel ?universityDescription ?website ?coord
WHERE {
	?university wdt:P31/wdt:P279* wd:Q3918 ;
		wdt:P17 wd:Q1009 ;
		wdt:P625 ?coord .
	OPTIONAL {
		?university wdt:P856 ?website
	}
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"en,de\" .
	}
}
 Try it! Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany #added before 2016-10
 #defaultView:Map
SELECT ?item ?itemLabel ?coord
WHERE
{
	?item wdt:P31/wdt:P279* wd:Q486972;
    	      wdt:P17 wd:Q183;
    	      rdfs:label ?itemLabel;
    	      wdt:P625 ?coord;
    	 FILTER (lang(?itemLabel) = \"de\") .
    	 FILTER regex (?itemLabel, \"(ow|itz)$\").
}
 Try it! Locations of power stations #defaultView:Map
SELECT DISTINCT ?objectLabel ?coord ?layer
WHERE
{
  ?object wdt:P31/wdt:P279* wd:Q159719;
     wdt:P625 ?coord.
  ?object wdt:P31 ?type. ?type wdt:P279* wd:Q159719.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?type rdfs:label ?layer }
}
 Try it! Locations of stone arch bridges #defaultView:Map
SELECT ?label ?coord ?place ?image
WHERE {
	?place wdt:P31 wd:Q14276458 ;  # instance of deck arch bridge
            wdt:P186 wd:Q22731 ;  # made of stone
            wdt:P625 ?coord .
	OPTIONAL { ?place wdt:P18 ?image }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?place rdfs:label ?label }
}
 Try it! Locations of aqueducts #defaultView:Map
SELECT ?place ?placeLabel ?coord ?layer
WHERE {
   ?place wdt:P31/wdt:P279? wd:Q474 ; # instance of aqueduct
          wdt:P625 ?coord ;
          wdt:P31 ?type.
  ?type wdt:P279* wd:Q474
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                       ?type rdfs:label ?layer}
}
 Try it! Locations of archaeological sites, with images #defaultView:Map
SELECT ?siteLabel ?coord ?image ?site
WHERE {
   ?site wdt:P31/wdt:P279* wd:Q839954 ;
      wdt:P625 ?coord ;
      wdt:P18 ?image .
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Locations of castles that are also archaeological sites #defaultView:Map
SELECT ?label ?coord ?subj
WHERE {
   ?subj wdt:P31 wd:Q839954 ; # instance of archaeological site
         wdt:P31/wdt:P279* wd:Q23413 ;  # instance or subclass of castle
         wdt:P625 ?coord .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?subj rdfs:label ?label}
}
 Try it! Locations of battles #added before 2016-10
#defaultView:Map
SELECT ?label ?coord ?subj ?year
WHERE
{
	?subj wdt:P31 wd:Q178561 .
	?subj wdt:P625 ?coord .
	OPTIONAL {?subj wdt:P580 ?d1}
	OPTIONAL {?subj wdt:P585 ?d2}
  	OPTIONAL {?subj wdt:P582 ?d3}
	BIND(IF(!BOUND(?d1),(IF(!BOUND(?d2),?d3,?d2)),?d1) as ?date)
	BIND(YEAR(?date) as ?year)
	?subj rdfs:label ?label filter (lang(?label) = \"en\")
}
 Try it! Places of worship #added before 2016-10

#defaultView:Map
SELECT ?item ?itemLabel ?_coordinate_location ?_image WHERE {
  ?item wdt:P31/wdt:P279* wd:Q1370598.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
   ?item wdt:P625 ?_coordinate_location.
  ?item wdt:P18 ?_image.
}
 Try it! All museums (including subclass of museum) in Washington, D.C. with coordinates #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?name ?coord ?lat ?lon
WHERE {
   hint:Query hint:optimizer \"None\" .
   ?item wdt:P131* wd:Q61 .
   ?item wdt:P31/wdt:P279* wd:Q33506 .
   ?item wdt:P625 ?coord .
   ?item p:P625 ?coordinate .
   ?coordinate psv:P625 ?coordinate_node .
   ?coordinate_node wikibase:geoLatitude ?lat .
   ?coordinate_node wikibase:geoLongitude ?lon .
   SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
    ?item rdfs:label ?name
   }
}
ORDER BY ASC (?name)
 Try it! Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) #defaultView:Map
select ?museum ?museumLabel ?layer (sample(?location) as ?location) where {
  ?museum wdt:P31/wdt:P279* wd:Q33506;
          wdt:P17 wd:Q55;
          wdt:P625 ?location.
  optional { ?museum wdt:P2851 ?layer. }
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} group by ?museum ?museumLabel ?layer
 Try it! All ski resorts with coordinates #defaultView:Map
SELECT ?item ?itemLabel ?coord #?lat ?lon
WHERE
{
   ?item               wdt:P31        wd:Q130003.
   ?item               wdt:P625         ?coord.

#  ?item                 p:P625         ?statementnode.
#  ?statementnode      psv:P625         ?valuenode.
#  ?valuenode     wikibase:geoLatitude  ?lat.
#  ?valuenode     wikibase:geoLongitude ?lon.

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Lighthouses in Norway #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?coords ?image
WHERE {
	?item wdt:P31 wd:Q39715 ;
          wdt:P17 wd:Q20 ;
          wdt:P625 ?coords
	OPTIONAL { ?item wdt:P18 ?image } 
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],nb,nn,en,fi\"  } 
}
ORDER BY ?itemLabel
 Try it! Most beautiful villages of France #defaultView:Map
SELECT ?item ?itemLabel ?geoLocation ?image
WHERE {
    ?item wdt:P463 wd:Q1010307 ;  # member of Les Plus Beaux Villages de France (organisation)
          wdt:P625 ?geoLocation .
    OPTIONAL { ?item wdt:P18 ?image }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" }
}
 Try it! Locations in Fiji This query shows a way of mapping locations which span the 180th meridian, without the points being split between the left and right edges of the map. #defaultView:Map
select ?item ?coords_ where {
  ?item wdt:P17 wd:Q712 .
  ?item p:P625/psv:P625 ?coords .
  ?coords wikibase:geoLatitude ?lat ;
          wikibase:geoLongitude ?lon .
  bind(strdt(concat(\"Point(\", if((?lon < 0), str(?lon + 360), str(?lon)), \" \", str(?lat), \")\"), geo:wktLiteral) as ?coords_) .
} limit 1000
 Try it! Map of disasters, color-coded by disaster type Map of disasters color-coded by disaster type #defaultView:Map{\"layer\":\"?typeLabel\"}
SELECT ?item ?itemLabel ?geo ?type ?typeLabel (SAMPLE(?_image) AS ?image) WHERE {
  ?type wdt:P279* wd:Q3839081 .
  ?item wdt:P31 ?type ;
        wdt:P625 ?geo .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image }
}
GROUP BY ?item ?itemLabel ?geo ?type ?typeLabel
 Try it! Monuments and other heritage items located 1 km around the users location #defaultView:Map
select distinct ?monument ?monumentLabel ?heritageLabel (sample(?distance) as ?distance) (sample(?location) as ?location) (sample(?image) as ?image) where {
  ?monument wdt:P1435 ?heritage.
  
  service wikibase:around {   
    ?monument wdt:P625 ?location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\" . 
    bd:serviceParam wikibase:distance ?distance .
  }
  
  optional {
    ?monument wdt:P18 ?image.
  }
  
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,nl\". }
} group by ?monument ?monumentLabel ?heritageLabel order by ?distance
 Try it! Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article Map of newspapers in the United States by presence of the template Infobox newspaper in their English Wikipedia article integrates a text search for the template's name using the MediaWiki API into a SPARQL query #defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?id ?coords ?article ?rgb WHERE {
 ?c wdt:P279* wd:Q11032 .
  ?item wdt:P31 ?c .
 ?item wdt:P17|wdt:P495 wd:Q30 .
 OPTIONAL{?item wdt:P5454 ?id .}
 ?item wdt:P291 ?place .
 ?place wdt:P625 ?coords.
 OPTIONAL {   
   SELECT ?item ?pageid ?ns WHERE {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam mwapi:generator \"search\" .
      bd:serviceParam mwapi:gsrsearch \"hastemplate:\\\"infobox newspaper\\\"\" .
      bd:serviceParam mwapi:gsrlimit \"max\" .
      ?item wikibase:apiOutputItem mwapi:item .
      ?pageid wikibase:apiOutput \"@pageid\" .
      ?ns wikibase:apiOutput \"@ns\" .
    }
  } LIMIT 15000
 }
    
  OPTIONAL {
      ?article schema:about ?item .
      ?article schema:inLanguage \"en\" .
      FILTER (SUBSTR(str(?article), 1, 25) = \"https://en.wikipedia.org/\")
  }

  BIND( IF(BOUND(?article),   IF(BOUND(?ns), \"009500\" , \"FFF000\" )  ,  \"FF0000\"   )  AS ?rgb).  
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
 Try it! List of all the lakes in Cameroon The following query uses these:Items: lake (Q23397)   , Cameroon (Q1009)   Properties: instance of (P31)   , subclass of (P279)   , country (P17)   , coordinate location (P625)   , image (P18)    Features: map (Q24515275)  """@en,
    """Other languages: English Nederlands Türkçe español français svenska українська հայերեն 中文 日本語 Contents 1 Обрані запити 1.1 Найбільші міста з мерами-жінками 1.2 Список країн, упорядкованих за кількістю їхніх міст з мерами-жінками 1.3 Популярні прізвища людей 1.4 Given names with most variations 1.5 Popular surnames among fictional characters 1.6 Women with most sitelinks and no image born in 1921 or later 1.7 У кого сьогодні день народження? 1.8 Пошук Джона і Сари Коннор 1.9 Data of Douglas Adams 1.10 Data of Douglas Adams (modified version) 1.11 Data of Barbara Harris - Grouped per item 1.12 People who have been buried in multiple places 1.13 All oldest living US ex-presidents in chronological order 1.14 Persons and institutions related in some way to Russian politics 2 Advanced Queries 2.1 Bubble charts 2.1.1 Overall causes of death ranking 2.1.2 WWII battle durations 2.1.3 The top 10 heaviest humans 2.1.4 Values of uses (P2283) in scholarly articles 2.2 Timeline 2.2.1 Timeline of space probes 2.2.2 Timeline of compositions by Wolfgang Amadeus Mozart 2.3 Dimensions 2.3.1 Dimensions of elements 2.4 Graph 2.4.1 Children of Genghis Khan 2.4.2 Firearms cartridges and which they are based on 2.4.3 Music genres 2.4.4 Groups of characters in the Marvel universe 2.5 Line chart 2.5.1 Average number of children per year 2.5.2 Population of countries sharing a border with Germany 2.5.3 Population of countries sharing a border with Cameroon 2.5.4 Number of books by year and genre 2.5.5 Number of bands by year and genre 2.6 Bar chart 2.6.1 Battles per year per country last 80 years 2.6.2 Battles per year per continent and country last 80 years (animated) 2.6.3 Yearly Population stacked by country 2.6.4 Built power plants per year per country 2.6.5 Bar chart of paintings produced per year by Piet Mondrian 2.6.6 Bar chart with ratio of male / female creators for public art in city of Nijmegen, the Netherlands 2.7 Area chart 2.7.1 Cancer deaths per year and cancer type 2.8 Tree 2.8.1 Continents, countries, regions and capitals 2.8.2 Viennese composers and their compositions by tonality 2.9 Treemap 2.9.1 Popular television series (in treeview) 2.9.2 Famous people categorised into eye and hair color 2.10 Scatter chart 2.10.1 Number of films by year and genre 2.11 Calendars 2.11.1 Calendar of birth dates of women who studied at the University of Oxford 2.12 Samples with coordinates to illustrate maps 2.12.1 Items around with user location 2.12.2 Locations of national parks 2.12.3 Airports within 100km of Berlin 2.12.4 Airports in Belgium 2.12.5 International airports named after women 2.12.6 Schools between San Jose, CA and Sacramento, CA 2.12.7 Big cities, grouped into map layers by population 2.12.8 Places with free wifi 2.12.9 Basic map of U1 subway stations in Berlin 2.12.10 Advanced map of Stockholm Metro (Q272926) 2.12.11 Locations of universities in Cameroon 2.12.12 Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany 2.12.13 Locations of power stations 2.12.14 Locations of stone arch bridges 2.12.15 Locations of aqueducts 2.12.16 Locations of archaeological sites, with images 2.12.17 Locations of castles that are also archaeological sites 2.12.18 Locations of battles 2.12.19 Places of worship 2.12.20 All museums (including subclass of museum) in Washington, D.C. with coordinates 2.12.21 Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) 2.12.22 All ski resorts with coordinates 2.12.23 Lighthouses in Norway 2.12.24 Most beautiful villages of France 2.12.25 Locations in Fiji 2.12.26 Map of disasters, color-coded by disaster type 2.12.27 Monuments and other heritage items located 1 km around the users location 2.12.28 Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article 2.12.29 List of all the lakes in Cameroon 2.13 Listeria 2.13.1 Women born in Wales without an article in Welsh for Listeria 2.13.2 People born in Occitania for Listeria 2.13.3 People born in Scotland for Listeria 2.14 Gather Apply Scatter 2.14.1 Children of Genghis Khan 2.15 Sampling 2.15.1 Scientific articles without any description 2.16 Mediawiki API 2.16.1 Filter labels using EntitySearch from mwapi service to provide Full Text Search 2.16.2 Using mwapi to base a query on articles in a Wikipedia category 2.16.3 Find statements with references containing external links to wipo.int 2.16.4 Find metadata like artist and license for an image 2.16.5 Getting pageviews for all articles in a category 2.17 Federation 2.17.1 Get OpenStreetMap top level properties of Helsinki University main building 2.17.2 Get information of Europeana item 2.17.3 Share of renewable energy in electricity 2.17.4 Get OpenStreetMap nodes with inarisami label in wikipedia but without inarisami label in OSM 3 Queries useful to external services 3.1 The best ranked properties and values of a given item Обрані запити Ці запити показують силу і функціональність SPARQL і WDQS GUI. Найбільші міста з мерами-жінками #added before 2016-10
#TEMPLATE={\"template\":\"Largest ?c with ?sex head of government\",\"variables\":{\"?sex\":{\"query\":\" SELECT ?id WHERE { ?id wdt:P31 wd:Q48264 .  } \"},\"?c\":{\"query\":\"SELECT DISTINCT ?id WHERE {  ?c wdt:P31 ?id.  ?c p:P6 ?mayor. }\"} } }
SELECT DISTINCT ?city ?cityLabel ?mayor ?mayorLabel
WHERE
{
  BIND(wd:Q6581072 AS ?sex)
  BIND(wd:Q515 AS ?c)

	?city wdt:P31/wdt:P279* ?c .  # find instances of subclasses of city
	?city p:P6 ?statement .            # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .          # ... that has the value ?mayor
	?mayor wdt:P21 ?sex .       # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	
	# Now select the population value of the ?city
	# (wdt: properties use only statements of \"preferred\" rank if any, usually meaning \"current population\")
	?city wdt:P1082 ?population .
	# Optionally, find English labels for city and mayor:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
	}
}
ORDER BY DESC(?population)
LIMIT 10
 Try it! Список країн, упорядкованих за кількістю їхніх міст з мерами-жінками #added before 2016-10
SELECT ?country ?countryLabel (count(*) AS ?count)
WHERE
{
	?city wdt:P31/wdt:P279* wd:Q515 . # find instances of subclasses of city
	?city p:P6 ?statement .           # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .         # ... that has the value ?mayor
	?mayor wdt:P21 wd:Q6581072 .      # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	?city wdt:P17 ?country .          # Also find the country of the city
 	
	# If available, get the \"ru\" label of the country, use \"en\" as fallback:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"ru,en\" .
	}
}
GROUP BY ?country ?countryLabel
ORDER BY DESC(?count)
LIMIT 100
 Try it! Популярні прізвища людей #defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?human) AS ?count) WHERE {
    # ?human wdt:P31 wd:Q5.
      ?human wdt:P734 ?surname.
    }
    GROUP BY ?surname ORDER BY DESC(?count) LIMIT 100
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} 
ORDER BY DESC(?count)
 Try it! Given names with most variations #added before 2016-10

SELECT ?name ?nameLabel (COUNT(?otherName) AS ?count)
WHERE
{
  ?name wdt:P31 wd:Q202444;
        wdt:P460 ?otherName.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?name ?nameLabel
ORDER BY DESC(?count)
LIMIT 10
 Try it! Popular surnames among fictional characters #added before 2016-10

#defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?person) AS ?count) WHERE {
      ?person (wdt:P31/wdt:P279*) wd:Q95074.
      ?person wdt:P734 ?surname.
    }
    GROUP BY ?surname
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?count)
LIMIT 100
 Try it! Women with most sitelinks and no image born in 1921 or later SELECT ?s ?desc ?linkcount
WHERE
{
  ?s wdt:P31 wd:Q5 ;   # human
     wdt:P21 wd:Q6581072 ;  # gender: female
     wdt:P569 ?born .
  FILTER (?born >= \"1921-01-01T00:00:00Z\"^^xsd:dateTime) .
  ?s wikibase:sitelinks ?linkcount .
  MINUS {
    ?s wdt:P18 []  # exclude if there is an image
  }
?s rdfs:label ?desc FILTER(lang(?desc)=\"en\").
}
GROUP BY ?s ?desc ?linkcount
ORDER BY DESC(?linkcount)
LIMIT 50
 Try it! У кого сьогодні день народження? #Whose birthday is today?
SELECT ?entity ?entityLabel ?entityDescription (YEAR(?date) as ?year)
WHERE {
    BIND(MONTH(NOW()) AS ?nowMonth)
    BIND(DAY(NOW()) AS ?nowDay)
    ?entity wdt:P569 ?date .
    FILTER (MONTH(?date) = ?nowMonth && DAY(?date) = ?nowDay)

SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }   
}
LIMIT 20
 Try it! Пошук Джона і Сари Коннор #added before 2016-10
 SELECT * WHERE {
  ?p wdt:P1080 wd:Q620588 . # from fictional universe: Terminator
  ?p rdfs:label ?pl .
  FILTER (lang(?pl) = \"en\")
  ?p wdt:P25 ?m .  # ?m is mother of ?p
  ?m rdfs:label ?ml .
  FILTER (lang(?ml) = \"en\")
}
 Try it! Data of Douglas Adams #added before 2016-10

PREFIX entity: <http://www.wikidata.org/entity/>
#partial results

SELECT ?propUrl ?propLabel ?valUrl ?valLabel ?picture
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"identity\"@en AS ?propLabel ) .
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel
	}
	
  	?valUrl rdfs:label ?valLabel
	FILTER (LANG(?valLabel) = 'en') .
	OPTIONAL{ ?valUrl wdt:P18 ?picture .}
	FILTER (lang(?propLabel) = 'en' )
}
ORDER BY ?propUrl ?valUrl
LIMIT 200
 Try it! Data of Douglas Adams (modified version) PREFIX entity: <http://www.wikidata.org/entity/>

#  In addition to the original query this one comes with some advantages:
#  - You will get only literals as results, (even if the values are stored as IRI in wikibase)
#  - That means you will also get properties as birth date, alphanumeric identifier and so on.
#  - The list is ordered numerically by property number. (So P19 comes before P100) 
#  - All label, altLabel and description in a given Language are included.
#  You may open a separate column ?valUrl if you need also the IRI
#
#  Please advise, if there is an option to put the Q-Number  and/or the Language 
#  code into a runtime variable. 

SELECT ?propNumber ?propLabel ?val
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"Name\"@de AS ?propLabel ) .
       entity:Q42 rdfs:label ?val .
      
        FILTER (LANG(?val) = \"de\") 
	}
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"AltLabel\"@de AS ?propLabel ) .
        optional{entity:Q42 skos:altLabel ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"Beschreibung\"@de AS ?propLabel ) .
        optional{entity:Q42 schema:description ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
   	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' )
        filter  isliteral(?valUrl) 
        BIND(?valUrl AS ?val)
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' ) 
        filter  isIRI(?valUrl) 
        ?valUrl rdfs:label ?valLabel 
		FILTER (LANG(?valLabel) = \"de\") 
         BIND(CONCAT(?valLabel) AS ?val)
	}
        BIND( SUBSTR(str(?propUrl),38, 250) AS ?propNumber)
}
ORDER BY xsd:integer(?propNumber)
 Try it! Data of Barbara Harris - Grouped per item # This query collects data related to entities on Barbara Harris. 
# It demonstrates collecting individual attributes and concatenating them for easier post processing. 

SELECT 
  ?item
(SAMPLE(?itemLabel) AS ?itemLabel) 
(SAMPLE(?itemDescription) AS ?itemDescription) 
  (SAMPLE(?pic) AS ?pic) 
(SAMPLE(?date_of_birth) AS ?date_of_birth) 
(GROUP_CONCAT(DISTINCT ?country_of_citizenship; SEPARATOR=\", \") AS ?country_of_citizenships)
(GROUP_CONCAT(DISTINCT ?country_of_citizenshipLabel; SEPARATOR=\", \") AS ?country_of_citizenshipLabels)

(GROUP_CONCAT(DISTINCT ?occupation; SEPARATOR=\", \") AS ?occupations)
(GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR=\", \") AS ?occupationLabels)

(GROUP_CONCAT(DISTINCT ?country; SEPARATOR=\", \") AS ?countries)
(GROUP_CONCAT(DISTINCT ?countryLabel; SEPARATOR=\", \") AS ?countryLabels)


WHERE {
  VALUES ?item {
    wd:Q269809
    wd:Q274590
    wd:Q24576851
    wd:Q807461
    wd:Q4858963
    wd:Q27954833
    wd:Q4859015
    wd:Q826930
  }
  OPTIONAL { ?item wdt:P18 ?pic. }
  OPTIONAL { ?item wdt:P27 ?country_of_citizenship. }
  OPTIONAL { ?item wdt:P106 ?occupation. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  OPTIONAL { ?item wdt:P31 ?instance_of. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
    ?item rdfs:label ?itemLabel.
    ?item rdfs:description ?itemDescription.
    ?country_of_citizenship rdfs:label ?country_of_citizenshipLabel.
    ?occupation rdfs:label ?occupationLabel.
    ?country rdfs:label ?countryLabel.
  }
}
GROUP BY ?item
 Try it! People who have been buried in multiple places # This query collects burial places of individuals, and sorts them in decreasing order
SELECT ?human (COUNT(?place) AS ?count) WHERE {
  ?human wdt:P31 wd:Q5.
  ?human wdt:P119 ?place.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}
GROUP BY ?human 
ORDER BY DESC(?count)
 Try it! All oldest living US ex-presidents in chronological order # Added 2020-07
# All persons who have been the oldest living US ex-president with dates in chronological order
SELECT DISTINCT ?date ?president ?presidentLabel
WITH
{
  # Persons who is/were president of USA
  SELECT ?president ?presidentLabel ?president_enddate ?president_birthdate ?president_deathdate
  WHERE
  {
    ?president wdt:P31 wd:Q5.
    ?president p:P39 ?president_statement.
    ?president_statement ps:P39 wd:Q11696.
    ?president_statement pq:P582 ?president_enddate.
    ?president wdt:P569 ?president_birthdate.
    OPTIONAL { ?president wdt:P570 ?president_deathdate. }
    ?president rdfs:label ?presidentLabel.
    FILTER (LANG(?presidentLabel) = \"en\")
  }
} AS %presidents
WITH
{
  # Dates where who is oldest living expresident can change
  SELECT DISTINCT ?date
  WHERE
  {
    {
      INCLUDE %presidents
      BIND(?president_enddate + \"P1D\"^^xsd:duration AS ?date)
    }
    UNION
    {
      INCLUDE %presidents
      BIND(?president_deathdate + \"P1D\"^^xsd:duration AS ?date)
    }
  }
} AS %dates
WITH
{
  # Find the age for all living expresidents for each value of ?date
  SELECT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    INCLUDE %presidents
    FILTER (?president_enddate < ?date) # Must have become expresident
    FILTER IF(BOUND(?president_deathdate), ?president_deathdate >= ?date, true) # Must still be living
    BIND (?date - ?president_birthdate AS ?age)
  }
} AS %ages
WITH
{
  # Find the oldest age for a living expresident for each value of ?date
  SELECT ?date (MAX(?age) AS ?oldest)
  WHERE
  {
    INCLUDE %ages
  }
  GROUP BY ?date
} AS %oldest
WITH
{
  SELECT DISTINCT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    OPTIONAL
    {
      INCLUDE %ages
      INCLUDE %oldest
      FILTER (?age = ?oldest)
    }
  }
} AS %result
WHERE
{
  # A result is a change from the previous date if ?president's presidency ended the day before ?date,
  # or if an older expresident died the day before ?date. Filter out results that don't fulfill this.
  INCLUDE %result
  BIND (?date - \"P1D\"^^xsd:duration AS ?day_before)
  FILTER
  (
    ! BOUND(?president)||
    EXISTS
    {
      ?president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?day_before.
    } ||
    EXISTS
    {
      ?other_president wdt:P31 wd:Q5.
      ?other_president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?other_president_end.
      ?other_president wdt:P569 ?other_president_birthdate.
      ?other_president wdt:P570 ?day_before.
      FILTER (?other_president_birthdate < ?president_birthdate) # Other president is oldest
      FILTER (?other_president_end < ?day_before) # other president died as expresident
    }
  )
}
ORDER BY ?date
 Try it! Persons and institutions related in some way to Russian politics # Added 2022-03
# people and institutions that have the affiliation attribute assigned to Russia 
select ?item ?itemLabel ?itemDescription where { ?item wdt:P1416 wd:Q159. SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } } limit 100
 Try it!  Advanced Queries Bubble charts Overall causes of death ranking #defaultView:BubbleChart
#TEMPLATE={\"template\":\"Overall causes of death ranking of ?thing \",\"variables\":{\"?thing\": {\"query\":\"SELECT ?id  (COUNT(?id) AS ?count) WHERE {  ?sub wdt:P509 ?y.  ?sub wdt:P31 ?id. } GROUP BY ?id \"} } }
SELECT ?cid ?cause (COUNT(*) AS ?count) WHERE {
  BIND(wd:Q5 AS ?thing)
  ?pid wdt:P31 ?thing;
      wdt:P509 ?cid.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?cid rdfs:label ?cause}
}
GROUP BY ?cid ?cause
ORDER BY DESC(?count) ?cause
 Try it! WWII battle durations #defaultView:BubbleChart
SELECT DISTINCT ?item ?itemLabel (?end - ?start AS ?duration)
WHERE
{
	?item wdt:P361* wd:Q362 ;
          wdt:P31/wdt:P279* wd:Q178561 ;
          wdt:P580 ?start ;
          wdt:P582 ?end .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! The top 10 heaviest humans #defaultView:BubbleChart
#TEMPLATE={ \"template\": \"The top 10 heaviest ?type \", \"variables\": { \"?type\": { \"query\": \"SELECT DISTINCT ?id WHERE { ?i wdt:P2067 ?v. ?i wdt:P31 ?id}\" } } }
SELECT ?item ?itemLabel ?mass
WHERE {
  {
    SELECT ?item ?mass WHERE {
      ?item wdt:P31 wd:Q5;
            p:P2067/psn:P2067/wikibase:quantityAmount ?mass.
    }
    ORDER BY DESC(?mass)
    LIMIT 10
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,fr,de\" }
}
 Try it! Values of uses (P2283) in scholarly articles # Values of \"uses\" used in scholarly articles
# Demonstrates how to turn off the optimizer and start with the lowest number of edges first.
#defaultView:BubbleChart
SELECT ?uses ?usesLabel (count(?item) as ?c)
WHERE 
{
  hint:Query hint:optimizer \"None\".
  ?item wdt:P2283 ?uses. # ~20,000 edges
  ?item wdt:P31 wd:Q13442814. # ~37M edges
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
group by ?uses ?usesLabel
order by desc(?c)
 Try it! Timeline Timeline of space probes #defaultView:Timeline
SELECT ?item ?itemLabel ?launchdate (SAMPLE(?image) AS ?image)
WHERE
{
	?item wdt:P31 wd:Q26529 .
    ?item wdt:P619 ?launchdate .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
    OPTIONAL { ?item wdt:P18 ?image }
}
GROUP BY ?item ?itemLabel ?launchdate
 Try it! Timeline of compositions by Wolfgang Amadeus Mozart #defaultView:Timeline
SELECT DISTINCT ?item ?itemLabel ?catalog_code ?publication_date
WHERE {
	?item wdt:P86 wd:Q254 ; # composer: W. A. Mozart
          wdt:P528 ?catalog_code ;
          wdt:P577 ?publication_date .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Dimensions Dimensions of elements #defaultView:Dimensions
SELECT ?elementLabel ?boiling_point ?melting_point ?electronegativity ?density ?mass WHERE {
?element wdt:P31 wd:Q11344;
   wdt:P2102 ?boiling_point;
   wdt:P2101 ?melting_point;
   wdt:P1108 ?electronegativity;
   wdt:P2054 ?density;
   wdt:P2067 ?mass.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
LIMIT 100
 Try it! Graph Children of Genghis Khan #defaultView:Graph
PREFIX gas: <http://www.bigdata.com/rdf/gas#>

SELECT ?item ?itemLabel ?pic ?linkTo
WHERE {
  SERVICE gas:service {
    gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;
                gas:in wd:Q720 ;
                gas:traversalDirection \"Forward\" ;
                gas:out ?item ;
                gas:out1 ?depth ;

                gas:maxIterations 4 ;
                gas:linkType wdt:P40 .
  }
  OPTIONAL { ?item wdt:P40 ?linkTo }
  OPTIONAL { ?item wdt:P18 ?pic }
  SERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Firearms cartridges and which they are based on #Show firearms cartridges and which they are based on
#defaultView:Graph
SELECT 
?item ?itemLabel ?image 
?other ?otherLabel ?image2
WHERE
{
    ?item  wdt:P279+ wd:Q37144 .   # cartridges
    ?item  wdt:P144    ?other  .   # if the cartridge is based on another
    OPTIONAL {
      ?item  wdt:P18     ?image  .   # grab image
      ?other wdt:P18     ?image2 .   # grab image
    }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Music genres #graph rendering could be slow due to large number of results

#defaultView:Graph
SELECT ?item ?itemLabel ?_image ?_subclass_of ?_subclass_ofLabel
WHERE {
  ?item wdt:P31 wd:Q188451;
        wdt:P279 ?_subclass_of.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image. }
}
 Try it! Groups of characters in the Marvel universe #defaultView:Graph
SELECT ?char ?charLabel ?group ?groupLabel (\"7FFF00\" as ?rgb)
WHERE {
	?group wdt:P31 wd:Q14514600 ;  # group of fictional characters
          wdt:P1080 wd:Q931597.  # from Marvel universe
 ?char wdt:P463 ?group # member of group
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Line chart Average number of children per year The following query uses these:Items: human (Q5)   Properties: instance of (P31)   , number of children (P1971)   , date of birth (P569)   #defaultView:LineChart
SELECT  (str(?year) AS ?year) (AVG( ?_number_of_children ) AS ?count) WHERE {
  ?item wdt:P31 wd:Q5.
  ?item wdt:P1971 ?_number_of_children.
  ?item wdt:P569 ?_date_of_birth.
  BIND( year(?_date_of_birth) as ?year ).
  FILTER( ?year > 1900)
}

GROUP BY ?year Try it! Population of countries sharing a border with Germany #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q183;   # shares border with Germany
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Population of countries sharing a border with Cameroon #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q1009;  # shares border with Cameroon
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Number of books by year and genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?genreLabel )  WHERE {
  ?item wdt:P31 wd:Q571;
        wdt:P577 ?_publication_date;
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?_genre rdfs:label ?genreLabel.}
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Number of bands by year and genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count) (SAMPLE(?_genreLabel) AS ?_genreLabel) WHERE {
  ?item wdt:P31 wd:Q215380; # instance of: band
        wdt:P571 ?_date;   # inception
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_genre rdfs:label ?_genreLabel.}
  FILTER(?_date >= \"1960-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Bar chart Battles per year per country last 80 years #defaultView:BarChart

SELECT(SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel)  WHERE {
  ?subj wdt:P31 wd:Q178561.  # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. }  # start time
  OPTIONAL { ?subj wdt:P585 ?d2. }  # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. }  # end time
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(STR(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.  # country of location of battle
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_country rdfs:label ?_countryLabel.}
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Battles per year per continent and country last 80 years (animated) #defaultView:BarChart
SELECT (SAMPLE(?_continentLabel) AS ?continent) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel) (SAMPLE(?year) AS ?year)  WHERE {
  ?subj wdt:P31 wd:Q178561.        # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. } # start date
  OPTIONAL { ?subj wdt:P585 ?d2. } # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. } # end date
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(str(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.
  ?_country wdt:P30 ?_continent.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
       ?_country rdfs:label ?_countryLabel.
       ?_continent rdfs:label ?_continentLabel.}
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
}
GROUP BY ?year ?_country
 Try it! Yearly Population stacked by country The following query uses these:Items: sovereign state (Q3624078)   , estimation (Q791801)   , census (Q39825)   Properties: instance of (P31)   , population (P1082)   , point in time (P585)   , determination method (P459)   #defaultView:BarChart
# male/female population _must_ not be added unqualified as total population (!)
# this is an error and should be fixed at the item using P1540 and P1539 instead
# (wrong query result may be a manifestation of such)
SELECT ?year (AVG(?pop) AS ?population) ?countryLabel
       (COUNT(*) AS ?number_of_chosen_sources) (SAMPLE(?method) AS ?a_source_of_those_chosen)
WHERE
{
  ?country wdt:P31 wd:Q3624078;#more useful than Q6256;
           p:P1082 ?popStatement .
  ?popStatement ps:P1082 ?pop;
                pq:P585 ?date .
  BIND(STR(YEAR(?date)) AS ?year)
  #FILTER ( (YEAR(?date)) >= 2000 ) 
  # IF multiple ?pop values per country per year exist, we prioritize by source
  #       census 1st, others 2nd, estimation(s) 3rd, unknown sources (none supplies P459) last
  # note: wikibase:rank won't help here: each year may have multiple statements for ?pop value
  #       rank:prefered is used for the best value (or values) of the latest or current year
  #       rank:normal may be justified for all of multiple ?pop values for a given year
  OPTIONAL { ?popStatement pq:P459 ?method. }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?d; pq:P459 ?estimate ].
             FILTER(STR(YEAR(?d)) = ?year). FILTER(?estimate = wd:Q791801). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?e; pq:P459 ?census ].
             FILTER(STR(YEAR(?e)) = ?year). FILTER(?census = wd:Q39825). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?f; pq:P459 ?other ].
             FILTER(STR(YEAR(?f)) = ?year). FILTER(?other != wd:Q39825 && ?other != wd:Q791801). }
  BIND(COALESCE( 
    IF(BOUND(?census), ?census, 1/0),
    IF(BOUND(?other), ?other, 1/0),
    IF(BOUND(?estimate), ?estimate, 1/0) ) AS ?pref_method).
  FILTER(IF(BOUND(?pref_method),?method = ?pref_method,true))
  # .. still need to group if multiple values per country per year exist and
  # - none is qualified with P459
  # - multiple ?estimate or multiple ?census (>1 value from same source)
  # - ?other yields more than one source (>1 values are better than optionally
  #                         supplied estimate, but no census source available)

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }               
}
GROUP BY ?year ?countryLabel
ORDER BY ?year ?countryLabel Try it! Built power plants per year per country #defaultView:BarChart
SELECT (SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?count) (SAMPLE(?_countryLabel) AS ?_countryLabel) WHERE {
  ?object wdt:P31/wdt:P279* wd:Q134447. # Power stations or subtypes
  BIND(STR(YEAR(?_inception)) AS ?year)
  ?object wdt:P571 ?_inception;
          wdt:P17 ?_country.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?_country rdfs:label ?_countryLabel. }
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Bar chart of paintings produced per year by Piet Mondrian #defaultView:BarChart
SELECT ?year (COUNT(?year) as ?count) WHERE {
  ?painting wdt:P31 wd:Q3305213.
  ?painting wdt:P170 wd:Q151803.
  ?painting wdt:P571 ?inception.
  BIND(str(year(?inception)) AS ?year)
  OPTIONAL { ?painting wdt:P18 ?image. }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} GROUP BY ?year ?count ORDER BY ?year
 Try it! Bar chart with ratio of male / female creators for public art in city of Nijmegen, the Netherlands #defaultView:BarChart
select ?genderLabel (count(?gender) as ?genderCount) where {
  ?item wdt:P136 wd:Q557141;
        wdt:P131 wd:Q47887;
        wdt:P170 ?creator. 
    
  ?creator wdt:P21 ?gender.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} group by ?genderLabel ?genderCount
 Try it! Area chart Cancer deaths per year and cancer type The following query uses these:Items: human (Q5)   , cancer (Q12078)   Properties: instance of (P31)   , cause of death (P509)   , date of death (P570)   , subclass of (P279)   #defaultView:AreaChart
SELECT ?cod (STR(SAMPLE(?yearOfDeath)) AS ?YEAR_Of_DEATH) (COUNT(*) AS ?NUMBER_OF_DEATHS) ?cause WHERE {
  ?pid wdt:P31 wd:Q5;  # instance of human
       wdt:P509 ?cod;  # cause of death
       wdt:P570 ?_date_of_death.
  ?cod wdt:P279* wd:Q12078.  # type of cancer
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                         ?cod rdfs:label ?cause. }
  BIND ( YEAR(?_date_of_death) AS ?yearOfDeath )
  FILTER( ?yearOfDeath > 1960 )
}
GROUP BY ?cod ?cause ?yearOfDeath Try it! Tree Continents, countries, regions and capitals The following query uses these:Items: continent (Q5107)   , country (Q6256)   , city (Q515)   Properties: instance of (P31)   , continent (P30)   , contains the administrative territorial entity (P150)   , locator map image (P242)   , flag image (P41)   , capital (P36)   , image (P18)   , population (P1082)   , head of government (P6)   , twinned administrative body (P190)   , inception (P571)   , located in or next to body of water (P206)   , has part(s) (P527)   #defaultView:Tree
SELECT ?continent ?continentFlag ?continentLabel ?country ?countryLabel ?countryFlag ?region ?regionLabel ?regionFlag ?city ?cityLabel ?cityImage ?property ?propertyLabel ?value ?valueLabel WHERE {
  {
    SELECT * WHERE {
      ?continent wdt:P31 wd:Q5107.
      ?country wdt:P30 ?continent.
      ?country p:P31/ps:P31 wd:Q6256.
      ?country wdt:P150 ?region.
      OPTIONAL {
        ?continent wdt:P242 ?continentFlag.
        ?country wdt:P41 ?countryFlag.
        ?region wdt:P41 ?regionFlag.
      }
      OPTIONAL {
        ?region wdt:P36 ?city.
        ?city wdt:P31 wd:Q515.
        ?city wdt:P18 ?cityImage.
        OPTIONAL {
          VALUES (?prop) {
            (wdt:P1082)
            (wdt:P6)
            (wdt:P190)
            (wdt:P31)
            (wdt:P571)
            (wdt:P150)
            (wdt:P206)
            (wdt:P527)
          }
          ?city ?prop ?value.
          ?property ?ref ?prop.
          ?property rdf:type wikibase:Property.
        }
      }
    }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Viennese composers and their compositions by tonality The following query uses these:Items: human (Q5)   , Vienna (Q1741)   Properties: instance of (P31)   , place of birth (P19)   , place of death (P20)   , residence (P551)   , image (P18)   , composer (P86)   , tonality (P826)   #defaultView:Tree
SELECT ?composer ?composerLabel ?composerImage ?tonality ?tonalityLabel ?composition ?compositionLabel WHERE {
  ?composer wdt:P31 wd:Q5;
            wdt:P19|wdt:P20|wdt:P551 wd:Q1741.
  OPTIONAL { ?composer wdt:P18 ?composerImage. }
  ?composition wdt:P86 ?composer;
               wdt:P826 ?tonality.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de-at,de\". }
}
ORDER BY ?composerLabel ?tonalityLabel Try it! Treemap Popular television series (in treeview) #added before 2016-10

#defaultView:TreeMap
SELECT ?show ?showLabel  ?season ?cleanSeasonLabel ?episode ?episodeLabel
WHERE
{
	{
		BIND(wd:Q886 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-23) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	} 
	UNION
	{
		BIND(wd:Q16538 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-20) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}  
	UNION
	{
		BIND(wd:Q147235 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(CONCAT(\"S\", SUBSTR(?_seasonLabel, 25)) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}

	SERVICE wikibase:label {  bd:serviceParam wikibase:language \"en\" }
}
 Try it! Famous people categorised into eye and hair color #defaultView:TreeMap
SELECT ?eyes ?hairColorLabel (COUNT(?person) as ?count)
WHERE
{
	?person wdt:P1340 ?eyeColor.
    ?person wdt:P1884 ?hairColor.
    ?person wdt:P2048 ?height.
    ?eyeColor rdfs:label ?_eyeColorLabel.
    FILTER((LANG(?_eyeColorLabel)) = \"en\")
    BIND(CONCAT(?_eyeColorLabel, \" eyes\") AS ?eyes)
   
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
GROUP BY ?eyes ?hairColorLabel
 Try it! Scatter chart Number of films by year and genre The following query uses these:Items: film (Q11424)   Properties: instance of (P31)   , publication date (P577)   , genre (P136)   #defaultView:ScatterChart
SELECT   ?year  (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?label )  (?year as ?year_shown) WHERE {
  ?item wdt:P31 wd:Q11424.
  ?item wdt:P577 ?_publication_date.
  ?item wdt:P136 ?_genre.
  ?_genre rdfs:label ?_genreLabel.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  FILTER((LANG(?_genreLabel)) = \"en\")
 
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 30) Try it! Calendars Calendar of birth dates of women who studied at the University of Oxford SELECT ?monthLabel (?day_int as ?d) ?personLabel ?personDesc
   (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?rperson),32) )) as ?link) WHERE {
{ SELECT ?month_int ?month ?day_int (SAMPLE(?person) AS ?rperson) WHERE {
?month wdt:P31 wd:Q47018901; wdt:P1545 ?month_ordinal. # These lines generate a calendar from January 1 to December 31
?day p:P361 [ps:P361 ?month; pq:P1545 ?day_ordinal ].
 BIND(xsd:integer(?month_ordinal) AS ?month_int)
 BIND(xsd:integer(?day_ordinal) AS ?day_int)
OPTIONAL {
# Define the people we're interested in
{?person wdt:P69 wd:Q34433 } UNION {?person wdt:P69/wdt:P31 wd:Q2581649 } # educated at Oxford or an Oxford college
?person wdt:P21 wd:Q6581072 ; # female
   p:P569/psv:P569 ?date_node. # birth date
?date_node wikibase:timePrecision \"11\"^^xsd:integer ; # birth date has specific day
   wikibase:timeValue ?birthdate .        
filter(DAY(?birthdate)=?day_int) filter (MONTH(?birthdate)=?month_int )
}
} GROUP BY ?month_int ?month ?day_int }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
?rperson rdfs:label ?personLabel. ?rperson schema:description ?personDesc. ?month rdfs:label ?monthLabel }
} ORDER BY ?month_int ?day_int
 Try it! Samples with coordinates to illustrate maps Items around with user location #defaultView:Map{\"layer\":\"?instance_ofLabel\"}
SELECT ?place ?placeLabel ?image ?coordinate_location ?dist ?instance_of ?instance_ofLabel WHERE {
  SERVICE wikibase:around {
    ?place wdt:P625 ?coordinate_location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\".
    bd:serviceParam wikibase:distance ?dist.
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?place wdt:P18 ?image. }
  OPTIONAL { ?place wdt:P31 ?instance_of. }
}
 Try it! Locations of national parks #defaultView:Map
SELECT ?objectLabel ?objectDescription ?link ?coord
WHERE {
  ?object wdt:P31/wdt:P279? wd:Q46169 .
          OPTIONAL { ?object wdt:P856 ?link. } 
          OPTIONAL { ?object wdt:P625 ?coord . }
          SERVICE wikibase:label {
               bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\"
          }
}
 Try it! Airports within 100km of Berlin #added before 2016-10

#defaultView:Map
SELECT ?place ?placeLabel ?location
WHERE
{
  # Berlin coordinates
  wd:Q64 wdt:P625 ?berlinLoc .
  SERVICE wikibase:around {
    ?place wdt:P625 ?location .
    bd:serviceParam wikibase:center ?berlinLoc .
    bd:serviceParam wikibase:radius \"100\" .
  } .
  # Is an airport
  FILTER EXISTS { ?place wdt:P31/wdt:P279* wd:Q1248784 } .
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
  } 
}
 Try it! Airports in Belgium #List of airports in Belgium
#defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor
WHERE {
  ?airport wdt:P31 wd:Q1248784 ;
          ?range wd:Q31;
          wdt:P625 ?coor.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! International airports named after women # Airports named after women
# List of airports that are named after women
# Written by WiseWoman auf der #wmdemv 2019
# defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor ?namedafterLabel
WHERE {
  ?airport wdt:P31 wd:Q644371 ;  
          # ?range wd:Q183;
          wdt:P625 ?coor.
  ?airport wdt:P138 ?namedafter .
  ?namedafter wdt:P31 wd:Q5 .
  ?namedafter wdt:P21 wd:Q6581072 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Schools between San Jose, CA and Sacramento, CA The following query uses these:Items: San Jose (Q16553)   , Sacramento (Q18013)   , school (Q3914)   Properties: coordinate location (P625)   , instance of (P31)   , subclass of (P279)    Features: map (Q24515275)   , wikibase:box (Q26211169)   , wikibase:box with West and East corners (Q26211177)  # Schools between San Jose, CA and Sacramento, CA
#defaultView:Map
SELECT *
WHERE
{ hint:Query hint:optimizer \"None\" .
  wd:Q16553 wdt:P625 ?SJloc .
  wd:Q18013 wdt:P625 ?SCloc .
  SERVICE wikibase:box {
      ?place wdt:P625 ?location .
      bd:serviceParam wikibase:cornerWest ?SJloc .
      bd:serviceParam wikibase:cornerEast ?SCloc .
    }
  ?place wdt:P31/wdt:P279* wd:Q3914 .
} Try it! Big cities, grouped into map layers by population #defaultView:Map
SELECT DISTINCT ?city ?cityLabel (SAMPLE(?location) AS ?location) (MAX(?population) AS ?population) (SAMPLE(?layer) AS ?layer)
WHERE
{
  ?city wdt:P31/wdt:P279* wd:Q515;
        wdt:P625 ?location;
        wdt:P1082 ?population.
  FILTER(?population >= 500000).
  BIND(
    IF(?population < 1000000, \"<1M\",
    IF(?population < 2000000, \"1M-2M\",
    IF(?population < 5000000, \"2M-5M\",
    IF(?population < 10000000, \"5M-10M\",
    IF(?population < 20000000, \"10M-20M\",
    \">20M\")))))
    AS ?layer).
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?city ?cityLabel
 Try it! Places with free wifi #defaultView:Map
# Places with free wi-fi
SELECT ?item ?itemLabel (SAMPLE(?coord) AS ?coord)
WHERE {
	?item wdt:P2848 wd:Q1543615 ;  # wi-fi gratis
	      wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} GROUP BY ?item ?itemLabel
 Try it! Basic map of U1 subway stations in Berlin #added before 2016-10
#defaultView:Map
SELECT ?stationLabel ?coord
WHERE {
	?station wdt:P81 wd:Q99691 ;
		 wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\" }
}
 Try it! Advanced map of Stockholm Metro (Q272926) Map of Stockholm Metro (query) Locations of universities in Cameroon #added before 2016-10
#defaultView:Map
SELECT ?universityLabel ?universityDescription ?website ?coord
WHERE {
	?university wdt:P31/wdt:P279* wd:Q3918 ;
		wdt:P17 wd:Q1009 ;
		wdt:P625 ?coord .
	OPTIONAL {
		?university wdt:P856 ?website
	}
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"en,de\" .
	}
}
 Try it! Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany #added before 2016-10
 #defaultView:Map
SELECT ?item ?itemLabel ?coord
WHERE
{
	?item wdt:P31/wdt:P279* wd:Q486972;
    	      wdt:P17 wd:Q183;
    	      rdfs:label ?itemLabel;
    	      wdt:P625 ?coord;
    	 FILTER (lang(?itemLabel) = \"de\") .
    	 FILTER regex (?itemLabel, \"(ow|itz)$\").
}
 Try it! Locations of power stations #defaultView:Map
SELECT DISTINCT ?objectLabel ?coord ?layer
WHERE
{
  ?object wdt:P31/wdt:P279* wd:Q159719;
     wdt:P625 ?coord.
  ?object wdt:P31 ?type. ?type wdt:P279* wd:Q159719.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?type rdfs:label ?layer }
}
 Try it! Locations of stone arch bridges #defaultView:Map
SELECT ?label ?coord ?place ?image
WHERE {
	?place wdt:P31 wd:Q14276458 ;  # instance of deck arch bridge
            wdt:P186 wd:Q22731 ;  # made of stone
            wdt:P625 ?coord .
	OPTIONAL { ?place wdt:P18 ?image }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?place rdfs:label ?label }
}
 Try it! Locations of aqueducts #defaultView:Map
SELECT ?place ?placeLabel ?coord ?layer
WHERE {
   ?place wdt:P31/wdt:P279? wd:Q474 ; # instance of aqueduct
          wdt:P625 ?coord ;
          wdt:P31 ?type.
  ?type wdt:P279* wd:Q474
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                       ?type rdfs:label ?layer}
}
 Try it! Locations of archaeological sites, with images #defaultView:Map
SELECT ?siteLabel ?coord ?image ?site
WHERE {
   ?site wdt:P31/wdt:P279* wd:Q839954 ;
      wdt:P625 ?coord ;
      wdt:P18 ?image .
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Locations of castles that are also archaeological sites #defaultView:Map
SELECT ?label ?coord ?subj
WHERE {
   ?subj wdt:P31 wd:Q839954 ; # instance of archaeological site
         wdt:P31/wdt:P279* wd:Q23413 ;  # instance or subclass of castle
         wdt:P625 ?coord .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?subj rdfs:label ?label}
}
 Try it! Locations of battles #added before 2016-10
#defaultView:Map
SELECT ?label ?coord ?subj ?year
WHERE
{
	?subj wdt:P31 wd:Q178561 .
	?subj wdt:P625 ?coord .
	OPTIONAL {?subj wdt:P580 ?d1}
	OPTIONAL {?subj wdt:P585 ?d2}
  	OPTIONAL {?subj wdt:P582 ?d3}
	BIND(IF(!BOUND(?d1),(IF(!BOUND(?d2),?d3,?d2)),?d1) as ?date)
	BIND(YEAR(?date) as ?year)
	?subj rdfs:label ?label filter (lang(?label) = \"en\")
}
 Try it! Places of worship #added before 2016-10

#defaultView:Map
SELECT ?item ?itemLabel ?_coordinate_location ?_image WHERE {
  ?item wdt:P31/wdt:P279* wd:Q1370598.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
   ?item wdt:P625 ?_coordinate_location.
  ?item wdt:P18 ?_image.
}
 Try it! All museums (including subclass of museum) in Washington, D.C. with coordinates #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?name ?coord ?lat ?lon
WHERE {
   hint:Query hint:optimizer \"None\" .
   ?item wdt:P131* wd:Q61 .
   ?item wdt:P31/wdt:P279* wd:Q33506 .
   ?item wdt:P625 ?coord .
   ?item p:P625 ?coordinate .
   ?coordinate psv:P625 ?coordinate_node .
   ?coordinate_node wikibase:geoLatitude ?lat .
   ?coordinate_node wikibase:geoLongitude ?lon .
   SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
    ?item rdfs:label ?name
   }
}
ORDER BY ASC (?name)
 Try it! Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) #defaultView:Map
select ?museum ?museumLabel ?layer (sample(?location) as ?location) where {
  ?museum wdt:P31/wdt:P279* wd:Q33506;
          wdt:P17 wd:Q55;
          wdt:P625 ?location.
  optional { ?museum wdt:P2851 ?layer. }
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} group by ?museum ?museumLabel ?layer
 Try it! All ski resorts with coordinates #defaultView:Map
SELECT ?item ?itemLabel ?coord #?lat ?lon
WHERE
{
   ?item               wdt:P31        wd:Q130003.
   ?item               wdt:P625         ?coord.

#  ?item                 p:P625         ?statementnode.
#  ?statementnode      psv:P625         ?valuenode.
#  ?valuenode     wikibase:geoLatitude  ?lat.
#  ?valuenode     wikibase:geoLongitude ?lon.

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Lighthouses in Norway #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?coords ?image
WHERE {
	?item wdt:P31 wd:Q39715 ;
          wdt:P17 wd:Q20 ;
          wdt:P625 ?coords
	OPTIONAL { ?item wdt:P18 ?image } 
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],nb,nn,en,fi\"  } 
}
ORDER BY ?itemLabel
 Try it! Most beautiful villages of France #defaultView:Map
SELECT ?item ?itemLabel ?geoLocation ?image
WHERE {
    ?item wdt:P463 wd:Q1010307 ;  # member of Les Plus Beaux Villages de France (organisation)
          wdt:P625 ?geoLocation .
    OPTIONAL { ?item wdt:P18 ?image }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" }
}
 Try it! Locations in Fiji This query shows a way of mapping locations which span the 180th meridian, without the points being split between the left and right edges of the map. #defaultView:Map
select ?item ?coords_ where {
  ?item wdt:P17 wd:Q712 .
  ?item p:P625/psv:P625 ?coords .
  ?coords wikibase:geoLatitude ?lat ;
          wikibase:geoLongitude ?lon .
  bind(strdt(concat(\"Point(\", if((?lon < 0), str(?lon + 360), str(?lon)), \" \", str(?lat), \")\"), geo:wktLiteral) as ?coords_) .
} limit 1000
 Try it! Map of disasters, color-coded by disaster type Map of disasters color-coded by disaster type #defaultView:Map{\"layer\":\"?typeLabel\"}
SELECT ?item ?itemLabel ?geo ?type ?typeLabel (SAMPLE(?_image) AS ?image) WHERE {
  ?type wdt:P279* wd:Q3839081 .
  ?item wdt:P31 ?type ;
        wdt:P625 ?geo .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image }
}
GROUP BY ?item ?itemLabel ?geo ?type ?typeLabel
 Try it! Monuments and other heritage items located 1 km around the users location #defaultView:Map
select distinct ?monument ?monumentLabel ?heritageLabel (sample(?distance) as ?distance) (sample(?location) as ?location) (sample(?image) as ?image) where {
  ?monument wdt:P1435 ?heritage.
  
  service wikibase:around {   
    ?monument wdt:P625 ?location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\" . 
    bd:serviceParam wikibase:distance ?distance .
  }
  
  optional {
    ?monument wdt:P18 ?image.
  }
  
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,nl\". }
} group by ?monument ?monumentLabel ?heritageLabel order by ?distance
 Try it! Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article Map of newspapers in the United States by presence of the template Infobox newspaper in their English Wikipedia article integrates a text search for the template's name using the MediaWiki API into a SPARQL query #defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?id ?coords ?article ?rgb WHERE {
 ?c wdt:P279* wd:Q11032 .
  ?item wdt:P31 ?c .
 ?item wdt:P17|wdt:P495 wd:Q30 .
 OPTIONAL{?item wdt:P5454 ?id .}
 ?item wdt:P291 ?place .
 ?place wdt:P625 ?coords.
 OPTIONAL {   
   SELECT ?item ?pageid ?ns WHERE {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam mwapi:generator \"search\" .
      bd:serviceParam mwapi:gsrsearch \"hastemplate:\\\"infobox newspaper\\\"\" .
      bd:serviceParam mwapi:gsrlimit \"max\" .
      ?item wikibase:apiOutputItem mwapi:item .
      ?pageid wikibase:apiOutput \"@pageid\" .
      ?ns wikibase:apiOutput \"@ns\" .
    }
  } LIMIT 15000
 }
    
  OPTIONAL {
      ?article schema:about ?item .
      ?article schema:inLanguage \"en\" .
      FILTER (SUBSTR(str(?article), 1, 25) = \"https://en.wikipedia.org/\")
  }

  BIND( IF(BOUND(?article),   IF(BOUND(?ns), \"009500\" , \"FFF000\" )  ,  \"FF0000\"   )  AS ?rgb).  
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
 Try it! List of all the lakes in Cameroon The following query uses these:Items: lake (Q23397)   , Cameroon (Q1009)   Properties: instance of (P31)   , subclass of (P279)   , country (P17)   , coordinate location (P625)   , image (P18)    Features: map (Q24515275)  """@en,
    """Other languages: English Nederlands Türkçe español français svenska українська հայերեն 中文 日本語 Contents 1 Uppvisningsfrågor 1.1 Största städer med kvinnlig borgmästare 1.2 Lista över länder sorterade efter antalet städer med kvinnlig borgmästare 1.3 Populära efternamn bland människor 1.4 Förnamn med flest varianter 1.5 Populära efternamn bland fiktiva karaktärer 1.6 Kvinnor med flest webbplatslänkar utan bilder födda 1921 eller senare 1.7 Vem fyller år idag? 1.8 Hitta John och Sarah Connor 1.9 Data över Douglas Adams 1.10 Data över Douglas Adams (modifierad version) 1.11 Data över Barbara Harris - grupperad efter objekt 1.12 Folk som begravts på flera platser 1.13 All oldest living US ex-presidents in chronological order 1.14 Personer och institutioner som på något sätt har med rysk politik att göra 2 Avancerade sökfrågor 2.1 Bubbeldiagram 2.1.1 Övergripande dödsorsaker rankade 2.1.2 Stridslängd i andra världskriget 2.1.3 Topp 10 tyngsta människorna 2.1.4 Värden för uses (P2283) i vetenskapliga artiklar 2.2 Tidslinje 2.2.1 Tidslinje över rymdsonder 2.2.2 Tidslinje över kompositioner av Wolfgang Amadeus Mozart 2.3 Dimensioner 2.3.1 Dimensioner över element 2.4 Diagram 2.4.1 Djingis Khans barn 2.4.2 Patroner till handeldvapen och vad de baseras på 2.4.3 Musikgenrer 2.4.4 Grupper av karaktärer i Marvel-universumet 2.5 Linjediagram 2.5.1 Genomsnittliga antalet barn varje år 2.5.2 Befolkningen hos länder som gränsar till Tyskland 2.5.3 Befolkningen hos länder som gränsar till Kamerun 2.5.4 Antalet böcker efter år och genre 2.5.5 Antalet band efter år och genre 2.6 Stapeldiagram 2.6.1 Slag per år per land de senaste 80 åren 2.6.2 Slag per år per kontinent och land de senaste 80 åren (animerat) 2.6.3 Årlig befolkning staplad efter land 2.6.4 Byggda kraftverk per år per land 2.6.5 Barkarta över målningar producerade per år av Piet Mondrian 2.6.6 Barkarta med fördelningen av manliga och kvinnliga skapare av offentlig konst i Nijmegen i Nederländerna 2.7 Areadiagram 2.7.1 Cancerdödsfall per år och cancertyp 2.8 Träd 2.8.1 Kontinenter, länder, regioner och huvudstäder 2.8.2 Kompositörer från Wien och deras kompositioner efter tonalitet 2.9 Trädkarta 2.9.1 Populära TV-serier (i trädvy) 2.9.2 Kända personer kategoriserade efter ögon- och hårfärg 2.10 Spridningsdiagram 2.10.1 Antalet filmer efter år och genre 2.11 Kalendrar 2.11.1 Födelsedagskalender för kvinnor som studerat på Oxford Universitet 2.12 Exempel med koordinater för att illustrera kartor 2.12.1 Objekt runt omkring med användarens plats 2.12.2 Platser med nationalparker 2.12.3 Flygplatser inom 100 km från Berlin 2.12.4 Flygplatser i Belgien 2.12.5 Internationella flygplatser döpta efter kvinnor 2.12.6 Skolor mellan San Jose, CA och Sacramento, CA 2.12.7 Stora städer, grupperade i kartlager efter befolkning 2.12.8 Platser med gratis wifi 2.12.9 Grundläggande karta över U1-tunnelbanestationer i Berlin 2.12.10 Avancerad karta över Stockholm Metro (Q272926) 2.12.11 Platser med universitet i Kamerun 2.12.12 Utspridning av platsnamn som slutar på \"-ow\" eller \"-itz\" i Tyskland 2.12.13 Platser med kraftverk 2.12.14 Platser med bågbroar i sten 2.12.15 Platser med akvedukter 2.12.16 Platser för arkeologiska utgrävningar, med bilder 2.12.17 Platser med slott som också är arkeologiska utgrävningar 2.12.18 Stridsplatser 2.12.19 Platser för tillbedjan 2.12.20 Alla museer (inklusive underklasser av museer) i Washington, D.C. med koordinater 2.12.21 Karta över museer i Nederländerna med en färg som anger att de accepterar Museumkaart (Q2237462) 2.12.22 Alla skidorter med koordinater 2.12.23 Fyrar i Norge 2.12.24 Vackraste byarna i Frankrike 2.12.25 Platser i Fiji 2.12.26 Karta över olyckor, färgkodade efter olyckstyp 2.12.27 Kulturminnen och andra minnesmärkta objekt inom 1 km från användarens plats 2.12.28 Karta över nyhetstidningar i USA efter närvaron av Infobox newspaper i deras artkel på engelskspråkiga Wikipedia 2.12.29 Lista över alla sjöar i Kamerun 2.13 Listeria 2.13.1 Kvinnor födda i Wales utan artikel på kymriska för Listeria 2.13.2 Folk födda i Occitanien för Listeria 2.13.3 Folk födda i Skottland för Listeria 2.14 Hämta tillämpningsutspridning 2.14.1 Djingis Khans barn 2.15 Exempel 2.15.1 Vetenskapliga artiklar utan beskrivning 2.16 Mediawiki-API 2.16.1 Filtrera etiketter med EntitySearch från mwapi-tjänsten för att erbjuda fullständig textsökning 2.16.2 Använd mwapi för att basera en sökfråga på artiklar i en Wikipediakategori 2.16.3 Hitta uttalanden med referenser med externa länkar till wipo.int 2.16.4 Hitta metadata som konstnär och licens för en bild 2.16.5 Hämtar sidvisningar för alla artiklar i en kategori 2.17 Federation 2.17.1 Hämta toppnivåegenskaper för Helsingfors universitets huvudbyggnad från OpenStreetMat 2.17.2 Hämta information för Europeana-objekt 2.17.3 Andelen förnybar energi i elektricitet 2.17.4 Hämta OpenStreetMap-noder med enaresamisk etikett på Wikipedia men utan enaresamisk etikett i OSM 3 Sökfrågor som är användbara för externa tjänster 3.1 De bäst rankade egenskaperna och värdena för ett visst objekt Uppvisningsfrågor Dessa sökfrågor visar kraften och funktionaliteten hos SPARQL och WDQS GUI. Största städer med kvinnlig borgmästare #added before 2016-10
#TEMPLATE={\"template\":\"Largest ?c with ?sex head of government\",\"variables\":{\"?sex\":{\"query\":\" SELECT ?id WHERE { ?id wdt:P31 wd:Q48264 .  } \"},\"?c\":{\"query\":\"SELECT DISTINCT ?id WHERE {  ?c wdt:P31 ?id.  ?c p:P6 ?mayor. }\"} } }
SELECT DISTINCT ?city ?cityLabel ?mayor ?mayorLabel
WHERE
{
  BIND(wd:Q6581072 AS ?sex)
  BIND(wd:Q515 AS ?c)

	?city wdt:P31/wdt:P279* ?c .  # find instances of subclasses of city
	?city p:P6 ?statement .            # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .          # ... that has the value ?mayor
	?mayor wdt:P21 ?sex .       # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	
	# Now select the population value of the ?city
	# (wdt: properties use only statements of \"preferred\" rank if any, usually meaning \"current population\")
	?city wdt:P1082 ?population .
	# Optionally, find English labels for city and mayor:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
	}
}
ORDER BY DESC(?population)
LIMIT 10
 Try it! Lista över länder sorterade efter antalet städer med kvinnlig borgmästare #added before 2016-10
SELECT ?country ?countryLabel (count(*) AS ?count)
WHERE
{
	?city wdt:P31/wdt:P279* wd:Q515 . # find instances of subclasses of city
	?city p:P6 ?statement .           # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .         # ... that has the value ?mayor
	?mayor wdt:P21 wd:Q6581072 .      # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	?city wdt:P17 ?country .          # Also find the country of the city
 	
	# If available, get the \"ru\" label of the country, use \"en\" as fallback:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"ru,en\" .
	}
}
GROUP BY ?country ?countryLabel
ORDER BY DESC(?count)
LIMIT 100
 Try it! Populära efternamn bland människor #defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?human) AS ?count) WHERE {
    # ?human wdt:P31 wd:Q5.
      ?human wdt:P734 ?surname.
    }
    GROUP BY ?surname ORDER BY DESC(?count) LIMIT 100
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} 
ORDER BY DESC(?count)
 Try it! Förnamn med flest varianter #added before 2016-10

SELECT ?name ?nameLabel (COUNT(?otherName) AS ?count)
WHERE
{
  ?name wdt:P31 wd:Q202444;
        wdt:P460 ?otherName.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?name ?nameLabel
ORDER BY DESC(?count)
LIMIT 10
 Try it! Populära efternamn bland fiktiva karaktärer #added before 2016-10

#defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?person) AS ?count) WHERE {
      ?person (wdt:P31/wdt:P279*) wd:Q95074.
      ?person wdt:P734 ?surname.
    }
    GROUP BY ?surname
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?count)
LIMIT 100
 Try it! Kvinnor med flest webbplatslänkar utan bilder födda 1921 eller senare SELECT ?s ?desc ?linkcount
WHERE
{
  ?s wdt:P31 wd:Q5 ;   # human
     wdt:P21 wd:Q6581072 ;  # gender: female
     wdt:P569 ?born .
  FILTER (?born >= \"1921-01-01T00:00:00Z\"^^xsd:dateTime) .
  ?s wikibase:sitelinks ?linkcount .
  MINUS {
    ?s wdt:P18 []  # exclude if there is an image
  }
?s rdfs:label ?desc FILTER(lang(?desc)=\"en\").
}
GROUP BY ?s ?desc ?linkcount
ORDER BY DESC(?linkcount)
LIMIT 50
 Try it! Vem fyller år idag? #Whose birthday is today?
SELECT ?entity ?entityLabel ?entityDescription (YEAR(?date) as ?year)
WHERE {
    BIND(MONTH(NOW()) AS ?nowMonth)
    BIND(DAY(NOW()) AS ?nowDay)
    ?entity wdt:P569 ?date .
    FILTER (MONTH(?date) = ?nowMonth && DAY(?date) = ?nowDay)

SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }   
}
LIMIT 20
 Try it! Hitta John och Sarah Connor #added before 2016-10
 SELECT * WHERE {
  ?p wdt:P1080 wd:Q620588 . # from fictional universe: Terminator
  ?p rdfs:label ?pl .
  FILTER (lang(?pl) = \"en\")
  ?p wdt:P25 ?m .  # ?m is mother of ?p
  ?m rdfs:label ?ml .
  FILTER (lang(?ml) = \"en\")
}
 Try it! Data över Douglas Adams #added before 2016-10

PREFIX entity: <http://www.wikidata.org/entity/>
#partial results

SELECT ?propUrl ?propLabel ?valUrl ?valLabel ?picture
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"identity\"@en AS ?propLabel ) .
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel
	}
	
  	?valUrl rdfs:label ?valLabel
	FILTER (LANG(?valLabel) = 'en') .
	OPTIONAL{ ?valUrl wdt:P18 ?picture .}
	FILTER (lang(?propLabel) = 'en' )
}
ORDER BY ?propUrl ?valUrl
LIMIT 200
 Try it! Data över Douglas Adams (modifierad version) PREFIX entity: <http://www.wikidata.org/entity/>

#  In addition to the original query this one comes with some advantages:
#  - You will get only literals as results, (even if the values are stored as IRI in wikibase)
#  - That means you will also get properties as birth date, alphanumeric identifier and so on.
#  - The list is ordered numerically by property number. (So P19 comes before P100) 
#  - All label, altLabel and description in a given Language are included.
#  You may open a separate column ?valUrl if you need also the IRI
#
#  Please advise, if there is an option to put the Q-Number  and/or the Language 
#  code into a runtime variable. 

SELECT ?propNumber ?propLabel ?val
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"Name\"@de AS ?propLabel ) .
       entity:Q42 rdfs:label ?val .
      
        FILTER (LANG(?val) = \"de\") 
	}
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"AltLabel\"@de AS ?propLabel ) .
        optional{entity:Q42 skos:altLabel ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"Beschreibung\"@de AS ?propLabel ) .
        optional{entity:Q42 schema:description ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
   	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' )
        filter  isliteral(?valUrl) 
        BIND(?valUrl AS ?val)
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' ) 
        filter  isIRI(?valUrl) 
        ?valUrl rdfs:label ?valLabel 
		FILTER (LANG(?valLabel) = \"de\") 
         BIND(CONCAT(?valLabel) AS ?val)
	}
        BIND( SUBSTR(str(?propUrl),38, 250) AS ?propNumber)
}
ORDER BY xsd:integer(?propNumber)
 Try it! Data över Barbara Harris - grupperad efter objekt # This query collects data related to entities on Barbara Harris. 
# It demonstrates collecting individual attributes and concatenating them for easier post processing. 

SELECT 
  ?item
(SAMPLE(?itemLabel) AS ?itemLabel) 
(SAMPLE(?itemDescription) AS ?itemDescription) 
  (SAMPLE(?pic) AS ?pic) 
(SAMPLE(?date_of_birth) AS ?date_of_birth) 
(GROUP_CONCAT(DISTINCT ?country_of_citizenship; SEPARATOR=\", \") AS ?country_of_citizenships)
(GROUP_CONCAT(DISTINCT ?country_of_citizenshipLabel; SEPARATOR=\", \") AS ?country_of_citizenshipLabels)

(GROUP_CONCAT(DISTINCT ?occupation; SEPARATOR=\", \") AS ?occupations)
(GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR=\", \") AS ?occupationLabels)

(GROUP_CONCAT(DISTINCT ?country; SEPARATOR=\", \") AS ?countries)
(GROUP_CONCAT(DISTINCT ?countryLabel; SEPARATOR=\", \") AS ?countryLabels)


WHERE {
  VALUES ?item {
    wd:Q269809
    wd:Q274590
    wd:Q24576851
    wd:Q807461
    wd:Q4858963
    wd:Q27954833
    wd:Q4859015
    wd:Q826930
  }
  OPTIONAL { ?item wdt:P18 ?pic. }
  OPTIONAL { ?item wdt:P27 ?country_of_citizenship. }
  OPTIONAL { ?item wdt:P106 ?occupation. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  OPTIONAL { ?item wdt:P31 ?instance_of. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
    ?item rdfs:label ?itemLabel.
    ?item rdfs:description ?itemDescription.
    ?country_of_citizenship rdfs:label ?country_of_citizenshipLabel.
    ?occupation rdfs:label ?occupationLabel.
    ?country rdfs:label ?countryLabel.
  }
}
GROUP BY ?item
 Try it! Folk som begravts på flera platser # This query collects burial places of individuals, and sorts them in decreasing order
SELECT ?human (COUNT(?place) AS ?count) WHERE {
  ?human wdt:P31 wd:Q5.
  ?human wdt:P119 ?place.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}
GROUP BY ?human 
ORDER BY DESC(?count)
 Try it! All oldest living US ex-presidents in chronological order # Added 2020-07
# All persons who have been the oldest living US ex-president with dates in chronological order
SELECT DISTINCT ?date ?president ?presidentLabel
WITH
{
  # Persons who is/were president of USA
  SELECT ?president ?presidentLabel ?president_enddate ?president_birthdate ?president_deathdate
  WHERE
  {
    ?president wdt:P31 wd:Q5.
    ?president p:P39 ?president_statement.
    ?president_statement ps:P39 wd:Q11696.
    ?president_statement pq:P582 ?president_enddate.
    ?president wdt:P569 ?president_birthdate.
    OPTIONAL { ?president wdt:P570 ?president_deathdate. }
    ?president rdfs:label ?presidentLabel.
    FILTER (LANG(?presidentLabel) = \"en\")
  }
} AS %presidents
WITH
{
  # Dates where who is oldest living expresident can change
  SELECT DISTINCT ?date
  WHERE
  {
    {
      INCLUDE %presidents
      BIND(?president_enddate + \"P1D\"^^xsd:duration AS ?date)
    }
    UNION
    {
      INCLUDE %presidents
      BIND(?president_deathdate + \"P1D\"^^xsd:duration AS ?date)
    }
  }
} AS %dates
WITH
{
  # Find the age for all living expresidents for each value of ?date
  SELECT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    INCLUDE %presidents
    FILTER (?president_enddate < ?date) # Must have become expresident
    FILTER IF(BOUND(?president_deathdate), ?president_deathdate >= ?date, true) # Must still be living
    BIND (?date - ?president_birthdate AS ?age)
  }
} AS %ages
WITH
{
  # Find the oldest age for a living expresident for each value of ?date
  SELECT ?date (MAX(?age) AS ?oldest)
  WHERE
  {
    INCLUDE %ages
  }
  GROUP BY ?date
} AS %oldest
WITH
{
  SELECT DISTINCT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    OPTIONAL
    {
      INCLUDE %ages
      INCLUDE %oldest
      FILTER (?age = ?oldest)
    }
  }
} AS %result
WHERE
{
  # A result is a change from the previous date if ?president's presidency ended the day before ?date,
  # or if an older expresident died the day before ?date. Filter out results that don't fulfill this.
  INCLUDE %result
  BIND (?date - \"P1D\"^^xsd:duration AS ?day_before)
  FILTER
  (
    ! BOUND(?president)||
    EXISTS
    {
      ?president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?day_before.
    } ||
    EXISTS
    {
      ?other_president wdt:P31 wd:Q5.
      ?other_president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?other_president_end.
      ?other_president wdt:P569 ?other_president_birthdate.
      ?other_president wdt:P570 ?day_before.
      FILTER (?other_president_birthdate < ?president_birthdate) # Other president is oldest
      FILTER (?other_president_end < ?day_before) # other president died as expresident
    }
  )
}
ORDER BY ?date
 Try it! Personer och institutioner som på något sätt har med rysk politik att göra # Added 2022-03
# people and institutions that have the affiliation attribute assigned to Russia 
select ?item ?itemLabel ?itemDescription where { ?item wdt:P1416 wd:Q159. SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } } limit 100
 Try it!  Avancerade sökfrågor Bubbeldiagram Övergripande dödsorsaker rankade #defaultView:BubbleChart
#TEMPLATE={\"template\":\"Overall causes of death ranking of ?thing \",\"variables\":{\"?thing\": {\"query\":\"SELECT ?id  (COUNT(?id) AS ?count) WHERE {  ?sub wdt:P509 ?y.  ?sub wdt:P31 ?id. } GROUP BY ?id \"} } }
SELECT ?cid ?cause (COUNT(*) AS ?count) WHERE {
  BIND(wd:Q5 AS ?thing)
  ?pid wdt:P31 ?thing;
      wdt:P509 ?cid.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?cid rdfs:label ?cause}
}
GROUP BY ?cid ?cause
ORDER BY DESC(?count) ?cause
 Try it! Stridslängd i andra världskriget #defaultView:BubbleChart
SELECT DISTINCT ?item ?itemLabel (?end - ?start AS ?duration)
WHERE
{
	?item wdt:P361* wd:Q362 ;
          wdt:P31/wdt:P279* wd:Q178561 ;
          wdt:P580 ?start ;
          wdt:P582 ?end .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Topp 10 tyngsta människorna #defaultView:BubbleChart
#TEMPLATE={ \"template\": \"The top 10 heaviest ?type \", \"variables\": { \"?type\": { \"query\": \"SELECT DISTINCT ?id WHERE { ?i wdt:P2067 ?v. ?i wdt:P31 ?id}\" } } }
SELECT ?item ?itemLabel ?mass
WHERE {
  {
    SELECT ?item ?mass WHERE {
      ?item wdt:P31 wd:Q5;
            p:P2067/psn:P2067/wikibase:quantityAmount ?mass.
    }
    ORDER BY DESC(?mass)
    LIMIT 10
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,fr,de\" }
}
 Try it! Värden för uses (P2283) i vetenskapliga artiklar # Values of \"uses\" used in scholarly articles
# Demonstrates how to turn off the optimizer and start with the lowest number of edges first.
#defaultView:BubbleChart
SELECT ?uses ?usesLabel (count(?item) as ?c)
WHERE 
{
  hint:Query hint:optimizer \"None\".
  ?item wdt:P2283 ?uses. # ~20,000 edges
  ?item wdt:P31 wd:Q13442814. # ~37M edges
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
group by ?uses ?usesLabel
order by desc(?c)
 Try it! Tidslinje Tidslinje över rymdsonder #defaultView:Timeline
SELECT ?item ?itemLabel ?launchdate (SAMPLE(?image) AS ?image)
WHERE
{
	?item wdt:P31 wd:Q26529 .
    ?item wdt:P619 ?launchdate .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
    OPTIONAL { ?item wdt:P18 ?image }
}
GROUP BY ?item ?itemLabel ?launchdate
 Try it! Tidslinje över kompositioner av Wolfgang Amadeus Mozart #defaultView:Timeline
SELECT DISTINCT ?item ?itemLabel ?catalog_code ?publication_date
WHERE {
	?item wdt:P86 wd:Q254 ; # composer: W. A. Mozart
          wdt:P528 ?catalog_code ;
          wdt:P577 ?publication_date .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Dimensioner Dimensioner över element #defaultView:Dimensions
SELECT ?elementLabel ?boiling_point ?melting_point ?electronegativity ?density ?mass WHERE {
?element wdt:P31 wd:Q11344;
   wdt:P2102 ?boiling_point;
   wdt:P2101 ?melting_point;
   wdt:P1108 ?electronegativity;
   wdt:P2054 ?density;
   wdt:P2067 ?mass.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
LIMIT 100
 Try it! Diagram Djingis Khans barn #defaultView:Graph
PREFIX gas: <http://www.bigdata.com/rdf/gas#>

SELECT ?item ?itemLabel ?pic ?linkTo
WHERE {
  SERVICE gas:service {
    gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;
                gas:in wd:Q720 ;
                gas:traversalDirection \"Forward\" ;
                gas:out ?item ;
                gas:out1 ?depth ;

                gas:maxIterations 4 ;
                gas:linkType wdt:P40 .
  }
  OPTIONAL { ?item wdt:P40 ?linkTo }
  OPTIONAL { ?item wdt:P18 ?pic }
  SERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Patroner till handeldvapen och vad de baseras på #Show firearms cartridges and which they are based on
#defaultView:Graph
SELECT 
?item ?itemLabel ?image 
?other ?otherLabel ?image2
WHERE
{
    ?item  wdt:P279+ wd:Q37144 .   # cartridges
    ?item  wdt:P144    ?other  .   # if the cartridge is based on another
    OPTIONAL {
      ?item  wdt:P18     ?image  .   # grab image
      ?other wdt:P18     ?image2 .   # grab image
    }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Musikgenrer #graph rendering could be slow due to large number of results

#defaultView:Graph
SELECT ?item ?itemLabel ?_image ?_subclass_of ?_subclass_ofLabel
WHERE {
  ?item wdt:P31 wd:Q188451;
        wdt:P279 ?_subclass_of.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image. }
}
 Try it! Grupper av karaktärer i Marvel-universumet #defaultView:Graph
SELECT ?char ?charLabel ?group ?groupLabel (\"7FFF00\" as ?rgb)
WHERE {
	?group wdt:P31 wd:Q14514600 ;  # group of fictional characters
          wdt:P1080 wd:Q931597.  # from Marvel universe
 ?char wdt:P463 ?group # member of group
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Linjediagram Genomsnittliga antalet barn varje år The following query uses these:Items: human (Q5)   Properties: instance of (P31)   , number of children (P1971)   , date of birth (P569)   #defaultView:LineChart
SELECT  (str(?year) AS ?year) (AVG( ?_number_of_children ) AS ?count) WHERE {
  ?item wdt:P31 wd:Q5.
  ?item wdt:P1971 ?_number_of_children.
  ?item wdt:P569 ?_date_of_birth.
  BIND( year(?_date_of_birth) as ?year ).
  FILTER( ?year > 1900)
}

GROUP BY ?year Try it! Befolkningen hos länder som gränsar till Tyskland #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q183;   # shares border with Germany
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Befolkningen hos länder som gränsar till Kamerun #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q1009;  # shares border with Cameroon
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Antalet böcker efter år och genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?genreLabel )  WHERE {
  ?item wdt:P31 wd:Q571;
        wdt:P577 ?_publication_date;
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?_genre rdfs:label ?genreLabel.}
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Antalet band efter år och genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count) (SAMPLE(?_genreLabel) AS ?_genreLabel) WHERE {
  ?item wdt:P31 wd:Q215380; # instance of: band
        wdt:P571 ?_date;   # inception
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_genre rdfs:label ?_genreLabel.}
  FILTER(?_date >= \"1960-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Stapeldiagram Slag per år per land de senaste 80 åren #defaultView:BarChart

SELECT(SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel)  WHERE {
  ?subj wdt:P31 wd:Q178561.  # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. }  # start time
  OPTIONAL { ?subj wdt:P585 ?d2. }  # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. }  # end time
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(STR(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.  # country of location of battle
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_country rdfs:label ?_countryLabel.}
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Slag per år per kontinent och land de senaste 80 åren (animerat) #defaultView:BarChart
SELECT (SAMPLE(?_continentLabel) AS ?continent) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel) (SAMPLE(?year) AS ?year)  WHERE {
  ?subj wdt:P31 wd:Q178561.        # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. } # start date
  OPTIONAL { ?subj wdt:P585 ?d2. } # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. } # end date
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(str(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.
  ?_country wdt:P30 ?_continent.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
       ?_country rdfs:label ?_countryLabel.
       ?_continent rdfs:label ?_continentLabel.}
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
}
GROUP BY ?year ?_country
 Try it! Årlig befolkning staplad efter land The following query uses these:Items: sovereign state (Q3624078)   , estimation (Q791801)   , census (Q39825)   Properties: instance of (P31)   , population (P1082)   , point in time (P585)   , determination method (P459)   #defaultView:BarChart
# male/female population _must_ not be added unqualified as total population (!)
# this is an error and should be fixed at the item using P1540 and P1539 instead
# (wrong query result may be a manifestation of such)
SELECT ?year (AVG(?pop) AS ?population) ?countryLabel
       (COUNT(*) AS ?number_of_chosen_sources) (SAMPLE(?method) AS ?a_source_of_those_chosen)
WHERE
{
  ?country wdt:P31 wd:Q3624078;#more useful than Q6256;
           p:P1082 ?popStatement .
  ?popStatement ps:P1082 ?pop;
                pq:P585 ?date .
  BIND(STR(YEAR(?date)) AS ?year)
  #FILTER ( (YEAR(?date)) >= 2000 ) 
  # IF multiple ?pop values per country per year exist, we prioritize by source
  #       census 1st, others 2nd, estimation(s) 3rd, unknown sources (none supplies P459) last
  # note: wikibase:rank won't help here: each year may have multiple statements for ?pop value
  #       rank:prefered is used for the best value (or values) of the latest or current year
  #       rank:normal may be justified for all of multiple ?pop values for a given year
  OPTIONAL { ?popStatement pq:P459 ?method. }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?d; pq:P459 ?estimate ].
             FILTER(STR(YEAR(?d)) = ?year). FILTER(?estimate = wd:Q791801). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?e; pq:P459 ?census ].
             FILTER(STR(YEAR(?e)) = ?year). FILTER(?census = wd:Q39825). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?f; pq:P459 ?other ].
             FILTER(STR(YEAR(?f)) = ?year). FILTER(?other != wd:Q39825 && ?other != wd:Q791801). }
  BIND(COALESCE( 
    IF(BOUND(?census), ?census, 1/0),
    IF(BOUND(?other), ?other, 1/0),
    IF(BOUND(?estimate), ?estimate, 1/0) ) AS ?pref_method).
  FILTER(IF(BOUND(?pref_method),?method = ?pref_method,true))
  # .. still need to group if multiple values per country per year exist and
  # - none is qualified with P459
  # - multiple ?estimate or multiple ?census (>1 value from same source)
  # - ?other yields more than one source (>1 values are better than optionally
  #                         supplied estimate, but no census source available)

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }               
}
GROUP BY ?year ?countryLabel
ORDER BY ?year ?countryLabel Try it! Byggda kraftverk per år per land #defaultView:BarChart
SELECT (SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?count) (SAMPLE(?_countryLabel) AS ?_countryLabel) WHERE {
  ?object wdt:P31/wdt:P279* wd:Q134447. # Power stations or subtypes
  BIND(STR(YEAR(?_inception)) AS ?year)
  ?object wdt:P571 ?_inception;
          wdt:P17 ?_country.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?_country rdfs:label ?_countryLabel. }
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Barkarta över målningar producerade per år av Piet Mondrian #defaultView:BarChart
SELECT ?year (COUNT(?year) as ?count) WHERE {
  ?painting wdt:P31 wd:Q3305213.
  ?painting wdt:P170 wd:Q151803.
  ?painting wdt:P571 ?inception.
  BIND(str(year(?inception)) AS ?year)
  OPTIONAL { ?painting wdt:P18 ?image. }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} GROUP BY ?year ?count ORDER BY ?year
 Try it! Barkarta med fördelningen av manliga och kvinnliga skapare av offentlig konst i Nijmegen i Nederländerna #defaultView:BarChart
select ?genderLabel (count(?gender) as ?genderCount) where {
  ?item wdt:P136 wd:Q557141;
        wdt:P131 wd:Q47887;
        wdt:P170 ?creator. 
    
  ?creator wdt:P21 ?gender.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} group by ?genderLabel ?genderCount
 Try it! Areadiagram Cancerdödsfall per år och cancertyp The following query uses these:Items: human (Q5)   , cancer (Q12078)   Properties: instance of (P31)   , cause of death (P509)   , date of death (P570)   , subclass of (P279)   #defaultView:AreaChart
SELECT ?cod (STR(SAMPLE(?yearOfDeath)) AS ?YEAR_Of_DEATH) (COUNT(*) AS ?NUMBER_OF_DEATHS) ?cause WHERE {
  ?pid wdt:P31 wd:Q5;  # instance of human
       wdt:P509 ?cod;  # cause of death
       wdt:P570 ?_date_of_death.
  ?cod wdt:P279* wd:Q12078.  # type of cancer
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                         ?cod rdfs:label ?cause. }
  BIND ( YEAR(?_date_of_death) AS ?yearOfDeath )
  FILTER( ?yearOfDeath > 1960 )
}
GROUP BY ?cod ?cause ?yearOfDeath Try it! Träd Kontinenter, länder, regioner och huvudstäder The following query uses these:Items: continent (Q5107)   , country (Q6256)   , city (Q515)   Properties: instance of (P31)   , continent (P30)   , contains the administrative territorial entity (P150)   , locator map image (P242)   , flag image (P41)   , capital (P36)   , image (P18)   , population (P1082)   , head of government (P6)   , twinned administrative body (P190)   , inception (P571)   , located in or next to body of water (P206)   , has part(s) (P527)   #defaultView:Tree
SELECT ?continent ?continentFlag ?continentLabel ?country ?countryLabel ?countryFlag ?region ?regionLabel ?regionFlag ?city ?cityLabel ?cityImage ?property ?propertyLabel ?value ?valueLabel WHERE {
  {
    SELECT * WHERE {
      ?continent wdt:P31 wd:Q5107.
      ?country wdt:P30 ?continent.
      ?country p:P31/ps:P31 wd:Q6256.
      ?country wdt:P150 ?region.
      OPTIONAL {
        ?continent wdt:P242 ?continentFlag.
        ?country wdt:P41 ?countryFlag.
        ?region wdt:P41 ?regionFlag.
      }
      OPTIONAL {
        ?region wdt:P36 ?city.
        ?city wdt:P31 wd:Q515.
        ?city wdt:P18 ?cityImage.
        OPTIONAL {
          VALUES (?prop) {
            (wdt:P1082)
            (wdt:P6)
            (wdt:P190)
            (wdt:P31)
            (wdt:P571)
            (wdt:P150)
            (wdt:P206)
            (wdt:P527)
          }
          ?city ?prop ?value.
          ?property ?ref ?prop.
          ?property rdf:type wikibase:Property.
        }
      }
    }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Kompositörer från Wien och deras kompositioner efter tonalitet The following query uses these:Items: human (Q5)   , Vienna (Q1741)   Properties: instance of (P31)   , place of birth (P19)   , place of death (P20)   , residence (P551)   , image (P18)   , composer (P86)   , tonality (P826)   #defaultView:Tree
SELECT ?composer ?composerLabel ?composerImage ?tonality ?tonalityLabel ?composition ?compositionLabel WHERE {
  ?composer wdt:P31 wd:Q5;
            wdt:P19|wdt:P20|wdt:P551 wd:Q1741.
  OPTIONAL { ?composer wdt:P18 ?composerImage. }
  ?composition wdt:P86 ?composer;
               wdt:P826 ?tonality.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de-at,de\". }
}
ORDER BY ?composerLabel ?tonalityLabel Try it! Trädkarta Populära TV-serier (i trädvy) #added before 2016-10

#defaultView:TreeMap
SELECT ?show ?showLabel  ?season ?cleanSeasonLabel ?episode ?episodeLabel
WHERE
{
	{
		BIND(wd:Q886 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-23) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	} 
	UNION
	{
		BIND(wd:Q16538 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-20) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}  
	UNION
	{
		BIND(wd:Q147235 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(CONCAT(\"S\", SUBSTR(?_seasonLabel, 25)) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}

	SERVICE wikibase:label {  bd:serviceParam wikibase:language \"en\" }
}
 Try it! Kända personer kategoriserade efter ögon- och hårfärg #defaultView:TreeMap
SELECT ?eyes ?hairColorLabel (COUNT(?person) as ?count)
WHERE
{
	?person wdt:P1340 ?eyeColor.
    ?person wdt:P1884 ?hairColor.
    ?person wdt:P2048 ?height.
    ?eyeColor rdfs:label ?_eyeColorLabel.
    FILTER((LANG(?_eyeColorLabel)) = \"en\")
    BIND(CONCAT(?_eyeColorLabel, \" eyes\") AS ?eyes)
   
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
GROUP BY ?eyes ?hairColorLabel
 Try it! Spridningsdiagram Antalet filmer efter år och genre The following query uses these:Items: film (Q11424)   Properties: instance of (P31)   , publication date (P577)   , genre (P136)   #defaultView:ScatterChart
SELECT   ?year  (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?label )  (?year as ?year_shown) WHERE {
  ?item wdt:P31 wd:Q11424.
  ?item wdt:P577 ?_publication_date.
  ?item wdt:P136 ?_genre.
  ?_genre rdfs:label ?_genreLabel.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  FILTER((LANG(?_genreLabel)) = \"en\")
 
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 30) Try it! Kalendrar Födelsedagskalender för kvinnor som studerat på Oxford Universitet SELECT ?monthLabel (?day_int as ?d) ?personLabel ?personDesc
   (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?rperson),32) )) as ?link) WHERE {
{ SELECT ?month_int ?month ?day_int (SAMPLE(?person) AS ?rperson) WHERE {
?month wdt:P31 wd:Q47018901; wdt:P1545 ?month_ordinal. # These lines generate a calendar from January 1 to December 31
?day p:P361 [ps:P361 ?month; pq:P1545 ?day_ordinal ].
 BIND(xsd:integer(?month_ordinal) AS ?month_int)
 BIND(xsd:integer(?day_ordinal) AS ?day_int)
OPTIONAL {
# Define the people we're interested in
{?person wdt:P69 wd:Q34433 } UNION {?person wdt:P69/wdt:P31 wd:Q2581649 } # educated at Oxford or an Oxford college
?person wdt:P21 wd:Q6581072 ; # female
   p:P569/psv:P569 ?date_node. # birth date
?date_node wikibase:timePrecision \"11\"^^xsd:integer ; # birth date has specific day
   wikibase:timeValue ?birthdate .        
filter(DAY(?birthdate)=?day_int) filter (MONTH(?birthdate)=?month_int )
}
} GROUP BY ?month_int ?month ?day_int }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
?rperson rdfs:label ?personLabel. ?rperson schema:description ?personDesc. ?month rdfs:label ?monthLabel }
} ORDER BY ?month_int ?day_int
 Try it! Exempel med koordinater för att illustrera kartor Objekt runt omkring med användarens plats #defaultView:Map{\"layer\":\"?instance_ofLabel\"}
SELECT ?place ?placeLabel ?image ?coordinate_location ?dist ?instance_of ?instance_ofLabel WHERE {
  SERVICE wikibase:around {
    ?place wdt:P625 ?coordinate_location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\".
    bd:serviceParam wikibase:distance ?dist.
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?place wdt:P18 ?image. }
  OPTIONAL { ?place wdt:P31 ?instance_of. }
}
 Try it! Platser med nationalparker #defaultView:Map
SELECT ?objectLabel ?objectDescription ?link ?coord
WHERE {
  ?object wdt:P31/wdt:P279? wd:Q46169 .
          OPTIONAL { ?object wdt:P856 ?link. } 
          OPTIONAL { ?object wdt:P625 ?coord . }
          SERVICE wikibase:label {
               bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\"
          }
}
 Try it! Flygplatser inom 100 km från Berlin #added before 2016-10

#defaultView:Map
SELECT ?place ?placeLabel ?location
WHERE
{
  # Berlin coordinates
  wd:Q64 wdt:P625 ?berlinLoc .
  SERVICE wikibase:around {
    ?place wdt:P625 ?location .
    bd:serviceParam wikibase:center ?berlinLoc .
    bd:serviceParam wikibase:radius \"100\" .
  } .
  # Is an airport
  FILTER EXISTS { ?place wdt:P31/wdt:P279* wd:Q1248784 } .
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
  } 
}
 Try it! Flygplatser i Belgien #List of airports in Belgium
#defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor
WHERE {
  ?airport wdt:P31 wd:Q1248784 ;
          ?range wd:Q31;
          wdt:P625 ?coor.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Internationella flygplatser döpta efter kvinnor # Airports named after women
# List of airports that are named after women
# Written by WiseWoman auf der #wmdemv 2019
# defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor ?namedafterLabel
WHERE {
  ?airport wdt:P31 wd:Q644371 ;  
          # ?range wd:Q183;
          wdt:P625 ?coor.
  ?airport wdt:P138 ?namedafter .
  ?namedafter wdt:P31 wd:Q5 .
  ?namedafter wdt:P21 wd:Q6581072 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Skolor mellan San Jose, CA och Sacramento, CA The following query uses these:Items: San Jose (Q16553)   , Sacramento (Q18013)   , school (Q3914)   Properties: coordinate location (P625)   , instance of (P31)   , subclass of (P279)    Features: map (Q24515275)   , wikibase:box (Q26211169)   , wikibase:box with West and East corners (Q26211177)  # Schools between San Jose, CA and Sacramento, CA
#defaultView:Map
SELECT *
WHERE
{ hint:Query hint:optimizer \"None\" .
  wd:Q16553 wdt:P625 ?SJloc .
  wd:Q18013 wdt:P625 ?SCloc .
  SERVICE wikibase:box {
      ?place wdt:P625 ?location .
      bd:serviceParam wikibase:cornerWest ?SJloc .
      bd:serviceParam wikibase:cornerEast ?SCloc .
    }
  ?place wdt:P31/wdt:P279* wd:Q3914 .
} Try it! Stora städer, grupperade i kartlager efter befolkning #defaultView:Map
SELECT DISTINCT ?city ?cityLabel (SAMPLE(?location) AS ?location) (MAX(?population) AS ?population) (SAMPLE(?layer) AS ?layer)
WHERE
{
  ?city wdt:P31/wdt:P279* wd:Q515;
        wdt:P625 ?location;
        wdt:P1082 ?population.
  FILTER(?population >= 500000).
  BIND(
    IF(?population < 1000000, \"<1M\",
    IF(?population < 2000000, \"1M-2M\",
    IF(?population < 5000000, \"2M-5M\",
    IF(?population < 10000000, \"5M-10M\",
    IF(?population < 20000000, \"10M-20M\",
    \">20M\")))))
    AS ?layer).
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?city ?cityLabel
 Try it! Platser med gratis wifi #defaultView:Map
# Places with free wi-fi
SELECT ?item ?itemLabel (SAMPLE(?coord) AS ?coord)
WHERE {
	?item wdt:P2848 wd:Q1543615 ;  # wi-fi gratis
	      wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} GROUP BY ?item ?itemLabel
 Try it! Grundläggande karta över U1-tunnelbanestationer i Berlin #added before 2016-10
#defaultView:Map
SELECT ?stationLabel ?coord
WHERE {
	?station wdt:P81 wd:Q99691 ;
		 wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\" }
}
 Try it! Avancerad karta över Stockholm Metro (Q272926) Map of Stockholm Metro (query) Platser med universitet i Kamerun #added before 2016-10
#defaultView:Map
SELECT ?universityLabel ?universityDescription ?website ?coord
WHERE {
	?university wdt:P31/wdt:P279* wd:Q3918 ;
		wdt:P17 wd:Q1009 ;
		wdt:P625 ?coord .
	OPTIONAL {
		?university wdt:P856 ?website
	}
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"en,de\" .
	}
}
 Try it! Utspridning av platsnamn som slutar på \"-ow\" eller \"-itz\" i Tyskland #added before 2016-10
 #defaultView:Map
SELECT ?item ?itemLabel ?coord
WHERE
{
	?item wdt:P31/wdt:P279* wd:Q486972;
    	      wdt:P17 wd:Q183;
    	      rdfs:label ?itemLabel;
    	      wdt:P625 ?coord;
    	 FILTER (lang(?itemLabel) = \"de\") .
    	 FILTER regex (?itemLabel, \"(ow|itz)$\").
}
 Try it! Platser med kraftverk #defaultView:Map
SELECT DISTINCT ?objectLabel ?coord ?layer
WHERE
{
  ?object wdt:P31/wdt:P279* wd:Q159719;
     wdt:P625 ?coord.
  ?object wdt:P31 ?type. ?type wdt:P279* wd:Q159719.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?type rdfs:label ?layer }
}
 Try it! Platser med bågbroar i sten #defaultView:Map
SELECT ?label ?coord ?place ?image
WHERE {
	?place wdt:P31 wd:Q14276458 ;  # instance of deck arch bridge
            wdt:P186 wd:Q22731 ;  # made of stone
            wdt:P625 ?coord .
	OPTIONAL { ?place wdt:P18 ?image }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?place rdfs:label ?label }
}
 Try it! Platser med akvedukter #defaultView:Map
SELECT ?place ?placeLabel ?coord ?layer
WHERE {
   ?place wdt:P31/wdt:P279? wd:Q474 ; # instance of aqueduct
          wdt:P625 ?coord ;
          wdt:P31 ?type.
  ?type wdt:P279* wd:Q474
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                       ?type rdfs:label ?layer}
}
 Try it! Platser för arkeologiska utgrävningar, med bilder #defaultView:Map
SELECT ?siteLabel ?coord ?image ?site
WHERE {
   ?site wdt:P31/wdt:P279* wd:Q839954 ;
      wdt:P625 ?coord ;
      wdt:P18 ?image .
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Platser med slott som också är arkeologiska utgrävningar #defaultView:Map
SELECT ?label ?coord ?subj
WHERE {
   ?subj wdt:P31 wd:Q839954 ; # instance of archaeological site
         wdt:P31/wdt:P279* wd:Q23413 ;  # instance or subclass of castle
         wdt:P625 ?coord .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?subj rdfs:label ?label}
}
 Try it! Stridsplatser #added before 2016-10
#defaultView:Map
SELECT ?label ?coord ?subj ?year
WHERE
{
	?subj wdt:P31 wd:Q178561 .
	?subj wdt:P625 ?coord .
	OPTIONAL {?subj wdt:P580 ?d1}
	OPTIONAL {?subj wdt:P585 ?d2}
  	OPTIONAL {?subj wdt:P582 ?d3}
	BIND(IF(!BOUND(?d1),(IF(!BOUND(?d2),?d3,?d2)),?d1) as ?date)
	BIND(YEAR(?date) as ?year)
	?subj rdfs:label ?label filter (lang(?label) = \"en\")
}
 Try it! Platser för tillbedjan #added before 2016-10

#defaultView:Map
SELECT ?item ?itemLabel ?_coordinate_location ?_image WHERE {
  ?item wdt:P31/wdt:P279* wd:Q1370598.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
   ?item wdt:P625 ?_coordinate_location.
  ?item wdt:P18 ?_image.
}
 Try it! Alla museer (inklusive underklasser av museer) i Washington, D.C. med koordinater #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?name ?coord ?lat ?lon
WHERE {
   hint:Query hint:optimizer \"None\" .
   ?item wdt:P131* wd:Q61 .
   ?item wdt:P31/wdt:P279* wd:Q33506 .
   ?item wdt:P625 ?coord .
   ?item p:P625 ?coordinate .
   ?coordinate psv:P625 ?coordinate_node .
   ?coordinate_node wikibase:geoLatitude ?lat .
   ?coordinate_node wikibase:geoLongitude ?lon .
   SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
    ?item rdfs:label ?name
   }
}
ORDER BY ASC (?name)
 Try it! Karta över museer i Nederländerna med en färg som anger att de accepterar Museumkaart (Q2237462) #defaultView:Map
select ?museum ?museumLabel ?layer (sample(?location) as ?location) where {
  ?museum wdt:P31/wdt:P279* wd:Q33506;
          wdt:P17 wd:Q55;
          wdt:P625 ?location.
  optional { ?museum wdt:P2851 ?layer. }
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} group by ?museum ?museumLabel ?layer
 Try it! Alla skidorter med koordinater #defaultView:Map
SELECT ?item ?itemLabel ?coord #?lat ?lon
WHERE
{
   ?item               wdt:P31        wd:Q130003.
   ?item               wdt:P625         ?coord.

#  ?item                 p:P625         ?statementnode.
#  ?statementnode      psv:P625         ?valuenode.
#  ?valuenode     wikibase:geoLatitude  ?lat.
#  ?valuenode     wikibase:geoLongitude ?lon.

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Fyrar i Norge #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?coords ?image
WHERE {
	?item wdt:P31 wd:Q39715 ;
          wdt:P17 wd:Q20 ;
          wdt:P625 ?coords
	OPTIONAL { ?item wdt:P18 ?image } 
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],nb,nn,en,fi\"  } 
}
ORDER BY ?itemLabel
 Try it! Vackraste byarna i Frankrike #defaultView:Map
SELECT ?item ?itemLabel ?geoLocation ?image
WHERE {
    ?item wdt:P463 wd:Q1010307 ;  # member of Les Plus Beaux Villages de France (organisation)
          wdt:P625 ?geoLocation .
    OPTIONAL { ?item wdt:P18 ?image }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" }
}
 Try it! Platser i Fiji This query shows a way of mapping locations which span the 180th meridian, without the points being split between the left and right edges of the map. #defaultView:Map
select ?item ?coords_ where {
  ?item wdt:P17 wd:Q712 .
  ?item p:P625/psv:P625 ?coords .
  ?coords wikibase:geoLatitude ?lat ;
          wikibase:geoLongitude ?lon .
  bind(strdt(concat(\"Point(\", if((?lon < 0), str(?lon + 360), str(?lon)), \" \", str(?lat), \")\"), geo:wktLiteral) as ?coords_) .
} limit 1000
 Try it! Karta över olyckor, färgkodade efter olyckstyp Karta över olyckor färgkodade efter olyckstyp #defaultView:Map{\"layer\":\"?typeLabel\"}
SELECT ?item ?itemLabel ?geo ?type ?typeLabel (SAMPLE(?_image) AS ?image) WHERE {
  ?type wdt:P279* wd:Q3839081 .
  ?item wdt:P31 ?type ;
        wdt:P625 ?geo .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image }
}
GROUP BY ?item ?itemLabel ?geo ?type ?typeLabel
 Try it! Kulturminnen och andra minnesmärkta objekt inom 1 km från användarens plats #defaultView:Map
select distinct ?monument ?monumentLabel ?heritageLabel (sample(?distance) as ?distance) (sample(?location) as ?location) (sample(?image) as ?image) where {
  ?monument wdt:P1435 ?heritage.
  
  service wikibase:around {   
    ?monument wdt:P625 ?location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\" . 
    bd:serviceParam wikibase:distance ?distance .
  }
  
  optional {
    ?monument wdt:P18 ?image.
  }
  
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,nl\". }
} group by ?monument ?monumentLabel ?heritageLabel order by ?distance
 Try it! Karta över nyhetstidningar i USA efter närvaron av Infobox newspaper i deras artkel på engelskspråkiga Wikipedia Map of newspapers in the United States by presence of the template Infobox newspaper in their English Wikipedia article integrates a text search for the template's name using the MediaWiki API into a SPARQL query #defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?id ?coords ?article ?rgb WHERE {
 ?c wdt:P279* wd:Q11032 .
  ?item wdt:P31 ?c .
 ?item wdt:P17|wdt:P495 wd:Q30 .
 OPTIONAL{?item wdt:P5454 ?id .}
 ?item wdt:P291 ?place .
 ?place wdt:P625 ?coords.
 OPTIONAL {   
   SELECT ?item ?pageid ?ns WHERE {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam mwapi:generator \"search\" .
      bd:serviceParam mwapi:gsrsearch \"hastemplate:\\\"infobox newspaper\\\"\" .
      bd:serviceParam mwapi:gsrlimit \"max\" .
      ?item wikibase:apiOutputItem mwapi:item .
      ?pageid wikibase:apiOutput \"@pageid\" .
      ?ns wikibase:apiOutput \"@ns\" .
    }
  } LIMIT 15000
 }
    
  OPTIONAL {
      ?article schema:about ?item .
      ?article schema:inLanguage \"en\" .
      FILTER (SUBSTR(str(?article), 1, 25) = \"https://en.wikipedia.org/\")
  }

  BIND( IF(BOUND(?article),   IF(BOUND(?ns), \"009500\" , \"FFF000\" )  ,  \"FF0000\"   )  AS ?rgb).  
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
 Try it! Lista över alla sjöar i Kamerun The following query uses these:Items: lake (Q23397)   , Cameroon (Q1009)   Properties: instance of (P31)   , subclass of (P279)   , country (P17)   , coordinate location (P625)   , image (P18)    Features: map (Q24515275)  """@en,
    """Other languages: English Nederlands Türkçe español français svenska українська հայերեն 中文 日本語 Contents 1 Showcase Queries 1.1 Largest cities with female mayor 1.2 List of countries ordered by the number of their cities with female mayor 1.3 Popular surnames among humans 1.4 Given names with most variations 1.5 Popular surnames among fictional characters 1.6 Women with most sitelinks and no image born in 1921 or later 1.7 Whose birthday is today? 1.8 Finding John and Sarah Connor 1.9 Data of Douglas Adams 1.10 Data of Douglas Adams (modified version) 1.11 Data of Barbara Harris - Grouped per item 1.12 People who have been buried in multiple places 1.13 All oldest living US ex-presidents in chronological order 1.14 Persons and institutions related in some way to Russian politics 2 Advanced Queries 2.1 Bubble charts 2.1.1 Overall causes of death ranking 2.1.2 WWII battle durations 2.1.3 The top 10 heaviest humans 2.1.4 Values of uses (P2283) in scholarly articles 2.2 Timeline 2.2.1 Timeline of space probes 2.2.2 Timeline of compositions by Wolfgang Amadeus Mozart 2.3 Dimensions 2.3.1 Dimensions of elements 2.4 Graph 2.4.1 Children of Genghis Khan 2.4.2 Firearms cartridges and which they are based on 2.4.3 Music genres 2.4.4 Groups of characters in the Marvel universe 2.5 Line chart 2.5.1 Average number of children per year 2.5.2 Population of countries sharing a border with Germany 2.5.3 Population of countries sharing a border with Cameroon 2.5.4 Number of books by year and genre 2.5.5 Number of bands by year and genre 2.6 Bar chart 2.6.1 Battles per year per country last 80 years 2.6.2 Battles per year per continent and country last 80 years (animated) 2.6.3 Yearly Population stacked by country 2.6.4 Built power plants per year per country 2.6.5 Bar chart of paintings produced per year by Piet Mondrian 2.6.6 Bar chart with ratio of male / female creators for public art in city of Nijmegen, the Netherlands 2.7 Area chart 2.7.1 Cancer deaths per year and cancer type 2.8 Tree 2.8.1 Continents, countries, regions and capitals 2.8.2 Viennese composers and their compositions by tonality 2.9 Treemap 2.9.1 Popular television series (in treeview) 2.9.2 Famous people categorised into eye and hair color 2.10 Scatter chart 2.10.1 Number of films by year and genre 2.11 Calendars 2.11.1 Calendar of birth dates of women who studied at the University of Oxford 2.12 Samples with coordinates to illustrate maps 2.12.1 Items around with user location 2.12.2 Locations of national parks 2.12.3 Airports within 100km of Berlin 2.12.4 Airports in Belgium 2.12.5 International airports named after women 2.12.6 Schools between San Jose, CA and Sacramento, CA 2.12.7 Big cities, grouped into map layers by population 2.12.8 Places with free wifi 2.12.9 Basic map of U1 subway stations in Berlin 2.12.10 Advanced map of Stockholm Metro (Q272926) 2.12.11 Locations of universities in Cameroon 2.12.12 Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany 2.12.13 Locations of power stations 2.12.14 Locations of stone arch bridges 2.12.15 Locations of aqueducts 2.12.16 Locations of archaeological sites, with images 2.12.17 Locations of castles that are also archaeological sites 2.12.18 Locations of battles 2.12.19 Places of worship 2.12.20 All museums (including subclass of museum) in Washington, D.C. with coordinates 2.12.21 Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) 2.12.22 All ski resorts with coordinates 2.12.23 Lighthouses in Norway 2.12.24 Most beautiful villages of France 2.12.25 Locations in Fiji 2.12.26 Map of disasters, color-coded by disaster type 2.12.27 Monuments and other heritage items located 1 km around the users location 2.12.28 Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article 2.12.29 List of all the lakes in Cameroon 2.13 Listeria 2.13.1 Women born in Wales without an article in Welsh for Listeria 2.13.2 People born in Occitania for Listeria 2.13.3 People born in Scotland for Listeria 2.14 Gather Apply Scatter 2.14.1 Children of Genghis Khan 2.15 Sampling 2.15.1 Scientific articles without any description 2.16 Mediawiki API 2.16.1 Filter labels using EntitySearch from mwapi service to provide Full Text Search 2.16.2 Using mwapi to base a query on articles in a Wikipedia category 2.16.3 Find statements with references containing external links to wipo.int 2.16.4 Find metadata like artist and license for an image 2.16.5 Getting pageviews for all articles in a category 2.17 Federation 2.17.1 Get OpenStreetMap top level properties of Helsinki University main building 2.17.2 Get information of Europeana item 2.17.3 Share of renewable energy in electricity 2.17.4 Get OpenStreetMap nodes with inarisami label in wikipedia but without inarisami label in OSM 3 Queries useful to external services 3.1 The best ranked properties and values of a given item Showcase Queries These queries show the power and functionality of SPARQL and WDQS GUI. Largest cities with female mayor #added before 2016-10
#TEMPLATE={\"template\":\"Largest ?c with ?sex head of government\",\"variables\":{\"?sex\":{\"query\":\" SELECT ?id WHERE { ?id wdt:P31 wd:Q48264 .  } \"},\"?c\":{\"query\":\"SELECT DISTINCT ?id WHERE {  ?c wdt:P31 ?id.  ?c p:P6 ?mayor. }\"} } }
SELECT DISTINCT ?city ?cityLabel ?mayor ?mayorLabel
WHERE
{
  BIND(wd:Q6581072 AS ?sex)
  BIND(wd:Q515 AS ?c)

	?city wdt:P31/wdt:P279* ?c .  # find instances of subclasses of city
	?city p:P6 ?statement .            # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .          # ... that has the value ?mayor
	?mayor wdt:P21 ?sex .       # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	
	# Now select the population value of the ?city
	# (wdt: properties use only statements of \"preferred\" rank if any, usually meaning \"current population\")
	?city wdt:P1082 ?population .
	# Optionally, find English labels for city and mayor:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
	}
}
ORDER BY DESC(?population)
LIMIT 10
 Try it! List of countries ordered by the number of their cities with female mayor #added before 2016-10
SELECT ?country ?countryLabel (count(*) AS ?count)
WHERE
{
	?city wdt:P31/wdt:P279* wd:Q515 . # find instances of subclasses of city
	?city p:P6 ?statement .           # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .         # ... that has the value ?mayor
	?mayor wdt:P21 wd:Q6581072 .      # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	?city wdt:P17 ?country .          # Also find the country of the city
 	
	# If available, get the \"ru\" label of the country, use \"en\" as fallback:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"ru,en\" .
	}
}
GROUP BY ?country ?countryLabel
ORDER BY DESC(?count)
LIMIT 100
 Try it! Popular surnames among humans #defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?human) AS ?count) WHERE {
    # ?human wdt:P31 wd:Q5.
      ?human wdt:P734 ?surname.
    }
    GROUP BY ?surname ORDER BY DESC(?count) LIMIT 100
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} 
ORDER BY DESC(?count)
 Try it! Given names with most variations #added before 2016-10

SELECT ?name ?nameLabel (COUNT(?otherName) AS ?count)
WHERE
{
  ?name wdt:P31 wd:Q202444;
        wdt:P460 ?otherName.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?name ?nameLabel
ORDER BY DESC(?count)
LIMIT 10
 Try it! Popular surnames among fictional characters #added before 2016-10

#defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?person) AS ?count) WHERE {
      ?person (wdt:P31/wdt:P279*) wd:Q95074.
      ?person wdt:P734 ?surname.
    }
    GROUP BY ?surname
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?count)
LIMIT 100
 Try it! Women with most sitelinks and no image born in 1921 or later SELECT ?s ?desc ?linkcount
WHERE
{
  ?s wdt:P31 wd:Q5 ;   # human
     wdt:P21 wd:Q6581072 ;  # gender: female
     wdt:P569 ?born .
  FILTER (?born >= \"1921-01-01T00:00:00Z\"^^xsd:dateTime) .
  ?s wikibase:sitelinks ?linkcount .
  MINUS {
    ?s wdt:P18 []  # exclude if there is an image
  }
?s rdfs:label ?desc FILTER(lang(?desc)=\"en\").
}
GROUP BY ?s ?desc ?linkcount
ORDER BY DESC(?linkcount)
LIMIT 50
 Try it! Whose birthday is today? #Whose birthday is today?
SELECT ?entity ?entityLabel ?entityDescription (YEAR(?date) as ?year)
WHERE {
    BIND(MONTH(NOW()) AS ?nowMonth)
    BIND(DAY(NOW()) AS ?nowDay)
    ?entity wdt:P569 ?date .
    FILTER (MONTH(?date) = ?nowMonth && DAY(?date) = ?nowDay)

SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }   
}
LIMIT 20
 Try it! Finding John and Sarah Connor #added before 2016-10
 SELECT * WHERE {
  ?p wdt:P1080 wd:Q620588 . # from fictional universe: Terminator
  ?p rdfs:label ?pl .
  FILTER (lang(?pl) = \"en\")
  ?p wdt:P25 ?m .  # ?m is mother of ?p
  ?m rdfs:label ?ml .
  FILTER (lang(?ml) = \"en\")
}
 Try it! Data of Douglas Adams #added before 2016-10

PREFIX entity: <http://www.wikidata.org/entity/>
#partial results

SELECT ?propUrl ?propLabel ?valUrl ?valLabel ?picture
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"identity\"@en AS ?propLabel ) .
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel
	}
	
  	?valUrl rdfs:label ?valLabel
	FILTER (LANG(?valLabel) = 'en') .
	OPTIONAL{ ?valUrl wdt:P18 ?picture .}
	FILTER (lang(?propLabel) = 'en' )
}
ORDER BY ?propUrl ?valUrl
LIMIT 200
 Try it! Data of Douglas Adams (modified version) PREFIX entity: <http://www.wikidata.org/entity/>

#  In addition to the original query this one comes with some advantages:
#  - You will get only literals as results, (even if the values are stored as IRI in wikibase)
#  - That means you will also get properties as birth date, alphanumeric identifier and so on.
#  - The list is ordered numerically by property number. (So P19 comes before P100) 
#  - All label, altLabel and description in a given Language are included.
#  You may open a separate column ?valUrl if you need also the IRI
#
#  Please advise, if there is an option to put the Q-Number  and/or the Language 
#  code into a runtime variable. 

SELECT ?propNumber ?propLabel ?val
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"Name\"@de AS ?propLabel ) .
       entity:Q42 rdfs:label ?val .
      
        FILTER (LANG(?val) = \"de\") 
	}
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"AltLabel\"@de AS ?propLabel ) .
        optional{entity:Q42 skos:altLabel ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"Beschreibung\"@de AS ?propLabel ) .
        optional{entity:Q42 schema:description ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
   	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' )
        filter  isliteral(?valUrl) 
        BIND(?valUrl AS ?val)
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' ) 
        filter  isIRI(?valUrl) 
        ?valUrl rdfs:label ?valLabel 
		FILTER (LANG(?valLabel) = \"de\") 
         BIND(CONCAT(?valLabel) AS ?val)
	}
        BIND( SUBSTR(str(?propUrl),38, 250) AS ?propNumber)
}
ORDER BY xsd:integer(?propNumber)
 Try it! Data of Barbara Harris - Grouped per item # This query collects data related to entities on Barbara Harris. 
# It demonstrates collecting individual attributes and concatenating them for easier post processing. 

SELECT 
  ?item
(SAMPLE(?itemLabel) AS ?itemLabel) 
(SAMPLE(?itemDescription) AS ?itemDescription) 
  (SAMPLE(?pic) AS ?pic) 
(SAMPLE(?date_of_birth) AS ?date_of_birth) 
(GROUP_CONCAT(DISTINCT ?country_of_citizenship; SEPARATOR=\", \") AS ?country_of_citizenships)
(GROUP_CONCAT(DISTINCT ?country_of_citizenshipLabel; SEPARATOR=\", \") AS ?country_of_citizenshipLabels)

(GROUP_CONCAT(DISTINCT ?occupation; SEPARATOR=\", \") AS ?occupations)
(GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR=\", \") AS ?occupationLabels)

(GROUP_CONCAT(DISTINCT ?country; SEPARATOR=\", \") AS ?countries)
(GROUP_CONCAT(DISTINCT ?countryLabel; SEPARATOR=\", \") AS ?countryLabels)


WHERE {
  VALUES ?item {
    wd:Q269809
    wd:Q274590
    wd:Q24576851
    wd:Q807461
    wd:Q4858963
    wd:Q27954833
    wd:Q4859015
    wd:Q826930
  }
  OPTIONAL { ?item wdt:P18 ?pic. }
  OPTIONAL { ?item wdt:P27 ?country_of_citizenship. }
  OPTIONAL { ?item wdt:P106 ?occupation. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  OPTIONAL { ?item wdt:P31 ?instance_of. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
    ?item rdfs:label ?itemLabel.
    ?item rdfs:description ?itemDescription.
    ?country_of_citizenship rdfs:label ?country_of_citizenshipLabel.
    ?occupation rdfs:label ?occupationLabel.
    ?country rdfs:label ?countryLabel.
  }
}
GROUP BY ?item
 Try it! People who have been buried in multiple places # This query collects burial places of individuals, and sorts them in decreasing order
SELECT ?human (COUNT(?place) AS ?count) WHERE {
  ?human wdt:P31 wd:Q5.
  ?human wdt:P119 ?place.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}
GROUP BY ?human 
ORDER BY DESC(?count)
 Try it! All oldest living US ex-presidents in chronological order # Added 2020-07
# All persons who have been the oldest living US ex-president with dates in chronological order
SELECT DISTINCT ?date ?president ?presidentLabel
WITH
{
  # Persons who is/were president of USA
  SELECT ?president ?presidentLabel ?president_enddate ?president_birthdate ?president_deathdate
  WHERE
  {
    ?president wdt:P31 wd:Q5.
    ?president p:P39 ?president_statement.
    ?president_statement ps:P39 wd:Q11696.
    ?president_statement pq:P582 ?president_enddate.
    ?president wdt:P569 ?president_birthdate.
    OPTIONAL { ?president wdt:P570 ?president_deathdate. }
    ?president rdfs:label ?presidentLabel.
    FILTER (LANG(?presidentLabel) = \"en\")
  }
} AS %presidents
WITH
{
  # Dates where who is oldest living expresident can change
  SELECT DISTINCT ?date
  WHERE
  {
    {
      INCLUDE %presidents
      BIND(?president_enddate + \"P1D\"^^xsd:duration AS ?date)
    }
    UNION
    {
      INCLUDE %presidents
      BIND(?president_deathdate + \"P1D\"^^xsd:duration AS ?date)
    }
  }
} AS %dates
WITH
{
  # Find the age for all living expresidents for each value of ?date
  SELECT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    INCLUDE %presidents
    FILTER (?president_enddate < ?date) # Must have become expresident
    FILTER IF(BOUND(?president_deathdate), ?president_deathdate >= ?date, true) # Must still be living
    BIND (?date - ?president_birthdate AS ?age)
  }
} AS %ages
WITH
{
  # Find the oldest age for a living expresident for each value of ?date
  SELECT ?date (MAX(?age) AS ?oldest)
  WHERE
  {
    INCLUDE %ages
  }
  GROUP BY ?date
} AS %oldest
WITH
{
  SELECT DISTINCT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    OPTIONAL
    {
      INCLUDE %ages
      INCLUDE %oldest
      FILTER (?age = ?oldest)
    }
  }
} AS %result
WHERE
{
  # A result is a change from the previous date if ?president's presidency ended the day before ?date,
  # or if an older expresident died the day before ?date. Filter out results that don't fulfill this.
  INCLUDE %result
  BIND (?date - \"P1D\"^^xsd:duration AS ?day_before)
  FILTER
  (
    ! BOUND(?president)||
    EXISTS
    {
      ?president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?day_before.
    } ||
    EXISTS
    {
      ?other_president wdt:P31 wd:Q5.
      ?other_president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?other_president_end.
      ?other_president wdt:P569 ?other_president_birthdate.
      ?other_president wdt:P570 ?day_before.
      FILTER (?other_president_birthdate < ?president_birthdate) # Other president is oldest
      FILTER (?other_president_end < ?day_before) # other president died as expresident
    }
  )
}
ORDER BY ?date
 Try it! Persons and institutions related in some way to Russian politics # Added 2022-03
# people and institutions that have the affiliation attribute assigned to Russia 
select ?item ?itemLabel ?itemDescription where { ?item wdt:P1416 wd:Q159. SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } } limit 100
 Try it!  Advanced Queries Bubble charts Overall causes of death ranking #defaultView:BubbleChart
#TEMPLATE={\"template\":\"Overall causes of death ranking of ?thing \",\"variables\":{\"?thing\": {\"query\":\"SELECT ?id  (COUNT(?id) AS ?count) WHERE {  ?sub wdt:P509 ?y.  ?sub wdt:P31 ?id. } GROUP BY ?id \"} } }
SELECT ?cid ?cause (COUNT(*) AS ?count) WHERE {
  BIND(wd:Q5 AS ?thing)
  ?pid wdt:P31 ?thing;
      wdt:P509 ?cid.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?cid rdfs:label ?cause}
}
GROUP BY ?cid ?cause
ORDER BY DESC(?count) ?cause
 Try it! WWII battle durations #defaultView:BubbleChart
SELECT DISTINCT ?item ?itemLabel (?end - ?start AS ?duration)
WHERE
{
	?item wdt:P361* wd:Q362 ;
          wdt:P31/wdt:P279* wd:Q178561 ;
          wdt:P580 ?start ;
          wdt:P582 ?end .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! The top 10 heaviest humans #defaultView:BubbleChart
#TEMPLATE={ \"template\": \"The top 10 heaviest ?type \", \"variables\": { \"?type\": { \"query\": \"SELECT DISTINCT ?id WHERE { ?i wdt:P2067 ?v. ?i wdt:P31 ?id}\" } } }
SELECT ?item ?itemLabel ?mass
WHERE {
  {
    SELECT ?item ?mass WHERE {
      ?item wdt:P31 wd:Q5;
            p:P2067/psn:P2067/wikibase:quantityAmount ?mass.
    }
    ORDER BY DESC(?mass)
    LIMIT 10
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,fr,de\" }
}
 Try it! Values of uses (P2283) in scholarly articles # Values of \"uses\" used in scholarly articles
# Demonstrates how to turn off the optimizer and start with the lowest number of edges first.
#defaultView:BubbleChart
SELECT ?uses ?usesLabel (count(?item) as ?c)
WHERE 
{
  hint:Query hint:optimizer \"None\".
  ?item wdt:P2283 ?uses. # ~20,000 edges
  ?item wdt:P31 wd:Q13442814. # ~37M edges
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
group by ?uses ?usesLabel
order by desc(?c)
 Try it! Timeline Timeline of space probes #defaultView:Timeline
SELECT ?item ?itemLabel ?launchdate (SAMPLE(?image) AS ?image)
WHERE
{
	?item wdt:P31 wd:Q26529 .
    ?item wdt:P619 ?launchdate .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
    OPTIONAL { ?item wdt:P18 ?image }
}
GROUP BY ?item ?itemLabel ?launchdate
 Try it! Timeline of compositions by Wolfgang Amadeus Mozart #defaultView:Timeline
SELECT DISTINCT ?item ?itemLabel ?catalog_code ?publication_date
WHERE {
	?item wdt:P86 wd:Q254 ; # composer: W. A. Mozart
          wdt:P528 ?catalog_code ;
          wdt:P577 ?publication_date .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Dimensions Dimensions of elements #defaultView:Dimensions
SELECT ?elementLabel ?boiling_point ?melting_point ?electronegativity ?density ?mass WHERE {
?element wdt:P31 wd:Q11344;
   wdt:P2102 ?boiling_point;
   wdt:P2101 ?melting_point;
   wdt:P1108 ?electronegativity;
   wdt:P2054 ?density;
   wdt:P2067 ?mass.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
LIMIT 100
 Try it! Graph Children of Genghis Khan #defaultView:Graph
PREFIX gas: <http://www.bigdata.com/rdf/gas#>

SELECT ?item ?itemLabel ?pic ?linkTo
WHERE {
  SERVICE gas:service {
    gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;
                gas:in wd:Q720 ;
                gas:traversalDirection \"Forward\" ;
                gas:out ?item ;
                gas:out1 ?depth ;

                gas:maxIterations 4 ;
                gas:linkType wdt:P40 .
  }
  OPTIONAL { ?item wdt:P40 ?linkTo }
  OPTIONAL { ?item wdt:P18 ?pic }
  SERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Firearms cartridges and which they are based on #Show firearms cartridges and which they are based on
#defaultView:Graph
SELECT 
?item ?itemLabel ?image 
?other ?otherLabel ?image2
WHERE
{
    ?item  wdt:P279+ wd:Q37144 .   # cartridges
    ?item  wdt:P144    ?other  .   # if the cartridge is based on another
    OPTIONAL {
      ?item  wdt:P18     ?image  .   # grab image
      ?other wdt:P18     ?image2 .   # grab image
    }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Music genres #graph rendering could be slow due to large number of results

#defaultView:Graph
SELECT ?item ?itemLabel ?_image ?_subclass_of ?_subclass_ofLabel
WHERE {
  ?item wdt:P31 wd:Q188451;
        wdt:P279 ?_subclass_of.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image. }
}
 Try it! Groups of characters in the Marvel universe #defaultView:Graph
SELECT ?char ?charLabel ?group ?groupLabel (\"7FFF00\" as ?rgb)
WHERE {
	?group wdt:P31 wd:Q14514600 ;  # group of fictional characters
          wdt:P1080 wd:Q931597.  # from Marvel universe
 ?char wdt:P463 ?group # member of group
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Line chart Average number of children per year The following query uses these:Items: human (Q5)   Properties: instance of (P31)   , number of children (P1971)   , date of birth (P569)   #defaultView:LineChart
SELECT  (str(?year) AS ?year) (AVG( ?_number_of_children ) AS ?count) WHERE {
  ?item wdt:P31 wd:Q5.
  ?item wdt:P1971 ?_number_of_children.
  ?item wdt:P569 ?_date_of_birth.
  BIND( year(?_date_of_birth) as ?year ).
  FILTER( ?year > 1900)
}

GROUP BY ?year Try it! Population of countries sharing a border with Germany #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q183;   # shares border with Germany
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Population of countries sharing a border with Cameroon #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q1009;  # shares border with Cameroon
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Number of books by year and genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?genreLabel )  WHERE {
  ?item wdt:P31 wd:Q571;
        wdt:P577 ?_publication_date;
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?_genre rdfs:label ?genreLabel.}
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Number of bands by year and genre #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count) (SAMPLE(?_genreLabel) AS ?_genreLabel) WHERE {
  ?item wdt:P31 wd:Q215380; # instance of: band
        wdt:P571 ?_date;   # inception
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_genre rdfs:label ?_genreLabel.}
  FILTER(?_date >= \"1960-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Bar chart Battles per year per country last 80 years #defaultView:BarChart

SELECT(SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel)  WHERE {
  ?subj wdt:P31 wd:Q178561.  # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. }  # start time
  OPTIONAL { ?subj wdt:P585 ?d2. }  # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. }  # end time
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(STR(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.  # country of location of battle
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_country rdfs:label ?_countryLabel.}
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Battles per year per continent and country last 80 years (animated) #defaultView:BarChart
SELECT (SAMPLE(?_continentLabel) AS ?continent) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel) (SAMPLE(?year) AS ?year)  WHERE {
  ?subj wdt:P31 wd:Q178561.        # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. } # start date
  OPTIONAL { ?subj wdt:P585 ?d2. } # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. } # end date
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(str(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.
  ?_country wdt:P30 ?_continent.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
       ?_country rdfs:label ?_countryLabel.
       ?_continent rdfs:label ?_continentLabel.}
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
}
GROUP BY ?year ?_country
 Try it! Yearly Population stacked by country The following query uses these:Items: sovereign state (Q3624078)   , estimation (Q791801)   , census (Q39825)   Properties: instance of (P31)   , population (P1082)   , point in time (P585)   , determination method (P459)   #defaultView:BarChart
# male/female population _must_ not be added unqualified as total population (!)
# this is an error and should be fixed at the item using P1540 and P1539 instead
# (wrong query result may be a manifestation of such)
SELECT ?year (AVG(?pop) AS ?population) ?countryLabel
       (COUNT(*) AS ?number_of_chosen_sources) (SAMPLE(?method) AS ?a_source_of_those_chosen)
WHERE
{
  ?country wdt:P31 wd:Q3624078;#more useful than Q6256;
           p:P1082 ?popStatement .
  ?popStatement ps:P1082 ?pop;
                pq:P585 ?date .
  BIND(STR(YEAR(?date)) AS ?year)
  #FILTER ( (YEAR(?date)) >= 2000 ) 
  # IF multiple ?pop values per country per year exist, we prioritize by source
  #       census 1st, others 2nd, estimation(s) 3rd, unknown sources (none supplies P459) last
  # note: wikibase:rank won't help here: each year may have multiple statements for ?pop value
  #       rank:prefered is used for the best value (or values) of the latest or current year
  #       rank:normal may be justified for all of multiple ?pop values for a given year
  OPTIONAL { ?popStatement pq:P459 ?method. }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?d; pq:P459 ?estimate ].
             FILTER(STR(YEAR(?d)) = ?year). FILTER(?estimate = wd:Q791801). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?e; pq:P459 ?census ].
             FILTER(STR(YEAR(?e)) = ?year). FILTER(?census = wd:Q39825). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?f; pq:P459 ?other ].
             FILTER(STR(YEAR(?f)) = ?year). FILTER(?other != wd:Q39825 && ?other != wd:Q791801). }
  BIND(COALESCE( 
    IF(BOUND(?census), ?census, 1/0),
    IF(BOUND(?other), ?other, 1/0),
    IF(BOUND(?estimate), ?estimate, 1/0) ) AS ?pref_method).
  FILTER(IF(BOUND(?pref_method),?method = ?pref_method,true))
  # .. still need to group if multiple values per country per year exist and
  # - none is qualified with P459
  # - multiple ?estimate or multiple ?census (>1 value from same source)
  # - ?other yields more than one source (>1 values are better than optionally
  #                         supplied estimate, but no census source available)

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }               
}
GROUP BY ?year ?countryLabel
ORDER BY ?year ?countryLabel Try it! Built power plants per year per country #defaultView:BarChart
SELECT (SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?count) (SAMPLE(?_countryLabel) AS ?_countryLabel) WHERE {
  ?object wdt:P31/wdt:P279* wd:Q134447. # Power stations or subtypes
  BIND(STR(YEAR(?_inception)) AS ?year)
  ?object wdt:P571 ?_inception;
          wdt:P17 ?_country.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?_country rdfs:label ?_countryLabel. }
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Bar chart of paintings produced per year by Piet Mondrian #defaultView:BarChart
SELECT ?year (COUNT(?year) as ?count) WHERE {
  ?painting wdt:P31 wd:Q3305213.
  ?painting wdt:P170 wd:Q151803.
  ?painting wdt:P571 ?inception.
  BIND(str(year(?inception)) AS ?year)
  OPTIONAL { ?painting wdt:P18 ?image. }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} GROUP BY ?year ?count ORDER BY ?year
 Try it! Bar chart with ratio of male / female creators for public art in city of Nijmegen, the Netherlands #defaultView:BarChart
select ?genderLabel (count(?gender) as ?genderCount) where {
  ?item wdt:P136 wd:Q557141;
        wdt:P131 wd:Q47887;
        wdt:P170 ?creator. 
    
  ?creator wdt:P21 ?gender.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} group by ?genderLabel ?genderCount
 Try it! Area chart Cancer deaths per year and cancer type The following query uses these:Items: human (Q5)   , cancer (Q12078)   Properties: instance of (P31)   , cause of death (P509)   , date of death (P570)   , subclass of (P279)   #defaultView:AreaChart
SELECT ?cod (STR(SAMPLE(?yearOfDeath)) AS ?YEAR_Of_DEATH) (COUNT(*) AS ?NUMBER_OF_DEATHS) ?cause WHERE {
  ?pid wdt:P31 wd:Q5;  # instance of human
       wdt:P509 ?cod;  # cause of death
       wdt:P570 ?_date_of_death.
  ?cod wdt:P279* wd:Q12078.  # type of cancer
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                         ?cod rdfs:label ?cause. }
  BIND ( YEAR(?_date_of_death) AS ?yearOfDeath )
  FILTER( ?yearOfDeath > 1960 )
}
GROUP BY ?cod ?cause ?yearOfDeath Try it! Tree Continents, countries, regions and capitals The following query uses these:Items: continent (Q5107)   , country (Q6256)   , city (Q515)   Properties: instance of (P31)   , continent (P30)   , contains the administrative territorial entity (P150)   , locator map image (P242)   , flag image (P41)   , capital (P36)   , image (P18)   , population (P1082)   , head of government (P6)   , twinned administrative body (P190)   , inception (P571)   , located in or next to body of water (P206)   , has part(s) (P527)   #defaultView:Tree
SELECT ?continent ?continentFlag ?continentLabel ?country ?countryLabel ?countryFlag ?region ?regionLabel ?regionFlag ?city ?cityLabel ?cityImage ?property ?propertyLabel ?value ?valueLabel WHERE {
  {
    SELECT * WHERE {
      ?continent wdt:P31 wd:Q5107.
      ?country wdt:P30 ?continent.
      ?country p:P31/ps:P31 wd:Q6256.
      ?country wdt:P150 ?region.
      OPTIONAL {
        ?continent wdt:P242 ?continentFlag.
        ?country wdt:P41 ?countryFlag.
        ?region wdt:P41 ?regionFlag.
      }
      OPTIONAL {
        ?region wdt:P36 ?city.
        ?city wdt:P31 wd:Q515.
        ?city wdt:P18 ?cityImage.
        OPTIONAL {
          VALUES (?prop) {
            (wdt:P1082)
            (wdt:P6)
            (wdt:P190)
            (wdt:P31)
            (wdt:P571)
            (wdt:P150)
            (wdt:P206)
            (wdt:P527)
          }
          ?city ?prop ?value.
          ?property ?ref ?prop.
          ?property rdf:type wikibase:Property.
        }
      }
    }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Viennese composers and their compositions by tonality The following query uses these:Items: human (Q5)   , Vienna (Q1741)   Properties: instance of (P31)   , place of birth (P19)   , place of death (P20)   , residence (P551)   , image (P18)   , composer (P86)   , tonality (P826)   #defaultView:Tree
SELECT ?composer ?composerLabel ?composerImage ?tonality ?tonalityLabel ?composition ?compositionLabel WHERE {
  ?composer wdt:P31 wd:Q5;
            wdt:P19|wdt:P20|wdt:P551 wd:Q1741.
  OPTIONAL { ?composer wdt:P18 ?composerImage. }
  ?composition wdt:P86 ?composer;
               wdt:P826 ?tonality.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de-at,de\". }
}
ORDER BY ?composerLabel ?tonalityLabel Try it! Treemap Popular television series (in treeview) #added before 2016-10

#defaultView:TreeMap
SELECT ?show ?showLabel  ?season ?cleanSeasonLabel ?episode ?episodeLabel
WHERE
{
	{
		BIND(wd:Q886 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-23) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	} 
	UNION
	{
		BIND(wd:Q16538 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-20) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}  
	UNION
	{
		BIND(wd:Q147235 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(CONCAT(\"S\", SUBSTR(?_seasonLabel, 25)) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}

	SERVICE wikibase:label {  bd:serviceParam wikibase:language \"en\" }
}
 Try it! Famous people categorised into eye and hair color #defaultView:TreeMap
SELECT ?eyes ?hairColorLabel (COUNT(?person) as ?count)
WHERE
{
	?person wdt:P1340 ?eyeColor.
    ?person wdt:P1884 ?hairColor.
    ?person wdt:P2048 ?height.
    ?eyeColor rdfs:label ?_eyeColorLabel.
    FILTER((LANG(?_eyeColorLabel)) = \"en\")
    BIND(CONCAT(?_eyeColorLabel, \" eyes\") AS ?eyes)
   
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
GROUP BY ?eyes ?hairColorLabel
 Try it! Scatter chart Number of films by year and genre The following query uses these:Items: film (Q11424)   Properties: instance of (P31)   , publication date (P577)   , genre (P136)   #defaultView:ScatterChart
SELECT   ?year  (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?label )  (?year as ?year_shown) WHERE {
  ?item wdt:P31 wd:Q11424.
  ?item wdt:P577 ?_publication_date.
  ?item wdt:P136 ?_genre.
  ?_genre rdfs:label ?_genreLabel.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  FILTER((LANG(?_genreLabel)) = \"en\")
 
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 30) Try it! Calendars Calendar of birth dates of women who studied at the University of Oxford SELECT ?monthLabel (?day_int as ?d) ?personLabel ?personDesc
   (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?rperson),32) )) as ?link) WHERE {
{ SELECT ?month_int ?month ?day_int (SAMPLE(?person) AS ?rperson) WHERE {
?month wdt:P31 wd:Q47018901; wdt:P1545 ?month_ordinal. # These lines generate a calendar from January 1 to December 31
?day p:P361 [ps:P361 ?month; pq:P1545 ?day_ordinal ].
 BIND(xsd:integer(?month_ordinal) AS ?month_int)
 BIND(xsd:integer(?day_ordinal) AS ?day_int)
OPTIONAL {
# Define the people we're interested in
{?person wdt:P69 wd:Q34433 } UNION {?person wdt:P69/wdt:P31 wd:Q2581649 } # educated at Oxford or an Oxford college
?person wdt:P21 wd:Q6581072 ; # female
   p:P569/psv:P569 ?date_node. # birth date
?date_node wikibase:timePrecision \"11\"^^xsd:integer ; # birth date has specific day
   wikibase:timeValue ?birthdate .        
filter(DAY(?birthdate)=?day_int) filter (MONTH(?birthdate)=?month_int )
}
} GROUP BY ?month_int ?month ?day_int }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
?rperson rdfs:label ?personLabel. ?rperson schema:description ?personDesc. ?month rdfs:label ?monthLabel }
} ORDER BY ?month_int ?day_int
 Try it! Samples with coordinates to illustrate maps Items around with user location #defaultView:Map{\"layer\":\"?instance_ofLabel\"}
SELECT ?place ?placeLabel ?image ?coordinate_location ?dist ?instance_of ?instance_ofLabel WHERE {
  SERVICE wikibase:around {
    ?place wdt:P625 ?coordinate_location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\".
    bd:serviceParam wikibase:distance ?dist.
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?place wdt:P18 ?image. }
  OPTIONAL { ?place wdt:P31 ?instance_of. }
}
 Try it! Locations of national parks #defaultView:Map
SELECT ?objectLabel ?objectDescription ?link ?coord
WHERE {
  ?object wdt:P31/wdt:P279? wd:Q46169 .
          OPTIONAL { ?object wdt:P856 ?link. } 
          OPTIONAL { ?object wdt:P625 ?coord . }
          SERVICE wikibase:label {
               bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\"
          }
}
 Try it! Airports within 100km of Berlin #added before 2016-10

#defaultView:Map
SELECT ?place ?placeLabel ?location
WHERE
{
  # Berlin coordinates
  wd:Q64 wdt:P625 ?berlinLoc .
  SERVICE wikibase:around {
    ?place wdt:P625 ?location .
    bd:serviceParam wikibase:center ?berlinLoc .
    bd:serviceParam wikibase:radius \"100\" .
  } .
  # Is an airport
  FILTER EXISTS { ?place wdt:P31/wdt:P279* wd:Q1248784 } .
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
  } 
}
 Try it! Airports in Belgium #List of airports in Belgium
#defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor
WHERE {
  ?airport wdt:P31 wd:Q1248784 ;
          ?range wd:Q31;
          wdt:P625 ?coor.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! International airports named after women # Airports named after women
# List of airports that are named after women
# Written by WiseWoman auf der #wmdemv 2019
# defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor ?namedafterLabel
WHERE {
  ?airport wdt:P31 wd:Q644371 ;  
          # ?range wd:Q183;
          wdt:P625 ?coor.
  ?airport wdt:P138 ?namedafter .
  ?namedafter wdt:P31 wd:Q5 .
  ?namedafter wdt:P21 wd:Q6581072 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Schools between San Jose, CA and Sacramento, CA The following query uses these:Items: San Jose (Q16553)   , Sacramento (Q18013)   , school (Q3914)   Properties: coordinate location (P625)   , instance of (P31)   , subclass of (P279)    Features: map (Q24515275)   , wikibase:box (Q26211169)   , wikibase:box with West and East corners (Q26211177)  # Schools between San Jose, CA and Sacramento, CA
#defaultView:Map
SELECT *
WHERE
{ hint:Query hint:optimizer \"None\" .
  wd:Q16553 wdt:P625 ?SJloc .
  wd:Q18013 wdt:P625 ?SCloc .
  SERVICE wikibase:box {
      ?place wdt:P625 ?location .
      bd:serviceParam wikibase:cornerWest ?SJloc .
      bd:serviceParam wikibase:cornerEast ?SCloc .
    }
  ?place wdt:P31/wdt:P279* wd:Q3914 .
} Try it! Big cities, grouped into map layers by population #defaultView:Map
SELECT DISTINCT ?city ?cityLabel (SAMPLE(?location) AS ?location) (MAX(?population) AS ?population) (SAMPLE(?layer) AS ?layer)
WHERE
{
  ?city wdt:P31/wdt:P279* wd:Q515;
        wdt:P625 ?location;
        wdt:P1082 ?population.
  FILTER(?population >= 500000).
  BIND(
    IF(?population < 1000000, \"<1M\",
    IF(?population < 2000000, \"1M-2M\",
    IF(?population < 5000000, \"2M-5M\",
    IF(?population < 10000000, \"5M-10M\",
    IF(?population < 20000000, \"10M-20M\",
    \">20M\")))))
    AS ?layer).
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?city ?cityLabel
 Try it! Places with free wifi #defaultView:Map
# Places with free wi-fi
SELECT ?item ?itemLabel (SAMPLE(?coord) AS ?coord)
WHERE {
	?item wdt:P2848 wd:Q1543615 ;  # wi-fi gratis
	      wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} GROUP BY ?item ?itemLabel
 Try it! Basic map of U1 subway stations in Berlin #added before 2016-10
#defaultView:Map
SELECT ?stationLabel ?coord
WHERE {
	?station wdt:P81 wd:Q99691 ;
		 wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\" }
}
 Try it! Advanced map of Stockholm Metro (Q272926) Map of Stockholm Metro (query) Locations of universities in Cameroon #added before 2016-10
#defaultView:Map
SELECT ?universityLabel ?universityDescription ?website ?coord
WHERE {
	?university wdt:P31/wdt:P279* wd:Q3918 ;
		wdt:P17 wd:Q1009 ;
		wdt:P625 ?coord .
	OPTIONAL {
		?university wdt:P856 ?website
	}
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"en,de\" .
	}
}
 Try it! Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany #added before 2016-10
 #defaultView:Map
SELECT ?item ?itemLabel ?coord
WHERE
{
	?item wdt:P31/wdt:P279* wd:Q486972;
    	      wdt:P17 wd:Q183;
    	      rdfs:label ?itemLabel;
    	      wdt:P625 ?coord;
    	 FILTER (lang(?itemLabel) = \"de\") .
    	 FILTER regex (?itemLabel, \"(ow|itz)$\").
}
 Try it! Locations of power stations #defaultView:Map
SELECT DISTINCT ?objectLabel ?coord ?layer
WHERE
{
  ?object wdt:P31/wdt:P279* wd:Q159719;
     wdt:P625 ?coord.
  ?object wdt:P31 ?type. ?type wdt:P279* wd:Q159719.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?type rdfs:label ?layer }
}
 Try it! Locations of stone arch bridges #defaultView:Map
SELECT ?label ?coord ?place ?image
WHERE {
	?place wdt:P31 wd:Q14276458 ;  # instance of deck arch bridge
            wdt:P186 wd:Q22731 ;  # made of stone
            wdt:P625 ?coord .
	OPTIONAL { ?place wdt:P18 ?image }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?place rdfs:label ?label }
}
 Try it! Locations of aqueducts #defaultView:Map
SELECT ?place ?placeLabel ?coord ?layer
WHERE {
   ?place wdt:P31/wdt:P279? wd:Q474 ; # instance of aqueduct
          wdt:P625 ?coord ;
          wdt:P31 ?type.
  ?type wdt:P279* wd:Q474
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                       ?type rdfs:label ?layer}
}
 Try it! Locations of archaeological sites, with images #defaultView:Map
SELECT ?siteLabel ?coord ?image ?site
WHERE {
   ?site wdt:P31/wdt:P279* wd:Q839954 ;
      wdt:P625 ?coord ;
      wdt:P18 ?image .
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Locations of castles that are also archaeological sites #defaultView:Map
SELECT ?label ?coord ?subj
WHERE {
   ?subj wdt:P31 wd:Q839954 ; # instance of archaeological site
         wdt:P31/wdt:P279* wd:Q23413 ;  # instance or subclass of castle
         wdt:P625 ?coord .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?subj rdfs:label ?label}
}
 Try it! Locations of battles #added before 2016-10
#defaultView:Map
SELECT ?label ?coord ?subj ?year
WHERE
{
	?subj wdt:P31 wd:Q178561 .
	?subj wdt:P625 ?coord .
	OPTIONAL {?subj wdt:P580 ?d1}
	OPTIONAL {?subj wdt:P585 ?d2}
  	OPTIONAL {?subj wdt:P582 ?d3}
	BIND(IF(!BOUND(?d1),(IF(!BOUND(?d2),?d3,?d2)),?d1) as ?date)
	BIND(YEAR(?date) as ?year)
	?subj rdfs:label ?label filter (lang(?label) = \"en\")
}
 Try it! Places of worship #added before 2016-10

#defaultView:Map
SELECT ?item ?itemLabel ?_coordinate_location ?_image WHERE {
  ?item wdt:P31/wdt:P279* wd:Q1370598.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
   ?item wdt:P625 ?_coordinate_location.
  ?item wdt:P18 ?_image.
}
 Try it! All museums (including subclass of museum) in Washington, D.C. with coordinates #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?name ?coord ?lat ?lon
WHERE {
   hint:Query hint:optimizer \"None\" .
   ?item wdt:P131* wd:Q61 .
   ?item wdt:P31/wdt:P279* wd:Q33506 .
   ?item wdt:P625 ?coord .
   ?item p:P625 ?coordinate .
   ?coordinate psv:P625 ?coordinate_node .
   ?coordinate_node wikibase:geoLatitude ?lat .
   ?coordinate_node wikibase:geoLongitude ?lon .
   SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
    ?item rdfs:label ?name
   }
}
ORDER BY ASC (?name)
 Try it! Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) #defaultView:Map
select ?museum ?museumLabel ?layer (sample(?location) as ?location) where {
  ?museum wdt:P31/wdt:P279* wd:Q33506;
          wdt:P17 wd:Q55;
          wdt:P625 ?location.
  optional { ?museum wdt:P2851 ?layer. }
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} group by ?museum ?museumLabel ?layer
 Try it! All ski resorts with coordinates #defaultView:Map
SELECT ?item ?itemLabel ?coord #?lat ?lon
WHERE
{
   ?item               wdt:P31        wd:Q130003.
   ?item               wdt:P625         ?coord.

#  ?item                 p:P625         ?statementnode.
#  ?statementnode      psv:P625         ?valuenode.
#  ?valuenode     wikibase:geoLatitude  ?lat.
#  ?valuenode     wikibase:geoLongitude ?lon.

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Lighthouses in Norway #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?coords ?image
WHERE {
	?item wdt:P31 wd:Q39715 ;
          wdt:P17 wd:Q20 ;
          wdt:P625 ?coords
	OPTIONAL { ?item wdt:P18 ?image } 
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],nb,nn,en,fi\"  } 
}
ORDER BY ?itemLabel
 Try it! Most beautiful villages of France #defaultView:Map
SELECT ?item ?itemLabel ?geoLocation ?image
WHERE {
    ?item wdt:P463 wd:Q1010307 ;  # member of Les Plus Beaux Villages de France (organisation)
          wdt:P625 ?geoLocation .
    OPTIONAL { ?item wdt:P18 ?image }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" }
}
 Try it! Locations in Fiji This query shows a way of mapping locations which span the 180th meridian, without the points being split between the left and right edges of the map. #defaultView:Map
select ?item ?coords_ where {
  ?item wdt:P17 wd:Q712 .
  ?item p:P625/psv:P625 ?coords .
  ?coords wikibase:geoLatitude ?lat ;
          wikibase:geoLongitude ?lon .
  bind(strdt(concat(\"Point(\", if((?lon < 0), str(?lon + 360), str(?lon)), \" \", str(?lat), \")\"), geo:wktLiteral) as ?coords_) .
} limit 1000
 Try it! Map of disasters, color-coded by disaster type Map of disasters color-coded by disaster type #defaultView:Map{\"layer\":\"?typeLabel\"}
SELECT ?item ?itemLabel ?geo ?type ?typeLabel (SAMPLE(?_image) AS ?image) WHERE {
  ?type wdt:P279* wd:Q3839081 .
  ?item wdt:P31 ?type ;
        wdt:P625 ?geo .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image }
}
GROUP BY ?item ?itemLabel ?geo ?type ?typeLabel
 Try it! Monuments and other heritage items located 1 km around the users location #defaultView:Map
select distinct ?monument ?monumentLabel ?heritageLabel (sample(?distance) as ?distance) (sample(?location) as ?location) (sample(?image) as ?image) where {
  ?monument wdt:P1435 ?heritage.
  
  service wikibase:around {   
    ?monument wdt:P625 ?location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\" . 
    bd:serviceParam wikibase:distance ?distance .
  }
  
  optional {
    ?monument wdt:P18 ?image.
  }
  
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,nl\". }
} group by ?monument ?monumentLabel ?heritageLabel order by ?distance
 Try it! Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article Map of newspapers in the United States by presence of the template Infobox newspaper in their English Wikipedia article integrates a text search for the template's name using the MediaWiki API into a SPARQL query #defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?id ?coords ?article ?rgb WHERE {
 ?c wdt:P279* wd:Q11032 .
  ?item wdt:P31 ?c .
 ?item wdt:P17|wdt:P495 wd:Q30 .
 OPTIONAL{?item wdt:P5454 ?id .}
 ?item wdt:P291 ?place .
 ?place wdt:P625 ?coords.
 OPTIONAL {   
   SELECT ?item ?pageid ?ns WHERE {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam mwapi:generator \"search\" .
      bd:serviceParam mwapi:gsrsearch \"hastemplate:\\\"infobox newspaper\\\"\" .
      bd:serviceParam mwapi:gsrlimit \"max\" .
      ?item wikibase:apiOutputItem mwapi:item .
      ?pageid wikibase:apiOutput \"@pageid\" .
      ?ns wikibase:apiOutput \"@ns\" .
    }
  } LIMIT 15000
 }
    
  OPTIONAL {
      ?article schema:about ?item .
      ?article schema:inLanguage \"en\" .
      FILTER (SUBSTR(str(?article), 1, 25) = \"https://en.wikipedia.org/\")
  }

  BIND( IF(BOUND(?article),   IF(BOUND(?ns), \"009500\" , \"FFF000\" )  ,  \"FF0000\"   )  AS ?rgb).  
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
 Try it! List of all the lakes in Cameroon The following query uses these:Items: lake (Q23397)   , Cameroon (Q1009)   Properties: instance of (P31)   , subclass of (P279)   , country (P17)   , coordinate location (P625)   , image (P18)    Features: map (Q24515275)  """@en,
    """Other languages: English Nederlands Türkçe español français svenska українська հայերեն 中文 日本語 Contents 1 Showcase Queries 1.1 Largest cities with female mayor 1.2 List of countries ordered by the number of their cities with female mayor 1.3 Popular surnames among humans 1.4 Given names with most variations 1.5 Popular surnames among fictional characters 1.6 Women with most sitelinks and no image born in 1921 or later 1.7 Whose birthday is today? 1.8 Finding John and Sarah Connor 1.9 Data of Douglas Adams 1.10 Data of Douglas Adams (modified version) 1.11 Data of Barbara Harris - Grouped per item 1.12 People who have been buried in multiple places 1.13 All oldest living US ex-presidents in chronological order 1.14 Persons and institutions related in some way to Russian politics 2 Advanced Queries 2.1 Bubble charts 2.1.1 Overall causes of death ranking 2.1.2 WWII battle durations 2.1.3 The top 10 heaviest humans 2.1.4 Values of uses (P2283) in scholarly articles 2.2 Timeline 2.2.1 Timeline of space probes 2.2.2 Timeline of compositions by Wolfgang Amadeus Mozart 2.3 Dimensions 2.3.1 Dimensions of elements 2.4 Graph 2.4.1 Children of Genghis Khan 2.4.2 Firearms cartridges and which they are based on 2.4.3 Music genres 2.4.4 Groups of characters in the Marvel universe 2.5 Line chart 2.5.1 Average number of children per year 2.5.2 Population of countries sharing a border with Germany 2.5.3 Population of countries sharing a border with Cameroon 2.5.4 Number of books by year and genre 2.5.5 Number of bands by year and genre 2.6 Bar chart 2.6.1 Battles per year per country last 80 years 2.6.2 Battles per year per continent and country last 80 years (animated) 2.6.3 Yearly Population stacked by country 2.6.4 Built power plants per year per country 2.6.5 Bar chart of paintings produced per year by Piet Mondrian 2.6.6 Bar chart with ratio of male / female creators for public art in city of Nijmegen, the Netherlands 2.7 Area chart 2.7.1 Cancer deaths per year and cancer type 2.8 Tree 2.8.1 Continents, countries, regions and capitals 2.8.2 Viennese composers and their compositions by tonality 2.9 Treemap 2.9.1 Popular television series (in treeview) 2.9.2 Famous people categorised into eye and hair color 2.10 Scatter chart 2.10.1 Number of films by year and genre 2.11 Calendars 2.11.1 Calendar of birth dates of women who studied at the University of Oxford 2.12 Samples with coordinates to illustrate maps 2.12.1 Items around with user location 2.12.2 Locations of national parks 2.12.3 Airports within 100km of Berlin 2.12.4 Airports in Belgium 2.12.5 International airports named after women 2.12.6 Schools between San Jose, CA and Sacramento, CA 2.12.7 Big cities, grouped into map layers by population 2.12.8 Places with free wifi 2.12.9 Basic map of U1 subway stations in Berlin 2.12.10 Advanced map of Stockholm Metro (Q272926) 2.12.11 Locations of universities in Cameroon 2.12.12 Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany 2.12.13 Locations of power stations 2.12.14 Locations of stone arch bridges 2.12.15 Locations of aqueducts 2.12.16 Locations of archaeological sites, with images 2.12.17 Locations of castles that are also archaeological sites 2.12.18 Locations of battles 2.12.19 Places of worship 2.12.20 All museums (including subclass of museum) in Washington, D.C. with coordinates 2.12.21 Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) 2.12.22 All ski resorts with coordinates 2.12.23 Lighthouses in Norway 2.12.24 Most beautiful villages of France 2.12.25 Locations in Fiji 2.12.26 Map of disasters, color-coded by disaster type 2.12.27 Monuments and other heritage items located 1 km around the users location 2.12.28 Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article 2.12.29 List of all the lakes in Cameroon 2.13 Listeria 2.13.1 Women born in Wales without an article in Welsh for Listeria 2.13.2 People born in Occitania for Listeria 2.13.3 People born in Scotland for Listeria 2.14 Gather Apply Scatter 2.14.1 Children of Genghis Khan 2.15 Sampling 2.15.1 Scientific articles without any description 2.16 Mediawiki API 2.16.1 Filter labels using EntitySearch from mwapi service to provide Full Text Search 2.16.2 Using mwapi to base a query on articles in a Wikipedia category 2.16.3 Find statements with references containing external links to wipo.int 2.16.4 Find metadata like artist and license for an image 2.16.5 Getting pageviews for all articles in a category 2.17 Federation 2.17.1 Get OpenStreetMap top level properties of Helsinki University main building 2.17.2 Get information of Europeana item 2.17.3 Share of renewable energy in electricity 2.17.4 Get OpenStreetMap nodes with inarisami label in wikipedia but without inarisami label in OSM 3 Queries useful to external services 3.1 The best ranked properties and values of a given item Showcase Queries [edit] These queries show the power and functionality of SPARQL and WDQS GUI. Largest cities with female mayor [edit] #added before 2016-10
#TEMPLATE={\"template\":\"Largest ?c with ?sex head of government\",\"variables\":{\"?sex\":{\"query\":\" SELECT ?id WHERE { ?id wdt:P31 wd:Q48264 .  } \"},\"?c\":{\"query\":\"SELECT DISTINCT ?id WHERE {  ?c wdt:P31 ?id.  ?c p:P6 ?mayor. }\"} } }
SELECT DISTINCT ?city ?cityLabel ?mayor ?mayorLabel
WHERE
{
  BIND(wd:Q6581072 AS ?sex)
  BIND(wd:Q515 AS ?c)

	?city wdt:P31/wdt:P279* ?c .  # find instances of subclasses of city
	?city p:P6 ?statement .            # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .          # ... that has the value ?mayor
	?mayor wdt:P21 ?sex .       # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	
	# Now select the population value of the ?city
	# (wdt: properties use only statements of \"preferred\" rank if any, usually meaning \"current population\")
	?city wdt:P1082 ?population .
	# Optionally, find English labels for city and mayor:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
	}
}
ORDER BY DESC(?population)
LIMIT 10
 Try it! List of countries ordered by the number of their cities with female mayor [edit] #added before 2016-10
SELECT ?country ?countryLabel (count(*) AS ?count)
WHERE
{
	?city wdt:P31/wdt:P279* wd:Q515 . # find instances of subclasses of city
	?city p:P6 ?statement .           # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .         # ... that has the value ?mayor
	?mayor wdt:P21 wd:Q6581072 .      # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	?city wdt:P17 ?country .          # Also find the country of the city
 	
	# If available, get the \"ru\" label of the country, use \"en\" as fallback:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"ru,en\" .
	}
}
GROUP BY ?country ?countryLabel
ORDER BY DESC(?count)
LIMIT 100
 Try it! Popular surnames among humans [edit] #defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?human) AS ?count) WHERE {
    # ?human wdt:P31 wd:Q5.
      ?human wdt:P734 ?surname.
    }
    GROUP BY ?surname ORDER BY DESC(?count) LIMIT 100
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} 
ORDER BY DESC(?count)
 Try it! Given names with most variations [edit] #added before 2016-10

SELECT ?name ?nameLabel (COUNT(?otherName) AS ?count)
WHERE
{
  ?name wdt:P31 wd:Q202444;
        wdt:P460 ?otherName.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?name ?nameLabel
ORDER BY DESC(?count)
LIMIT 10
 Try it! Popular surnames among fictional characters [edit] #added before 2016-10

#defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?person) AS ?count) WHERE {
      ?person (wdt:P31/wdt:P279*) wd:Q95074.
      ?person wdt:P734 ?surname.
    }
    GROUP BY ?surname
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?count)
LIMIT 100
 Try it! Women with most sitelinks and no image born in 1921 or later [edit] SELECT ?s ?desc ?linkcount
WHERE
{
  ?s wdt:P31 wd:Q5 ;   # human
     wdt:P21 wd:Q6581072 ;  # gender: female
     wdt:P569 ?born .
  FILTER (?born >= \"1921-01-01T00:00:00Z\"^^xsd:dateTime) .
  ?s wikibase:sitelinks ?linkcount .
  MINUS {
    ?s wdt:P18 []  # exclude if there is an image
  }
?s rdfs:label ?desc FILTER(lang(?desc)=\"en\").
}
GROUP BY ?s ?desc ?linkcount
ORDER BY DESC(?linkcount)
LIMIT 50
 Try it! Whose birthday is today? [edit] #Whose birthday is today?
SELECT ?entity ?entityLabel ?entityDescription (YEAR(?date) as ?year)
WHERE {
    BIND(MONTH(NOW()) AS ?nowMonth)
    BIND(DAY(NOW()) AS ?nowDay)
    ?entity wdt:P569 ?date .
    FILTER (MONTH(?date) = ?nowMonth && DAY(?date) = ?nowDay)

SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }   
}
LIMIT 20
 Try it! Finding John and Sarah Connor [edit] #added before 2016-10
 SELECT * WHERE {
  ?p wdt:P1080 wd:Q620588 . # from fictional universe: Terminator
  ?p rdfs:label ?pl .
  FILTER (lang(?pl) = \"en\")
  ?p wdt:P25 ?m .  # ?m is mother of ?p
  ?m rdfs:label ?ml .
  FILTER (lang(?ml) = \"en\")
}
 Try it! Data of Douglas Adams [edit] #added before 2016-10

PREFIX entity: <http://www.wikidata.org/entity/>
#partial results

SELECT ?propUrl ?propLabel ?valUrl ?valLabel ?picture
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"identity\"@en AS ?propLabel ) .
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel
	}
	
  	?valUrl rdfs:label ?valLabel
	FILTER (LANG(?valLabel) = 'en') .
	OPTIONAL{ ?valUrl wdt:P18 ?picture .}
	FILTER (lang(?propLabel) = 'en' )
}
ORDER BY ?propUrl ?valUrl
LIMIT 200
 Try it! Data of Douglas Adams (modified version) [edit] PREFIX entity: <http://www.wikidata.org/entity/>

#  In addition to the original query this one comes with some advantages:
#  - You will get only literals as results, (even if the values are stored as IRI in wikibase)
#  - That means you will also get properties as birth date, alphanumeric identifier and so on.
#  - The list is ordered numerically by property number. (So P19 comes before P100) 
#  - All label, altLabel and description in a given Language are included.
#  You may open a separate column ?valUrl if you need also the IRI
#
#  Please advise, if there is an option to put the Q-Number  and/or the Language 
#  code into a runtime variable. 

SELECT ?propNumber ?propLabel ?val
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"Name\"@de AS ?propLabel ) .
       entity:Q42 rdfs:label ?val .
      
        FILTER (LANG(?val) = \"de\") 
	}
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"AltLabel\"@de AS ?propLabel ) .
        optional{entity:Q42 skos:altLabel ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"Beschreibung\"@de AS ?propLabel ) .
        optional{entity:Q42 schema:description ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
   	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' )
        filter  isliteral(?valUrl) 
        BIND(?valUrl AS ?val)
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' ) 
        filter  isIRI(?valUrl) 
        ?valUrl rdfs:label ?valLabel 
		FILTER (LANG(?valLabel) = \"de\") 
         BIND(CONCAT(?valLabel) AS ?val)
	}
        BIND( SUBSTR(str(?propUrl),38, 250) AS ?propNumber)
}
ORDER BY xsd:integer(?propNumber)
 Try it! Data of Barbara Harris - Grouped per item [edit] # This query collects data related to entities on Barbara Harris. 
# It demonstrates collecting individual attributes and concatenating them for easier post processing. 

SELECT 
  ?item
(SAMPLE(?itemLabel) AS ?itemLabel) 
(SAMPLE(?itemDescription) AS ?itemDescription) 
  (SAMPLE(?pic) AS ?pic) 
(SAMPLE(?date_of_birth) AS ?date_of_birth) 
(GROUP_CONCAT(DISTINCT ?country_of_citizenship; SEPARATOR=\", \") AS ?country_of_citizenships)
(GROUP_CONCAT(DISTINCT ?country_of_citizenshipLabel; SEPARATOR=\", \") AS ?country_of_citizenshipLabels)

(GROUP_CONCAT(DISTINCT ?occupation; SEPARATOR=\", \") AS ?occupations)
(GROUP_CONCAT(DISTINCT ?occupationLabel; SEPARATOR=\", \") AS ?occupationLabels)

(GROUP_CONCAT(DISTINCT ?country; SEPARATOR=\", \") AS ?countries)
(GROUP_CONCAT(DISTINCT ?countryLabel; SEPARATOR=\", \") AS ?countryLabels)


WHERE {
  VALUES ?item {
    wd:Q269809
    wd:Q274590
    wd:Q24576851
    wd:Q807461
    wd:Q4858963
    wd:Q27954833
    wd:Q4859015
    wd:Q826930
  }
  OPTIONAL { ?item wdt:P18 ?pic. }
  OPTIONAL { ?item wdt:P27 ?country_of_citizenship. }
  OPTIONAL { ?item wdt:P106 ?occupation. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  OPTIONAL { ?item wdt:P31 ?instance_of. }
  OPTIONAL { ?item wdt:P17 ?country. }
  OPTIONAL { ?item wdt:P569 ?date_of_birth. }
  SERVICE wikibase:label { 
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
    ?item rdfs:label ?itemLabel.
    ?item rdfs:description ?itemDescription.
    ?country_of_citizenship rdfs:label ?country_of_citizenshipLabel.
    ?occupation rdfs:label ?occupationLabel.
    ?country rdfs:label ?countryLabel.
  }
}
GROUP BY ?item
 Try it! People who have been buried in multiple places [edit] # This query collects burial places of individuals, and sorts them in decreasing order
SELECT ?human (COUNT(?place) AS ?count) WHERE {
  ?human wdt:P31 wd:Q5.
  ?human wdt:P119 ?place.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE]\". }
}
GROUP BY ?human 
ORDER BY DESC(?count)
 Try it! All oldest living US ex-presidents in chronological order [edit] # Added 2020-07
# All persons who have been the oldest living US ex-president with dates in chronological order
SELECT DISTINCT ?date ?president ?presidentLabel
WITH
{
  # Persons who is/were president of USA
  SELECT ?president ?presidentLabel ?president_enddate ?president_birthdate ?president_deathdate
  WHERE
  {
    ?president wdt:P31 wd:Q5.
    ?president p:P39 ?president_statement.
    ?president_statement ps:P39 wd:Q11696.
    ?president_statement pq:P582 ?president_enddate.
    ?president wdt:P569 ?president_birthdate.
    OPTIONAL { ?president wdt:P570 ?president_deathdate. }
    ?president rdfs:label ?presidentLabel.
    FILTER (LANG(?presidentLabel) = \"en\")
  }
} AS %presidents
WITH
{
  # Dates where who is oldest living expresident can change
  SELECT DISTINCT ?date
  WHERE
  {
    {
      INCLUDE %presidents
      BIND(?president_enddate + \"P1D\"^^xsd:duration AS ?date)
    }
    UNION
    {
      INCLUDE %presidents
      BIND(?president_deathdate + \"P1D\"^^xsd:duration AS ?date)
    }
  }
} AS %dates
WITH
{
  # Find the age for all living expresidents for each value of ?date
  SELECT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    INCLUDE %presidents
    FILTER (?president_enddate < ?date) # Must have become expresident
    FILTER IF(BOUND(?president_deathdate), ?president_deathdate >= ?date, true) # Must still be living
    BIND (?date - ?president_birthdate AS ?age)
  }
} AS %ages
WITH
{
  # Find the oldest age for a living expresident for each value of ?date
  SELECT ?date (MAX(?age) AS ?oldest)
  WHERE
  {
    INCLUDE %ages
  }
  GROUP BY ?date
} AS %oldest
WITH
{
  SELECT DISTINCT ?date ?age ?president ?presidentLabel ?president_birthdate
  WHERE
  {
    INCLUDE %dates
    OPTIONAL
    {
      INCLUDE %ages
      INCLUDE %oldest
      FILTER (?age = ?oldest)
    }
  }
} AS %result
WHERE
{
  # A result is a change from the previous date if ?president's presidency ended the day before ?date,
  # or if an older expresident died the day before ?date. Filter out results that don't fulfill this.
  INCLUDE %result
  BIND (?date - \"P1D\"^^xsd:duration AS ?day_before)
  FILTER
  (
    ! BOUND(?president)||
    EXISTS
    {
      ?president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?day_before.
    } ||
    EXISTS
    {
      ?other_president wdt:P31 wd:Q5.
      ?other_president p:P39 ?president_statement.
      ?president_statement ps:P39 wd:Q11696.
      ?president_statement pq:P582 ?other_president_end.
      ?other_president wdt:P569 ?other_president_birthdate.
      ?other_president wdt:P570 ?day_before.
      FILTER (?other_president_birthdate < ?president_birthdate) # Other president is oldest
      FILTER (?other_president_end < ?day_before) # other president died as expresident
    }
  )
}
ORDER BY ?date
 Try it! Persons and institutions related in some way to Russian politics [edit] # Added 2022-03
# people and institutions that have the affiliation attribute assigned to Russia 
select ?item ?itemLabel ?itemDescription where { ?item wdt:P1416 wd:Q159. SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } } limit 100
 Try it!  Advanced Queries [edit] Bubble charts [edit] Overall causes of death ranking [edit] #defaultView:BubbleChart
#TEMPLATE={\"template\":\"Overall causes of death ranking of ?thing \",\"variables\":{\"?thing\": {\"query\":\"SELECT ?id  (COUNT(?id) AS ?count) WHERE {  ?sub wdt:P509 ?y.  ?sub wdt:P31 ?id. } GROUP BY ?id \"} } }
SELECT ?cid ?cause (COUNT(*) AS ?count) WHERE {
  BIND(wd:Q5 AS ?thing)
  ?pid wdt:P31 ?thing;
      wdt:P509 ?cid.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?cid rdfs:label ?cause}
}
GROUP BY ?cid ?cause
ORDER BY DESC(?count) ?cause
 Try it! WWII battle durations [edit] #defaultView:BubbleChart
SELECT DISTINCT ?item ?itemLabel (?end - ?start AS ?duration)
WHERE
{
	?item wdt:P361* wd:Q362 ;
          wdt:P31/wdt:P279* wd:Q178561 ;
          wdt:P580 ?start ;
          wdt:P582 ?end .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! The top 10 heaviest humans [edit] #defaultView:BubbleChart
#TEMPLATE={ \"template\": \"The top 10 heaviest ?type \", \"variables\": { \"?type\": { \"query\": \"SELECT DISTINCT ?id WHERE { ?i wdt:P2067 ?v. ?i wdt:P31 ?id}\" } } }
SELECT ?item ?itemLabel ?mass
WHERE {
  {
    SELECT ?item ?mass WHERE {
      ?item wdt:P31 wd:Q5;
            p:P2067/psn:P2067/wikibase:quantityAmount ?mass.
    }
    ORDER BY DESC(?mass)
    LIMIT 10
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,fr,de\" }
}
 Try it! Values of uses (P2283) in scholarly articles [edit] # Values of \"uses\" used in scholarly articles
# Demonstrates how to turn off the optimizer and start with the lowest number of edges first.
#defaultView:BubbleChart
SELECT ?uses ?usesLabel (count(?item) as ?c)
WHERE 
{
  hint:Query hint:optimizer \"None\".
  ?item wdt:P2283 ?uses. # ~20,000 edges
  ?item wdt:P31 wd:Q13442814. # ~37M edges
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
group by ?uses ?usesLabel
order by desc(?c)
 Try it! Timeline [edit] Timeline of space probes [edit] #defaultView:Timeline
SELECT ?item ?itemLabel ?launchdate (SAMPLE(?image) AS ?image)
WHERE
{
	?item wdt:P31 wd:Q26529 .
    ?item wdt:P619 ?launchdate .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
    OPTIONAL { ?item wdt:P18 ?image }
}
GROUP BY ?item ?itemLabel ?launchdate
 Try it! Timeline of compositions by Wolfgang Amadeus Mozart [edit] #defaultView:Timeline
SELECT DISTINCT ?item ?itemLabel ?catalog_code ?publication_date
WHERE {
	?item wdt:P86 wd:Q254 ; # composer: W. A. Mozart
          wdt:P528 ?catalog_code ;
          wdt:P577 ?publication_date .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Dimensions [edit] Dimensions of elements [edit] #defaultView:Dimensions
SELECT ?elementLabel ?boiling_point ?melting_point ?electronegativity ?density ?mass WHERE {
?element wdt:P31 wd:Q11344;
   wdt:P2102 ?boiling_point;
   wdt:P2101 ?melting_point;
   wdt:P1108 ?electronegativity;
   wdt:P2054 ?density;
   wdt:P2067 ?mass.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
LIMIT 100
 Try it! Graph [edit] Children of Genghis Khan [edit] #defaultView:Graph
PREFIX gas: <http://www.bigdata.com/rdf/gas#>

SELECT ?item ?itemLabel ?pic ?linkTo
WHERE {
  SERVICE gas:service {
    gas:program gas:gasClass \"com.bigdata.rdf.graph.analytics.SSSP\" ;
                gas:in wd:Q720 ;
                gas:traversalDirection \"Forward\" ;
                gas:out ?item ;
                gas:out1 ?depth ;

                gas:maxIterations 4 ;
                gas:linkType wdt:P40 .
  }
  OPTIONAL { ?item wdt:P40 ?linkTo }
  OPTIONAL { ?item wdt:P18 ?pic }
  SERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Firearms cartridges and which they are based on [edit] #Show firearms cartridges and which they are based on
#defaultView:Graph
SELECT 
?item ?itemLabel ?image 
?other ?otherLabel ?image2
WHERE
{
    ?item  wdt:P279+ wd:Q37144 .   # cartridges
    ?item  wdt:P144    ?other  .   # if the cartridge is based on another
    OPTIONAL {
      ?item  wdt:P18     ?image  .   # grab image
      ?other wdt:P18     ?image2 .   # grab image
    }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Music genres [edit] #graph rendering could be slow due to large number of results

#defaultView:Graph
SELECT ?item ?itemLabel ?_image ?_subclass_of ?_subclass_ofLabel
WHERE {
  ?item wdt:P31 wd:Q188451;
        wdt:P279 ?_subclass_of.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image. }
}
 Try it! Groups of characters in the Marvel universe [edit] #defaultView:Graph
SELECT ?char ?charLabel ?group ?groupLabel (\"7FFF00\" as ?rgb)
WHERE {
	?group wdt:P31 wd:Q14514600 ;  # group of fictional characters
          wdt:P1080 wd:Q931597.  # from Marvel universe
 ?char wdt:P463 ?group # member of group
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Line chart [edit] Average number of children per year [edit] The following query uses these:Items: human (Q5)   Properties: instance of (P31)   , number of children (P1971)   , date of birth (P569)   #defaultView:LineChart
SELECT  (str(?year) AS ?year) (AVG( ?_number_of_children ) AS ?count) WHERE {
  ?item wdt:P31 wd:Q5.
  ?item wdt:P1971 ?_number_of_children.
  ?item wdt:P569 ?_date_of_birth.
  BIND( year(?_date_of_birth) as ?year ).
  FILTER( ?year > 1900)
}

GROUP BY ?year Try it! Population of countries sharing a border with Germany [edit] #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q183;   # shares border with Germany
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Population of countries sharing a border with Cameroon [edit] #defaultView:LineChart
SELECT ?country ?year ?AVGpopulation ?countryLabel WHERE {
  {
    SELECT ?country ?year (AVG(?population) AS ?AVGpopulation) WHERE {
      {
        SELECT ?country (str(YEAR(?date)) AS ?year) ?population WHERE {
          ?country wdt:P47 wd:Q1009;  # shares border with Cameroon
                   p:P1082 ?populationStatement.
          ?populationStatement ps:P1082 ?population;
                               pq:P585 ?date.
        }
      }
    }
    GROUP BY ?country ?year
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Number of books by year and genre [edit] #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?genreLabel )  WHERE {
  ?item wdt:P31 wd:Q571;
        wdt:P577 ?_publication_date;
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?_genre rdfs:label ?genreLabel.}
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Number of bands by year and genre [edit] #defaultView:LineChart
SELECT ?year (COUNT(?_genre) AS ?count) (SAMPLE(?_genreLabel) AS ?_genreLabel) WHERE {
  ?item wdt:P31 wd:Q215380; # instance of: band
        wdt:P571 ?_date;   # inception
        wdt:P136 ?_genre.
  BIND(str(YEAR(?_date)) AS ?year)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_genre rdfs:label ?_genreLabel.}
  FILTER(?_date >= \"1960-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 10)
 Try it! Bar chart [edit] Battles per year per country last 80 years [edit] #defaultView:BarChart

SELECT(SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel)  WHERE {
  ?subj wdt:P31 wd:Q178561.  # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. }  # start time
  OPTIONAL { ?subj wdt:P585 ?d2. }  # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. }  # end time
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(STR(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.  # country of location of battle
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                          ?_country rdfs:label ?_countryLabel.}
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Battles per year per continent and country last 80 years (animated) [edit] #defaultView:BarChart
SELECT (SAMPLE(?_continentLabel) AS ?continent) (COUNT(?_country) AS ?battles) (SAMPLE(?_countryLabel) AS ?_countryLabel) (SAMPLE(?year) AS ?year)  WHERE {
  ?subj wdt:P31 wd:Q178561.        # instance of battle
  OPTIONAL { ?subj wdt:P580 ?d1. } # start date
  OPTIONAL { ?subj wdt:P585 ?d2. } # point in time
  OPTIONAL { ?subj wdt:P582 ?d3. } # end date
  BIND(IF(!BOUND(?d1), IF(!BOUND(?d2), ?d3, ?d2), ?d1) AS ?date)
  BIND(str(YEAR(?date)) AS ?year)
  FILTER(BOUND(?year))
  ?subj wdt:P276/wdt:P17 ?_country.
  ?_country wdt:P30 ?_continent.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
       ?_country rdfs:label ?_countryLabel.
       ?_continent rdfs:label ?_continentLabel.}
  BIND((NOW()) - ?date AS ?distance)
  FILTER((0 <= ?distance) && (?distance < 31 * 12 * 80))
}
GROUP BY ?year ?_country
 Try it! Yearly Population stacked by country [edit] The following query uses these:Items: sovereign state (Q3624078)   , estimation (Q791801)   , census (Q39825)   Properties: instance of (P31)   , population (P1082)   , point in time (P585)   , determination method (P459)   #defaultView:BarChart
# male/female population _must_ not be added unqualified as total population (!)
# this is an error and should be fixed at the item using P1540 and P1539 instead
# (wrong query result may be a manifestation of such)
SELECT ?year (AVG(?pop) AS ?population) ?countryLabel
       (COUNT(*) AS ?number_of_chosen_sources) (SAMPLE(?method) AS ?a_source_of_those_chosen)
WHERE
{
  ?country wdt:P31 wd:Q3624078;#more useful than Q6256;
           p:P1082 ?popStatement .
  ?popStatement ps:P1082 ?pop;
                pq:P585 ?date .
  BIND(STR(YEAR(?date)) AS ?year)
  #FILTER ( (YEAR(?date)) >= 2000 ) 
  # IF multiple ?pop values per country per year exist, we prioritize by source
  #       census 1st, others 2nd, estimation(s) 3rd, unknown sources (none supplies P459) last
  # note: wikibase:rank won't help here: each year may have multiple statements for ?pop value
  #       rank:prefered is used for the best value (or values) of the latest or current year
  #       rank:normal may be justified for all of multiple ?pop values for a given year
  OPTIONAL { ?popStatement pq:P459 ?method. }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?d; pq:P459 ?estimate ].
             FILTER(STR(YEAR(?d)) = ?year). FILTER(?estimate = wd:Q791801). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?e; pq:P459 ?census ].
             FILTER(STR(YEAR(?e)) = ?year). FILTER(?census = wd:Q39825). }
  OPTIONAL { ?country p:P1082 [ pq:P585 ?f; pq:P459 ?other ].
             FILTER(STR(YEAR(?f)) = ?year). FILTER(?other != wd:Q39825 && ?other != wd:Q791801). }
  BIND(COALESCE( 
    IF(BOUND(?census), ?census, 1/0),
    IF(BOUND(?other), ?other, 1/0),
    IF(BOUND(?estimate), ?estimate, 1/0) ) AS ?pref_method).
  FILTER(IF(BOUND(?pref_method),?method = ?pref_method,true))
  # .. still need to group if multiple values per country per year exist and
  # - none is qualified with P459
  # - multiple ?estimate or multiple ?census (>1 value from same source)
  # - ?other yields more than one source (>1 values are better than optionally
  #                         supplied estimate, but no census source available)

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }               
}
GROUP BY ?year ?countryLabel
ORDER BY ?year ?countryLabel Try it! Built power plants per year per country [edit] #defaultView:BarChart
SELECT (SAMPLE(?year) AS ?year) (COUNT(?_country) AS ?count) (SAMPLE(?_countryLabel) AS ?_countryLabel) WHERE {
  ?object wdt:P31/wdt:P279* wd:Q134447. # Power stations or subtypes
  BIND(STR(YEAR(?_inception)) AS ?year)
  ?object wdt:P571 ?_inception;
          wdt:P17 ?_country.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?_country rdfs:label ?_countryLabel. }
}
GROUP BY ?year ?_country
ORDER BY ?_countryLabel
 Try it! Bar chart of paintings produced per year by Piet Mondrian [edit] #defaultView:BarChart
SELECT ?year (COUNT(?year) as ?count) WHERE {
  ?painting wdt:P31 wd:Q3305213.
  ?painting wdt:P170 wd:Q151803.
  ?painting wdt:P571 ?inception.
  BIND(str(year(?inception)) AS ?year)
  OPTIONAL { ?painting wdt:P18 ?image. }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} GROUP BY ?year ?count ORDER BY ?year
 Try it! Bar chart with ratio of male / female creators for public art in city of Nijmegen, the Netherlands [edit] #defaultView:BarChart
select ?genderLabel (count(?gender) as ?genderCount) where {
  ?item wdt:P136 wd:Q557141;
        wdt:P131 wd:Q47887;
        wdt:P170 ?creator. 
    
  ?creator wdt:P21 ?gender.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} group by ?genderLabel ?genderCount
 Try it! Area chart [edit] Cancer deaths per year and cancer type [edit] The following query uses these:Items: human (Q5)   , cancer (Q12078)   Properties: instance of (P31)   , cause of death (P509)   , date of death (P570)   , subclass of (P279)   #defaultView:AreaChart
SELECT ?cod (STR(SAMPLE(?yearOfDeath)) AS ?YEAR_Of_DEATH) (COUNT(*) AS ?NUMBER_OF_DEATHS) ?cause WHERE {
  ?pid wdt:P31 wd:Q5;  # instance of human
       wdt:P509 ?cod;  # cause of death
       wdt:P570 ?_date_of_death.
  ?cod wdt:P279* wd:Q12078.  # type of cancer
 SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                         ?cod rdfs:label ?cause. }
  BIND ( YEAR(?_date_of_death) AS ?yearOfDeath )
  FILTER( ?yearOfDeath > 1960 )
}
GROUP BY ?cod ?cause ?yearOfDeath Try it! Tree [edit] Continents, countries, regions and capitals [edit] The following query uses these:Items: continent (Q5107)   , country (Q6256)   , city (Q515)   Properties: instance of (P31)   , continent (P30)   , contains the administrative territorial entity (P150)   , locator map image (P242)   , flag image (P41)   , capital (P36)   , image (P18)   , population (P1082)   , head of government (P6)   , twinned administrative body (P190)   , inception (P571)   , located in or next to body of water (P206)   , has part(s) (P527)   #defaultView:Tree
SELECT ?continent ?continentFlag ?continentLabel ?country ?countryLabel ?countryFlag ?region ?regionLabel ?regionFlag ?city ?cityLabel ?cityImage ?property ?propertyLabel ?value ?valueLabel WHERE {
  {
    SELECT * WHERE {
      ?continent wdt:P31 wd:Q5107.
      ?country wdt:P30 ?continent.
      ?country p:P31/ps:P31 wd:Q6256.
      ?country wdt:P150 ?region.
      OPTIONAL {
        ?continent wdt:P242 ?continentFlag.
        ?country wdt:P41 ?countryFlag.
        ?region wdt:P41 ?regionFlag.
      }
      OPTIONAL {
        ?region wdt:P36 ?city.
        ?city wdt:P31 wd:Q515.
        ?city wdt:P18 ?cityImage.
        OPTIONAL {
          VALUES (?prop) {
            (wdt:P1082)
            (wdt:P6)
            (wdt:P190)
            (wdt:P31)
            (wdt:P571)
            (wdt:P150)
            (wdt:P206)
            (wdt:P527)
          }
          ?city ?prop ?value.
          ?property ?ref ?prop.
          ?property rdf:type wikibase:Property.
        }
      }
    }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Viennese composers and their compositions by tonality [edit] The following query uses these:Items: human (Q5)   , Vienna (Q1741)   Properties: instance of (P31)   , place of birth (P19)   , place of death (P20)   , residence (P551)   , image (P18)   , composer (P86)   , tonality (P826)   #defaultView:Tree
SELECT ?composer ?composerLabel ?composerImage ?tonality ?tonalityLabel ?composition ?compositionLabel WHERE {
  ?composer wdt:P31 wd:Q5;
            wdt:P19|wdt:P20|wdt:P551 wd:Q1741.
  OPTIONAL { ?composer wdt:P18 ?composerImage. }
  ?composition wdt:P86 ?composer;
               wdt:P826 ?tonality.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de-at,de\". }
}
ORDER BY ?composerLabel ?tonalityLabel Try it! Treemap [edit] Popular television series (in treeview) [edit] #added before 2016-10

#defaultView:TreeMap
SELECT ?show ?showLabel  ?season ?cleanSeasonLabel ?episode ?episodeLabel
WHERE
{
	{
		BIND(wd:Q886 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-23) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	} 
	UNION
	{
		BIND(wd:Q16538 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(SUBSTR(?_seasonLabel, 0, STRLEN(?_seasonLabel)-20) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}  
	UNION
	{
		BIND(wd:Q147235 as ?show) .
		?season wdt:P361 ?show .
		?season rdfs:label ?_seasonLabel.
		FILTER((LANG(?_seasonLabel)) = \"en\")
		BIND(CONCAT(\"S\", SUBSTR(?_seasonLabel, 25)) AS ?cleanSeasonLabel)
		?episode wdt:P361 ?season .
	}

	SERVICE wikibase:label {  bd:serviceParam wikibase:language \"en\" }
}
 Try it! Famous people categorised into eye and hair color [edit] #defaultView:TreeMap
SELECT ?eyes ?hairColorLabel (COUNT(?person) as ?count)
WHERE
{
	?person wdt:P1340 ?eyeColor.
    ?person wdt:P1884 ?hairColor.
    ?person wdt:P2048 ?height.
    ?eyeColor rdfs:label ?_eyeColorLabel.
    FILTER((LANG(?_eyeColorLabel)) = \"en\")
    BIND(CONCAT(?_eyeColorLabel, \" eyes\") AS ?eyes)
   
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
GROUP BY ?eyes ?hairColorLabel
 Try it! Scatter chart [edit] Number of films by year and genre [edit] The following query uses these:Items: film (Q11424)   Properties: instance of (P31)   , publication date (P577)   , genre (P136)   #defaultView:ScatterChart
SELECT   ?year  (COUNT(?_genre) AS ?count ) (SAMPLE(?_genreLabel) AS ?label )  (?year as ?year_shown) WHERE {
  ?item wdt:P31 wd:Q11424.
  ?item wdt:P577 ?_publication_date.
  ?item wdt:P136 ?_genre.
  ?_genre rdfs:label ?_genreLabel.
  BIND(str(YEAR(?_publication_date)) AS ?year)
  FILTER((LANG(?_genreLabel)) = \"en\")
 
 FILTER (?_publication_date >= \"2000-00-00T00:00:00Z\"^^xsd:dateTime)
}
GROUP BY ?_genreLabel ?year
HAVING (?count > 30) Try it! Calendars [edit] Calendar of birth dates of women who studied at the University of Oxford [edit] SELECT ?monthLabel (?day_int as ?d) ?personLabel ?personDesc
   (URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?rperson),32) )) as ?link) WHERE {
{ SELECT ?month_int ?month ?day_int (SAMPLE(?person) AS ?rperson) WHERE {
?month wdt:P31 wd:Q47018901; wdt:P1545 ?month_ordinal. # These lines generate a calendar from January 1 to December 31
?day p:P361 [ps:P361 ?month; pq:P1545 ?day_ordinal ].
 BIND(xsd:integer(?month_ordinal) AS ?month_int)
 BIND(xsd:integer(?day_ordinal) AS ?day_int)
OPTIONAL {
# Define the people we're interested in
{?person wdt:P69 wd:Q34433 } UNION {?person wdt:P69/wdt:P31 wd:Q2581649 } # educated at Oxford or an Oxford college
?person wdt:P21 wd:Q6581072 ; # female
   p:P569/psv:P569 ?date_node. # birth date
?date_node wikibase:timePrecision \"11\"^^xsd:integer ; # birth date has specific day
   wikibase:timeValue ?birthdate .        
filter(DAY(?birthdate)=?day_int) filter (MONTH(?birthdate)=?month_int )
}
} GROUP BY ?month_int ?month ?day_int }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
?rperson rdfs:label ?personLabel. ?rperson schema:description ?personDesc. ?month rdfs:label ?monthLabel }
} ORDER BY ?month_int ?day_int
 Try it! Samples with coordinates to illustrate maps [edit] Items around with user location [edit] #defaultView:Map{\"layer\":\"?instance_ofLabel\"}
SELECT ?place ?placeLabel ?image ?coordinate_location ?dist ?instance_of ?instance_ofLabel WHERE {
  SERVICE wikibase:around {
    ?place wdt:P625 ?coordinate_location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\".
    bd:serviceParam wikibase:distance ?dist.
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?place wdt:P18 ?image. }
  OPTIONAL { ?place wdt:P31 ?instance_of. }
}
 Try it! Locations of national parks [edit] #defaultView:Map
SELECT ?objectLabel ?objectDescription ?link ?coord
WHERE {
  ?object wdt:P31/wdt:P279? wd:Q46169 .
          OPTIONAL { ?object wdt:P856 ?link. } 
          OPTIONAL { ?object wdt:P625 ?coord . }
          SERVICE wikibase:label {
               bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr\"
          }
}
 Try it! Airports within 100km of Berlin [edit] #added before 2016-10

#defaultView:Map
SELECT ?place ?placeLabel ?location
WHERE
{
  # Berlin coordinates
  wd:Q64 wdt:P625 ?berlinLoc .
  SERVICE wikibase:around {
    ?place wdt:P625 ?location .
    bd:serviceParam wikibase:center ?berlinLoc .
    bd:serviceParam wikibase:radius \"100\" .
  } .
  # Is an airport
  FILTER EXISTS { ?place wdt:P31/wdt:P279* wd:Q1248784 } .
  SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
  } 
}
 Try it! Airports in Belgium [edit] #List of airports in Belgium
#defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor
WHERE {
  ?airport wdt:P31 wd:Q1248784 ;
          ?range wd:Q31;
          wdt:P625 ?coor.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! International airports named after women [edit] # Airports named after women
# List of airports that are named after women
# Written by WiseWoman auf der #wmdemv 2019
# defaultView:Map
SELECT DISTINCT ?airport ?airportLabel ?coor ?namedafterLabel
WHERE {
  ?airport wdt:P31 wd:Q644371 ;  
          # ?range wd:Q183;
          wdt:P625 ?coor.
  ?airport wdt:P138 ?namedafter .
  ?namedafter wdt:P31 wd:Q5 .
  ?namedafter wdt:P21 wd:Q6581072 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Schools between San Jose, CA and Sacramento, CA [edit] The following query uses these:Items: San Jose (Q16553)   , Sacramento (Q18013)   , school (Q3914)   Properties: coordinate location (P625)   , instance of (P31)   , subclass of (P279)    Features: map (Q24515275)   , wikibase:box (Q26211169)   , wikibase:box with West and East corners (Q26211177)  # Schools between San Jose, CA and Sacramento, CA
#defaultView:Map
SELECT *
WHERE
{ hint:Query hint:optimizer \"None\" .
  wd:Q16553 wdt:P625 ?SJloc .
  wd:Q18013 wdt:P625 ?SCloc .
  SERVICE wikibase:box {
      ?place wdt:P625 ?location .
      bd:serviceParam wikibase:cornerWest ?SJloc .
      bd:serviceParam wikibase:cornerEast ?SCloc .
    }
  ?place wdt:P31/wdt:P279* wd:Q3914 .
} Try it! Big cities, grouped into map layers by population [edit] #defaultView:Map
SELECT DISTINCT ?city ?cityLabel (SAMPLE(?location) AS ?location) (MAX(?population) AS ?population) (SAMPLE(?layer) AS ?layer)
WHERE
{
  ?city wdt:P31/wdt:P279* wd:Q515;
        wdt:P625 ?location;
        wdt:P1082 ?population.
  FILTER(?population >= 500000).
  BIND(
    IF(?population < 1000000, \"<1M\",
    IF(?population < 2000000, \"1M-2M\",
    IF(?population < 5000000, \"2M-5M\",
    IF(?population < 10000000, \"5M-10M\",
    IF(?population < 20000000, \"10M-20M\",
    \">20M\")))))
    AS ?layer).
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?city ?cityLabel
 Try it! Places with free wifi [edit] #defaultView:Map
# Places with free wi-fi
SELECT ?item ?itemLabel (SAMPLE(?coord) AS ?coord)
WHERE {
	?item wdt:P2848 wd:Q1543615 ;  # wi-fi gratis
	      wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} GROUP BY ?item ?itemLabel
 Try it! Basic map of U1 subway stations in Berlin [edit] #added before 2016-10
#defaultView:Map
SELECT ?stationLabel ?coord
WHERE {
	?station wdt:P81 wd:Q99691 ;
		 wdt:P625 ?coord .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],de\" }
}
 Try it! Advanced map of Stockholm Metro (Q272926) [edit] Map of Stockholm Metro (query) Locations of universities in Cameroon [edit] #added before 2016-10
#defaultView:Map
SELECT ?universityLabel ?universityDescription ?website ?coord
WHERE {
	?university wdt:P31/wdt:P279* wd:Q3918 ;
		wdt:P17 wd:Q1009 ;
		wdt:P625 ?coord .
	OPTIONAL {
		?university wdt:P856 ?website
	}
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"en,de\" .
	}
}
 Try it! Distribution of names of human settlements ending in \"-ow\" or \"-itz\" in Germany [edit] #added before 2016-10
 #defaultView:Map
SELECT ?item ?itemLabel ?coord
WHERE
{
	?item wdt:P31/wdt:P279* wd:Q486972;
    	      wdt:P17 wd:Q183;
    	      rdfs:label ?itemLabel;
    	      wdt:P625 ?coord;
    	 FILTER (lang(?itemLabel) = \"de\") .
    	 FILTER regex (?itemLabel, \"(ow|itz)$\").
}
 Try it! Locations of power stations [edit] #defaultView:Map
SELECT DISTINCT ?objectLabel ?coord ?layer
WHERE
{
  ?object wdt:P31/wdt:P279* wd:Q159719;
     wdt:P625 ?coord.
  ?object wdt:P31 ?type. ?type wdt:P279* wd:Q159719.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?type rdfs:label ?layer }
}
 Try it! Locations of stone arch bridges [edit] #defaultView:Map
SELECT ?label ?coord ?place ?image
WHERE {
	?place wdt:P31 wd:Q14276458 ;  # instance of deck arch bridge
            wdt:P186 wd:Q22731 ;  # made of stone
            wdt:P625 ?coord .
	OPTIONAL { ?place wdt:P18 ?image }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?place rdfs:label ?label }
}
 Try it! Locations of aqueducts [edit] #defaultView:Map
SELECT ?place ?placeLabel ?coord ?layer
WHERE {
   ?place wdt:P31/wdt:P279? wd:Q474 ; # instance of aqueduct
          wdt:P625 ?coord ;
          wdt:P31 ?type.
  ?type wdt:P279* wd:Q474
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                       ?type rdfs:label ?layer}
}
 Try it! Locations of archaeological sites, with images [edit] #defaultView:Map
SELECT ?siteLabel ?coord ?image ?site
WHERE {
   ?site wdt:P31/wdt:P279* wd:Q839954 ;
      wdt:P625 ?coord ;
      wdt:P18 ?image .
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".}
}
 Try it! Locations of castles that are also archaeological sites [edit] #defaultView:Map
SELECT ?label ?coord ?subj
WHERE {
   ?subj wdt:P31 wd:Q839954 ; # instance of archaeological site
         wdt:P31/wdt:P279* wd:Q23413 ;  # instance or subclass of castle
         wdt:P625 ?coord .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". 
                         ?subj rdfs:label ?label}
}
 Try it! Locations of battles [edit] #added before 2016-10
#defaultView:Map
SELECT ?label ?coord ?subj ?year
WHERE
{
	?subj wdt:P31 wd:Q178561 .
	?subj wdt:P625 ?coord .
	OPTIONAL {?subj wdt:P580 ?d1}
	OPTIONAL {?subj wdt:P585 ?d2}
  	OPTIONAL {?subj wdt:P582 ?d3}
	BIND(IF(!BOUND(?d1),(IF(!BOUND(?d2),?d3,?d2)),?d1) as ?date)
	BIND(YEAR(?date) as ?year)
	?subj rdfs:label ?label filter (lang(?label) = \"en\")
}
 Try it! Places of worship [edit] #added before 2016-10

#defaultView:Map
SELECT ?item ?itemLabel ?_coordinate_location ?_image WHERE {
  ?item wdt:P31/wdt:P279* wd:Q1370598.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
   ?item wdt:P625 ?_coordinate_location.
  ?item wdt:P18 ?_image.
}
 Try it! All museums (including subclass of museum) in Washington, D.C. with coordinates [edit] #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?name ?coord ?lat ?lon
WHERE {
   hint:Query hint:optimizer \"None\" .
   ?item wdt:P131* wd:Q61 .
   ?item wdt:P31/wdt:P279* wd:Q33506 .
   ?item wdt:P625 ?coord .
   ?item p:P625 ?coordinate .
   ?coordinate psv:P625 ?coordinate_node .
   ?coordinate_node wikibase:geoLatitude ?lat .
   ?coordinate_node wikibase:geoLongitude ?lon .
   SERVICE wikibase:label {
    bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
    ?item rdfs:label ?name
   }
}
ORDER BY ASC (?name)
 Try it! Map of museums in the Netherlands with a color indicating if they accept the Museumkaart (Q2237462) [edit] #defaultView:Map
select ?museum ?museumLabel ?layer (sample(?location) as ?location) where {
  ?museum wdt:P31/wdt:P279* wd:Q33506;
          wdt:P17 wd:Q55;
          wdt:P625 ?location.
  optional { ?museum wdt:P2851 ?layer. }
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl\". }
} group by ?museum ?museumLabel ?layer
 Try it! All ski resorts with coordinates [edit] #defaultView:Map
SELECT ?item ?itemLabel ?coord #?lat ?lon
WHERE
{
   ?item               wdt:P31        wd:Q130003.
   ?item               wdt:P625         ?coord.

#  ?item                 p:P625         ?statementnode.
#  ?statementnode      psv:P625         ?valuenode.
#  ?valuenode     wikibase:geoLatitude  ?lat.
#  ?valuenode     wikibase:geoLongitude ?lon.

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Lighthouses in Norway [edit] #added before 2016-10
#defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?coords ?image
WHERE {
	?item wdt:P31 wd:Q39715 ;
          wdt:P17 wd:Q20 ;
          wdt:P625 ?coords
	OPTIONAL { ?item wdt:P18 ?image } 
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],nb,nn,en,fi\"  } 
}
ORDER BY ?itemLabel
 Try it! Most beautiful villages of France [edit] #defaultView:Map
SELECT ?item ?itemLabel ?geoLocation ?image
WHERE {
    ?item wdt:P463 wd:Q1010307 ;  # member of Les Plus Beaux Villages de France (organisation)
          wdt:P625 ?geoLocation .
    OPTIONAL { ?item wdt:P18 ?image }
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr\" }
}
 Try it! Locations in Fiji [edit] This query shows a way of mapping locations which span the 180th meridian, without the points being split between the left and right edges of the map. #defaultView:Map
select ?item ?coords_ where {
  ?item wdt:P17 wd:Q712 .
  ?item p:P625/psv:P625 ?coords .
  ?coords wikibase:geoLatitude ?lat ;
          wikibase:geoLongitude ?lon .
  bind(strdt(concat(\"Point(\", if((?lon < 0), str(?lon + 360), str(?lon)), \" \", str(?lat), \")\"), geo:wktLiteral) as ?coords_) .
} limit 1000
 Try it! Map of disasters, color-coded by disaster type [edit] Map of disasters color-coded by disaster type #defaultView:Map{\"layer\":\"?typeLabel\"}
SELECT ?item ?itemLabel ?geo ?type ?typeLabel (SAMPLE(?_image) AS ?image) WHERE {
  ?type wdt:P279* wd:Q3839081 .
  ?item wdt:P31 ?type ;
        wdt:P625 ?geo .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  OPTIONAL { ?item wdt:P18 ?_image }
}
GROUP BY ?item ?itemLabel ?geo ?type ?typeLabel
 Try it! Monuments and other heritage items located 1 km around the users location [edit] #defaultView:Map
select distinct ?monument ?monumentLabel ?heritageLabel (sample(?distance) as ?distance) (sample(?location) as ?location) (sample(?image) as ?image) where {
  ?monument wdt:P1435 ?heritage.
  
  service wikibase:around {   
    ?monument wdt:P625 ?location.
    bd:serviceParam wikibase:center \"[AUTO_COORDINATES]\".
    bd:serviceParam wikibase:radius \"1\" . 
    bd:serviceParam wikibase:distance ?distance .
  }
  
  optional {
    ?monument wdt:P18 ?image.
  }
  
  service wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de,es,nl\". }
} group by ?monument ?monumentLabel ?heritageLabel order by ?distance
 Try it! Map of newspapers in the United States by presence of Infobox newspaper in their English Wikipedia article [edit] Map of newspapers in the United States by presence of the template Infobox newspaper in their English Wikipedia article integrates a text search for the template's name using the MediaWiki API into a SPARQL query #defaultView:Map
SELECT DISTINCT ?item ?itemLabel ?place ?placeLabel ?id ?coords ?article ?rgb WHERE {
 ?c wdt:P279* wd:Q11032 .
  ?item wdt:P31 ?c .
 ?item wdt:P17|wdt:P495 wd:Q30 .
 OPTIONAL{?item wdt:P5454 ?id .}
 ?item wdt:P291 ?place .
 ?place wdt:P625 ?coords.
 OPTIONAL {   
   SELECT ?item ?pageid ?ns WHERE {
    SERVICE wikibase:mwapi {
      bd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam mwapi:generator \"search\" .
      bd:serviceParam mwapi:gsrsearch \"hastemplate:\\\"infobox newspaper\\\"\" .
      bd:serviceParam mwapi:gsrlimit \"max\" .
      ?item wikibase:apiOutputItem mwapi:item .
      ?pageid wikibase:apiOutput \"@pageid\" .
      ?ns wikibase:apiOutput \"@ns\" .
    }
  } LIMIT 15000
 }
    
  OPTIONAL {
      ?article schema:about ?item .
      ?article schema:inLanguage \"en\" .
      FILTER (SUBSTR(str(?article), 1, 25) = \"https://en.wikipedia.org/\")
  }

  BIND( IF(BOUND(?article),   IF(BOUND(?ns), \"009500\" , \"FFF000\" )  ,  \"FF0000\"   )  AS ?rgb).  
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
 Try it! List of all the lakes in Cameroon [edit] The following query uses these:Items: lake (Q23397)   , Cameroon (Q1009)   Properties: instance of (P31)   , subclass of (P279)   , country (P17)   , coordinate location (P625)   , image (P18)    Features: map (Q24515275)  """@en;
  dcterms:isPartOf <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/nl>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/ja>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/zh>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/hy>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/fr>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/tr>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/es>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/uk>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/sv>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced/en>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/advanced>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d86002-wikidata_prefixes, _:genid-4e694113159d4e3db4a1a913894a81d86002-D81F1CE98E4473F9C3F478D160AFC8B9,
    _:genid-4e694113159d4e3db4a1a913894a81d86002-9EE78F1EF168D450D7EB3434B960A9E5, _:genid-4e694113159d4e3db4a1a913894a81d86002-8F470EE494B7CDD334C91C9DE160A4B1,
    _:genid-4e694113159d4e3db4a1a913894a81d86002-1ED5F069D98793AF5C2BD5112EC8C973, _:genid-4e694113159d4e3db4a1a913894a81d86002-16B0CAFA7937C746D14C9DFEBDA9F75F,
    _:genid-4e694113159d4e3db4a1a913894a81d86002-EFCB5E745D489BF5E483490B4A57F361, _:genid-4e694113159d4e3db4a1a913894a81d86002-5FA8A89E7E2D3E513D149C0ADF02970D,
    _:genid-4e694113159d4e3db4a1a913894a81d86002-EE5A145D609A8E71EA9D7BE1DA6FC6B2, _:genid-4e694113159d4e3db4a1a913894a81d86002-F1F3D7FF39F22B9C0A72D7ABD41B2B0E,
    _:genid-4e694113159d4e3db4a1a913894a81d86002-E2B3D797276D0CBEC59E3A49CF1540B8;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
#defaultView:Map
SELECT ?itemLabel ?itemDescription ?image ?coord WHERE {
  ?item (wdt:P31/wdt:P279*) wd:Q23397.
  ?item wdt:P17 wd:Q1009.
  ?item wdt:P625 ?coord.
  OPTIONAL {?item wdt:P18 ?image.}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}""" .
