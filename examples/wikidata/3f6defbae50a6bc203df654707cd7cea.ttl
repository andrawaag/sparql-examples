@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-3f6defbae50a6bc203df654707cd7cea> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org//wiki/Wikidata:Request_a_query/Archive/2018/09>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d848800-wikidata_prefixes;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX schema: <http://schema.org/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?item ?itemLabel ?itemDescription
with { SELECT ?item (count(distinct ?citizenships) as ?citizenship_count) WHERE 
{
  ?item wdt:P106 wd:Q10833314 . # they're a tennis player
  ?item wdt:P27 wd:Q31.         # they're Belgian
  ?item wdt:P27 ?citizenships.  # get any & all of their citizenships - this creates one row per citizenship
} group by ?item  }             # we group by ?item and (see above) count the number of ?citizenships for the item
as %i                           # we take the results of this named query - a list of ?item and ?citizenship_count
where 
{
  include %i                    # and run a second query over the results
  filter (?citizenship_count<2) # rejecting rows where the count is more than 1
  optional {?item rdfs:label ?itemLabel. filter(lang(?itemLabel)=\"fr\")}                     # get labels
  optional {?item schema:description ?itemDescription. filter(lang(?itemDescription)=\"fr\")} # get descriptions
}""";
  <http://example.org/bigdata_select> """SELECT ?item ?itemLabel ?itemDescription
with { SELECT ?item (count(distinct ?citizenships) as ?citizenship_count) WHERE 
{
  ?item wdt:P106 wd:Q10833314 . # they're a tennis player
  ?item wdt:P27 wd:Q31.         # they're Belgian
  ?item wdt:P27 ?citizenships.  # get any & all of their citizenships - this creates one row per citizenship
} group by ?item  }             # we group by ?item and (see above) count the number of ?citizenships for the item
as %i                           # we take the results of this named query - a list of ?item and ?citizenship_count
where 
{
  include %i                    # and run a second query over the results
  filter (?citizenship_count<2) # rejecting rows where the count is more than 1
  optional {?item rdfs:label ?itemLabel. filter(lang(?itemLabel)=\"fr\")}                     # get labels
  optional {?item schema:description ?itemDescription. filter(lang(?itemDescription)=\"fr\")} # get descriptions
}""" .
