@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-4cacbe971bf91698db59e1c2a34b0ec9> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  rdfs:comment " This page is an archive. Please do not modify it. Use the current page, even to continue an old discussion. Contents 1 Comments ? 1.1 Have more pictures, start more concretely, introduce the query editor sooner 2 Question (last items) 3 Count + year 4 Property name 5 Query for non-existent labels 6 Migrate Query Examples from Mediawiki.org 7 Requested query 8 Spouses of Madonna 9 Equality in SPARQL Comments ? @Atlasowa, Jura1, Hsarrazin, TomT0m: The first section of the page (\"Understanding SPARQL\") is an attempt to try to introduce SPARQL enough to get ordinary Wikidata editors up to the point where they can easily follow the examples at mw:Wikibase/Indexing/SPARQL Query Examples - since I feel that page may be more pitched at people who know SPARQL but don't necessarily know so much about Wikidata.I hope I've now achieved a reasonably workable first draft, but would very much welcome comments (and improvements, and rewrites). I hope it works, but I may have written too much -- I don't want to scare people off SPARQL when really, once you've got the basic idea, it can be pretty simple. That simplicity is what I'd like people to come away with, so I hope I haven't hidden it by over-writing. One section that I think at the moment really does need some improving (mostly streamlining and slimming down) is the one about namespaces, so if anyone wants to have a go at that, I would be very grateful.Otherwise, please do let me know what you think, whether you think it works, and what could or should be improved.Thanks, Jheald (talk) 19:48, 21 September 2015 (UTC) Have more pictures, start more concretely, introduce the query editor sooner User:GerardM offered the following suggestions, by email: One thing people need to be told is how to invoke SPARQL. It is the first thing to know. There are so many SPARQL's that it is not obvious. There are other issues. It takes too much for granted and consequently only the people who get past a certain point may understand it and even use it. Many of the assumptions are assumptions for SPARQL and for many people it will only be an engine and not a tool. A tool is what harnesses an engine to produce a result. Most people do not care for p31:q5 .. They care for \"instance of\" \"human\" or \"is een\" \"mens\". When you assume prior knowledge, refer to it at the start. You can help yourself with a liberal sprinkling of images, that will aid understanding. It helps people understand that SPARQL is not English. The Query editor is key to understanding, it is a tool and it demonstrates SPARQL.. It is more important at the beginning than many other fine details. Once people are comfortable with existing queries, when they have their examples on how to modify them, they will be at the stage where making their own queries becomes something that feels like realistic. New more concrete section (Madonna's spouses) added at the top, to try to start to address Gerard's spot-on comments. Jheald (talk) 17:18, 22 September 2015 (UTC) Found it under Wikidata:SPARQL_query_service/queries#Understanding_SPARQL. Screenshot is good. Why not give it a more inviting subsection title like =Hey wikidata, give me a list of the spouses of Madonna!= --Atlasowa (talk) 11:09, 23 September 2015 (UTC) :-) I might leave that to Wiri Jheald (talk) 13:37, 24 September 2015 (UTC) Question (last items) With LIMIT 100, I can get the first 100 items. How do I get the last 100? Or at least entries with a QID beyond Q20000000? --- Jura 17:35, 24 September 2015 (UTC) @Jura1: To get the last 100, first run a query to find out the total number of items, using COUNT; then, to see the last 100 use LIMIT 100 OFFSET n, where n is the total number - 100. For example tinyurl.com/q35bxza. It probably is possible to do the COUNT and the LIMIT in the same query. Alternatively, to see entries with a QID beyond Q20000000, you can I think put FILTER (xsd:integer(STRAFTER(str(?item), \"Q\")) > 20000000) at the end of the SELECT block -- eg tinyurl.com/p7kbajd for some paintings. Jheald (talk) 21:13, 24 September 2015 (UTC) Though this may be the neatest approach to get the most recent 100: tinyurl.com/o9caom4 -- ORDER BY DESC(?qid) LIMIT 100 Jheald (talk) 21:35, 24 September 2015 (UTC) Thanks. That worked for me (Special:Diff/253569079). I really should get to learn sparql syntax. --- Jura 07:23, 25 September 2015 (UTC) Nice. It only just ran within the time-limit though. (90 seconds). Can I suggest putting the query on a sub-page, as per Wikidata:SPARQL_query_service/queries#Showing_only_query_links, which will make it a lot easier to edit and discuss, if you should want to change it? Best, Jheald (talk) 10:31, 25 September 2015 (UTC) I added a filter to have it skip the first items. BTW, I prefer on-page on-site storage. Personally, I'd avoid all those tinyurls. --- Jura 11:35, 29 September 2015 (UTC) @Jura1: I agree that the tinyurls are not the best. What I meant though was to move the query to a sub-page, invoked like this diff. I suppose, on the downside, it means you have to watchlist the sub-page separately, but I think it makes everything a bit more readable. What do you think? Jheald (talk) 12:07, 29 September 2015 (UTC) I think nothing is worse than using tinyurl --- Jura 05:25, 28 October 2015 (UTC) Count + year Hello,I know how to extract the year from a date and count something, but I don't know how to do both. I would like to count the number of people buried in the Père-lachaise cemetery (P119 Q311) by date of death (P570). Pyb (talk) 14:51, 25 September 2015 (UTC) @Pyb: Something like this: tinyurl.com/ne39vru ? Jheald (talk) 15:18, 25 September 2015 (UTC) @Jheald: Oh great. thx. Pyb (talk) 15:30, 25 September 2015 (UTC) Property name Is it possible to retrieve name (label) for ?p property retrieved as p:Pnnn in this query tinyurl.com/okfa2ld? The service SERVICE wikibase:label converts it to link to Wikidata only. Paweł Ziemian (talk) 13:12, 3 October 2015 (UTC) @Paweł Ziemian: Hi Paweł ! Yes it is possible, but there are two things that need to be done. First, SERVICE wikibase:label only finds labels for things in the wd: namespace, so you need to join into the query the underlying entity for the property in the wd: namespace. This can be done by adding the assertion line ?prop wikibase:claim ?p into the query -- the special predicate wikibase:claim connects the wd: namespace entity for the property to its p: namespace respresentation. Unfortunately, the built-in query optimizer finds the assertion ?prop wikibase:claim ?p very very seductive as a place to start -- it sees that there are less than 2500 solutions for this assertion (there being less than 2500 properties), so it thinks that starting the query here will be a good way to focus the query on a really small solution set, right from the start. Unfortunately the next statement, that will connect ?p to the rest of the query, is ?q ?p ?statement, which matches every single property statement in the database, blowing the size of the solution set wide open. Therefore, at least for the present (because in time Blazegraph may be able to fix this), if a query includes an assertion like ?prop wikibase:claim ?p, the second thing which it is necessary to do is to turn off the built-in automatic query optimizer, and instead try to work out by hand the best sequence for the assertions in the query. The key principle is to try to narrow down the size of the running solution set as early as possible, to as small a set as possible. Here's a reordering I made of your query, with a line hint:Query hint:optimizer \"None\" to turn off the built-in optimizer, and including the ?prop wikibase:claim ?p assertion: tinyurl.com/pp3prma I'm telling the query engine to start with a day-specific date, then straight away to try to narrow that down even further by filtering on the day and the month and the year, then to see which statements apply to such dates, and then to filter for those that correspond to items with entries on pl-wiki. There's a bit more about the query optimizer on the page Wikidata:SPARQL_query_service/query_optimization, including how to get a report on the query execution including how big the solution set is at each step, and how long the engine is spending on it; but really the main example there (in the \"A query that has difficulties\" section) is exactly the same case as you have encountered above -- how to add a property label, and to do it without the query timing out. Hope this helps. All best, Jheald (talk) 22:21, 3 October 2015 (UTC) Thanks a lot. Paweł Ziemian (talk) 13:35, 4 October 2015 (UTC) Query for non-existent labels Hi experts! Is it possible to query for items that don't have a label in a certain language? For example, I'm looking for first names without label in English. I tried it by using (with the standard prefixes): "@en;
  dcterms:isPartOf <https://www.wikidata.org//wiki/Wikidata_talk:SPARQL_query_service/queries/Archive/2015>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d833854-wikidata_prefixes;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
SELECT ?name ?name_label WHERE {
  ?name wdt:P31/wdt:P279* wd:Q202444 .
  optional {
  	?name rdfs:label ?name_label filter (!lang(?name_label) = \"en\")
  }
} LIMIT 10""" .
