@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-18055d0564f7a6871e99a0fe6eb23e97> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  rdfs:comment """For many more examples of these queries, see Wikidata:SPARQL query service/queries/examples and Wikidata:SPARQL_query_service/queries. For a tutorial, see User:TweetsFactsAndQueries/A Guide To WDQS. For biomedical query examples, see [1].Also of interest: mw:Help:Extension:KartographerNote to self: Wikidata API can be used to get all properties for up to 50 items at once, e.g. https://www.wikidata.org/w/api.php?action=wbgetentities&ids=Q64%7CQ567&format=json Sub-pages: Global Collections Khalili Collections Memory of the World Electronic Enlightenment and EMLO Hillforts Knowledge equity research project Botanic expeditions From Sappho to Suffrage Screen Nation Booker Prize Calendars Contents 1 Counting stuff on Wikidata 1.1 All Wikidata properties with label and description, ordered numerically 1.2 Variation of the above excluding external IDs (thanks Magnus Sälgö) 1.3 Count of scientific articles 1.4 Count of fictional characters 1.5 Count of items with coordinate locations 1.6 Count of organisations 1.7 Count of labels for a given item, broken down by language 1.8 Women born in the UK 1.9 Women with place of birth: UK 2 Voltaire 2.1 Wikipedia articles about works 2.2 Categorised timeline of works 2.3 Works ordered by how many language versions of Wikipedia have an article about them 3 Economics 3.1 Birthplaces of economists 3.1.1 Dead 3.1.2 Living 3.2 Economics Nobel Laureates' workplace location, with Wikipedia links 3.3 Economics Nobel Laureates' alma mater location 3.4 Specialisms within economics and related nationalities 3.5 Economists with a Project Gutenberg ID and optionally an English Wikisource profile 3.6 Economics awards and their recipients, by year 3.7 Winners of multiple economics awards 3.8 People who won economics awards but are not listed as economists 3.9 Wikidata graph: fields of economics 3.10 Titles of (current) national finance ministers 3.11 Timeline of Chancellors of the Exchequer 3.12 Timeline of Chairs of the US Federal Reserve 3.13 Free trade areas 4 Not Economics 4.1 Stars in flag versus fertility 5 University of Oxford 5.1 Colleges and Permanent Private Halls with coats of arms and official web sites 5.2 How many Wikidata entities were educated at the University of Oxford? 5.3 Notable people educated at colleges of the University of Oxford 5.4 How many Wikidata entities were educated at the University of Oxford or at individual colleges? 5.5 Which of the above are fictional humans? 5.6 Organisations founded by Oxford alumni (including colleges) 5.7 Female graduates of Pembroke College 5.8 Awards won by international female Oxford alumni (including colleges) 5.9 Image grid of international female Oxford alumnae 5.10 Things discovered by Oxford alumni (including colleges & PP halls) 5.11 Recipients of the Bodley Medal 5.12 Recent publications by living staff (or former staff) of the University of Oxford 5.13 Map of things in Oxford colour-coded by type 5.14 Map of things in Oxford and what they are named after 6 English Wikisource 6.1 People with ENWS author profiles 7 Bodleian Libraries collections 7.1 Things in collections of the Bodleian 7.2 Bodleian manuscripts, with images and Commons categories 8 University of Edinburgh 8.1 Notable people whose doctoral advisor was a University of Edinburgh alum (+ academic field) 8.2 Awards won by women who attended the University of Edinburgh 8.3 Awards won by people employed by the University of Edinburgh 8.4 Organisations founded by people born in Edinburgh 9 University of Bristol 9.1 Notable alumni of the University of Bristol whose citizenship is not UK 9.2 Notable people whose doctoral advisor was a University of Bristol alum (+ academic field) 9.3 Notable people whose doctoral advisor was a University of Bristol employee (+ academic field) 9.4 Awards won by alumni of the University of Bristol 9.5 Awards won by people employed by the University of Bristol (at some point in their career) 10 University of Reading 10.1 Awards won by alumni of the University of Reading 11 White Rose Research Online 11.1 Papers online at a White Rose URL but without \"content deliverer: White Rose Research Online\" qualifier 11.2 Papers by University of Leeds researchers with a Wikimedia-compatible licence 12 Universities of the UK 12.1 Map of universities 13 Museums 13.1 Museums with Twitter accounts 13.2 Things that museums are named after 13.3 Global map of art museums, with their web sites 13.4 Map of museums in the UK, with images and web sites 14 History of Science 14.1 Things that stars, galaxies, star clusters and nebulae are named after 14.2 Things that planets and their moons are named after 14.3 Things that spacecraft are named after 14.4 Things that discovered stars 14.5 People who invented scientific instruments 15 Biosphere 15.1 Map of Biosphere reserves with an entry and location in Wikidata but not in English Wikipedia 15.2 Map of Biosphere reserves with an entry and location in Wikidata and an English Wikipedia article 15.3 Biosphere reserves with an entry but no location 16 Music 16.1 Lutenists ordered by year of birth 17 Artworks 17.1 Birthplaces of painters in the Rijksmuseum collection (based on query by Jane Darnell) 17.2 Image gallery of oil paintings from Rijksmuseum 17.3 Visual art works by African-American women 17.4 Trans people in the arts 18 Art venues 18.1 Art venues in the UK, but not pubs 18.2 All art exhibitions known to Wikidata 19 Poems 19.1 Poems from the 18th century, with their authors and languages 19.2 Poems whose text is available online through Wikisource, or elsewhere 19.3 Poets of the Kingdom of Great Britain whose birth and death years are known 19.4 People who wrote a notable poem but do not have \"poet\" included in their occupations 19.5 Notable works (with an English Wikipedia article) by authors who have no notable works 19.6 Works of Florence Earle Coates 20 Films 20.1 Films with \"it\" in the title 21 First lines 21.1 What kinds of things have first lines? 21.2 Poems, their languages, and the languages of their first lines 21.3 Works where the language of the first line differs from the original language of the work 22 Wikisource maintenance 22.1 English Wikisource texts with a Wikidata entry but no indication of what they are 22.2 English Wikisource texts with an \"instance of\": count by type 22.3 Dead people with a Project Gutenberg ID but no English Wikisource profile, whose main language is English 23 Project Gutenberg 23.1 Authors by gender 23.2 Authors by nationality 24 Letters 24.1 Authors of notable letters, by number of letters 24.2 Recipients of notable letters, by number of letters 25 Lifeboat stations 25.1 Map of lifeboat stations, with ownership 25.2 Lifeboat stations lacking a location 26 World War I 26.1 Notable people from a specific region who fought in World War I 26.1.1 Without images 26.1.2 With images 27 Theses 27.1 All doctoral theses 27.2 Authors and their theses 27.3 Doctoral theses without an author 27.4 Doctoral thesis with an author, but the author has no thesis 27.5 Theses imported from Oxford Research Archive 27.6 All properties of theses (query by User:Jheald) 27.7 Oxford doctoral theses by their main topic 28 Sicily 28.1 Archaeological sites with lat-long pairs placing them in Sicily 29 Linguistics 29.1 Things called \"___ phonology\" 30 Greek personal names 30.1 People of Ancient Greece 30.2 Personal names in Ancient Greek of individual Ancient Greek people 31 Cuneiform inscriptions 31.1 Items with a CDLI ID and their English Wikipedia articles 31.2 Items plus Reasonator links 31.3 Labels for CDLI items in all languages 31.4 Commons categories with images of items 32 Ancient Greek pottery 32.1 All ancient Greek pottery items known to Wikidata, with Wikipedia links 32.2 Image gallery of ancient Greek pottery 32.3 Visual graph of types of pottery 33 Shakespeare 33.1 Things named after Shakespeare's characters 34 Translation 34.1 Countries that have a Featured Article on Russian Wikipedia 34.2 Topics with Featured Articles in more than one language 34.3 People that have a Good Article in Spanish Wikipedia but a sub-good article in English Wikipedia 34.4 German women with an article in English Wikipedia but not in German Wikipedia 34.5 Works of Hans Sachs with links to their online text 34.6 South African women on Wikipedia but not on Wikiquote 35 Politicians 35.1 What parliaments does Wikidata know about, and how many parliamentarians from each? 35.2 Places of education of Members of Parliament of the United Kingdom 35.3 Map of House of Commons constituencies 35.4 Places of education of US senators 35.5 Places of education of US Representatives 35.6 Jobs British MPs have had, other than politician or MP 35.7 Jobs held by senators in the US, other than Senator or politician 35.8 Parliaments and most commonly occurring jobs for members of each 35.9 Members of the Whig party 36 Mapping the UK 36.1 Table of \"shares border with\" relations of English, Welsh and Scottish counties 36.2 Map of National Trust properties 36.3 National Trust properties for which Wikidata lacks the official web link 36.4 List of properties marked as owned by National Trust 36.5 \"Shares border with\" relations of UK parliamentary constituencies 37 Mapping globally 37.1 Wikidata Graph Builder 37.2 Very silly map of the contiguous US, as a query 37.3 What kinds of thing have geoshapes? 37.4 Countries, their first-level administrative subdivisions, the total number of subdivisions, and the number with borders to other subdivisions 37.5 Map of US National Parks, including official web sites and Twitter accounts 37.6 Global map of national parks 37.7 Checking which nuclear power stations have Inception and which have Service entry 37.8 Sister-city relations between cities that have millions of inhabitants 37.9 Things that are \"located in\" cities, but very far from those cities 38 Social media 38.1 What kinds of notable things have Twitter accounts? 38.2 What kinds of notable things have Instagram accounts? 38.3 Number of Facebook IDs versus number of Twitter IDs for things that are not people 38.4 Mastodon accounts 39 Fictional worlds 39.1 Overview of types of fictional characters in Wikidata 39.2 Group membership of wizards in the Harry Potter universe 39.3 TreeView Map of houses and groups in the HP universe 39.4 Characters and real people that inspired them 39.5 Characters and what they are named after 39.6 Things that are \"based on\" a person 39.7 Fictional wars 39.8 BBC Television series 40 Doctoral advisor family trees 40.1 Longest (years) chains of doctoral advisors 40.2 Chain between two people 41 Scholarly societies 41.1 Graph of co-membership between scholarly societies 42 UK National Archives 42.1 UKNA IDs of people who studied at Oxford and have an English Wikipedia page 42.2 UKNA links for UK cabinet ministers, with post held 42.3 People who have a UKNA ID and a US NARA ID 43 Taxonomies 43.1 Species and their sitelinks 43.2 Taxa of equivalent rank to Mammal 43.3 Parent taxa of a particular species, with their rank 43.4 'Leaf' taxa, their three super-taxa, and the rank of the highest super-taxon 43.5 Taxons with an eBird identifier (i.e. birds), their Q number and number of Wikipedia articles 43.6 IUCN conservation statuses and number of taxa in Wikidata 43.7 For a given conservation status, taxa in Wikimedia but with no English Wikipedia article 44 Names 44.1 Things called \"cancer\", ordered by number of sitelinks 44.2 Places in France whose names end in \"ange\" 44.3 Phrasebook for types of food 44.4 Things that are described by an English language resource but lack an English label 45 Religious houses 45.1 Monasteries in the United Kingdom 46 Images 46.1 Some things with a Commons category but no specified image 47 China Biographical Database 47.1 CBDB-VIAF mapping 47.2 All non-CBDB IDs for things with a CBDB ID 47.3 Things with a CBDB ID but no country (/ gender) 48 Historic China 49 Geography of India 49.1 Districts and Regions of India (with Geonames) 49.2 Temples and palaces in India 50 Similarity 50.1 Similarities between Calvin and Hobbes 51 Periodic table 51.1 Countries of citizenship of discoverers of elements 51.2 Elements, their discoverers and years of discovery 52 Databases and digital libraries 52.1 Sources of data for research 52.2 Sources of data lacking the Official URL property 53 Wikipedia infoboxes 53.1 Most common properties for a type of item on a given language Wikipedia 54 Wikidata Graphs 54.1 Counts of items in subclasses of literary work 54.2 Wikidata storytelling: Shelley's Guitar 54.3 Wikidata storytelling: Wang Xianzhi and the Ashmolean 54.4 Wikidata storytelling: the Shahnamah 54.5 Wikidata storytelling: astrolabes 54.6 Wikidata storytelling: Cunningham's Law and Godwin's Law 54.7 Wikidata storytelling: the Lanchester family 54.8 Wikidata storytelling: things called \"Sandwich\" 54.9 Attempt at query-driven graph with unspecified properties 54.10 Academic disciplines Counting stuff on Wikidata [edit] Go to Wikidata:Statistics for counts of people, organizations, occurrences etc. All Wikidata properties with label and description, ordered numerically [edit] Adapted from one of the Query Service Examples #title:Wikidata properties in numerical order
SELECT ?property ?propertyType ?propertyLabel ?propertyDescription WHERE {
  ?property wikibase:propertyType ?propertyType .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} ORDER BY ASC(xsd:integer(STRAFTER(STR(?property), 'P')))
 Wikidata properties in numerical order Variation of the above excluding external IDs (thanks Magnus Sälgö) [edit] #title:Wikidata properties excluding external IDs
SELECT ?id ?idLabel ?idDescription ?new{
  ?id wikibase:directClaim ?pid .
 minus{?id wikibase:propertyType wikibase:ExternalId}
  BIND(Replace(STR(?id),\"http://www.wikidata.org/entity/P\",\" \") as ?new)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
ORDER BY DESC(xsd:integer(?new))
 Wikidata properties excluding external IDs Count of scientific articles [edit] SELECT (COUNT(?article) AS ?count)
WHERE {
?article wdt:P31/wdt:P279* wd:Q13442814
}
 Try it! Count of fictional characters [edit] #title:Count of fictional characters
SELECT (COUNT(DISTINCT ?article) AS ?count)
WHERE {?article wdt:P31/wdt:P279* wd:Q95074}
 Count of fictional characters Count of items with coordinate locations [edit] #title:Count of items with coordinate locations
SELECT (COUNT(?item) AS ?count)
WHERE { ?item wdt:P625 [] }
 Count of items with coordinate locations Count of organisations [edit] #title:Count of organizations
SELECT (COUNT(DISTINCT ?obj) AS ?count) WHERE {
?obj wdt:P31/wdt:P279* wd:Q43229
}
 Count of organizations Count of labels for a given item, broken down by language [edit] #title:Number of labels for an item, split by language
SELECT ?q ?langcode ?langLabel (COUNT(?label) AS ?count) WHERE {
VALUES ?q {wd:Q43459}
  ?q (rdfs:label|skos:altLabel) ?label
  BIND(LANG(?label) AS ?langcode)
  ?lang wdt:P218 ?langcode 
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} GROUP BY ?q ?langcode ?langLabel
ORDER BY DESC(?count)
 Number of labels for an item, split by language Women born in the UK [edit] SELECT DISTINCT ?p ?pLabel ?pDescription WHERE {
?p wdt:P31 wd:Q5;
   wdt:P21 wd:Q6581072;
{?p wdt:P19 wd:Q145} # place of birth: UK
  UNION {?p wdt:P19 ?place.
         { ?place wdt:P131?/wdt:P17 wd:Q145 } # places whose country is the UK
         UNION
         { ?place wdt:P131*/wdt:P17?/wdt:P31 wd:Q3336843 } # places whose country is a constituent of the UK
 }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} ORDER BY ?pLabel
 Try it! Women with place of birth: UK [edit] SELECT DISTINCT ?p ?pLabel ?pDescription WHERE {
?p wdt:P31 wd:Q5;
   wdt:P21 wd:Q6581072;
   wdt:P19 wd:Q145.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} ORDER BY ?pLabel
 Try it! Voltaire [edit] Wikipedia articles about works [edit] The following query uses these:Items: Voltaire (Q9068)   Properties: author (P50)   , publication date (P577)   SELECT ?work ?title ?year ?english ?french WHERE {
  ?work wdt:P50 wd:Q9068
OPTIONAL{?work wdt:P577 ?pubdate}
BIND(YEAR(?pubdate) as ?year)
OPTIONAL{ ?english schema:about ?work ; schema:isPartOf <https://en.wikipedia.org/> }
OPTIONAL{ ?french schema:about ?work ; schema:isPartOf <https://fr.wikipedia.org/> }
#OPTIONAL{ ?german schema:about ?work ; schema:isPartOf <https://de.wikipedia.org/> }
OPTIONAL{ ?work rdfs:label ?title filter(lang(?title) = \"en\") }
} Try it! Categorised timeline of works [edit] This query was improved by Navino Evans. The following query uses these:Items: Voltaire (Q9068)   , version, edition or translation (Q3331189)   , anthology (Q105420)   Properties: author (P50)   , instance of (P31)   , image (P18)   , publication date (P577)   SELECT ?workLabel ?pubdate ?pubdatePrecision ?image ?typelabel ?english  
(URI(CONCAT(\"https://tools.wmflabs.org/reasonator/?q=\", SUBSTR(STR(?work),32) )) as ?reasonator) #build a reasonator link
(IF(BOUND(?english), ?english, ?reasonator) as ?link) # link to English Wikipedia article, if available
WHERE {
?work wdt:P50 wd:Q9068; # author: Voltaire
   wdt:P31 ?type; # What is the work? poem, play, historical work etc.? 
   p:P577/psv:P577 ?pubdateStatementNode
MINUS {?work wdt:P31 wd:Q3331189} # exclude editions
MINUS {?work wdt:P31 wd:Q105420} # exclude anthologies
?pubdateStatementNode wikibase:timeValue ?pubdate ;
   wikibase:timePrecision ?pubdatePrecision # get precision of the publication date
OPTIONAL {?work wdt:P18 ?image}
OPTIONAL{ ?english schema:about ?work ; schema:isPartOf <https://en.wikipedia.org/> }
SERVICE wikibase:label {bd:serviceParam wikibase:language \"fr,en,de\"} # Prefer labels in French but fall back to English and German
?type rdfs:label ?typelabel FILTER(lang(?typelabel) =\"en\") # English labels for the types
} Try it! The above timeline in Histropedia's Wikidata query viewer Works ordered by how many language versions of Wikipedia have an article about them [edit] SELECT ?work ?workLabel (COUNT(DISTINCT ?sitelink) as ?linkcount) WHERE {
  ?work wdt:P50 wd:Q9068.  # works by Voltaire
MINUS {?work wdt:P31 wd:Q39811647} # translations
MINUS {?work wdt:P31 wd:Q3331189} # editions
MINUS {?work wdt:P31 wd:Q105420} # anthologies
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,de\". }
OPTIONAL{?sitelink schema:about ?work . # get Wikimedia pages about the work
FILTER(CONTAINS(str(?sitelink), \".wikipedia.org/\")) } # only Wikipedia links
} GROUP BY ?work ?workLabel ORDER BY DESC(?linkcount)
 Try it! Economics [edit] Birthplaces of economists [edit] On 28 April 2016: 2062 found for occupation:economist 4997 found for occupation:economist or field:economics 4969 found for occupation:economist or field:economics minus double-counting. DISTINCT had no effect. Still some duplicate rows due to some places having multiple co-ordinates 03 June 2016: 6868 results. No change in the query explains the extra couple of thousand. Just more data? 02 November 2016: 8832 results. The map was getting frustratingly slow, and sometimes timing out, so I've split it into two. Dead [edit] The following query uses these:Items: economist (Q188094)   , economics (Q8134)   Properties: occupation (P106)   , field of work (P101)   , date of death (P570)   , place of birth (P19)   , coordinate location (P625)   , date of birth (P569)    Features: map (Q24515275)  #defaultView:Map{\"hide\": [\"?coord\", \"?layer\"]}
SELECT DISTINCT ?person ?name ?birthplace ?birthyear ?coord ?layer WHERE {
   {?person wdt:P106 wd:Q188094} UNION {?person wdt:P101 wd:Q8134} MINUS {?person wdt:P106 wd:Q188094; wdt:P101 wd:Q8134}
   ?person wdt:P570 ?dod;
     wdt:P19 ?place .
   ?place wdt:P625 ?coord
   OPTIONAL { ?person wdt:P569 ?dob }
   BIND(YEAR(?dob) as ?birthyear)
  BIND(IF( (?birthyear < 1700), \"Pre-1700\", IF((?birthyear < 1751), \"1700-1750\", IF((?birthyear < 1801), \"1751-1800\", IF((?birthyear < 1851), \"1801-1850\", IF((?birthyear < 1901), \"1851-1900\", IF((?birthyear < 1951), \"1901-1950\", \"Post-1950\") ) ) ) )) AS ?layer )
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".?person rdfs:label ?name. ?place rdfs:label ?birthplace }
} ORDER BY ?birthyear Try it! Living [edit] The following query uses these:Items: economist (Q188094)   , economics (Q8134)   Properties: occupation (P106)   , field of work (P101)   , place of birth (P19)   , coordinate location (P625)   , date of birth (P569)   , date of death (P570)    Features: map (Q24515275)  #defaultView:Map{\"hide\": [\"?coord\"]}
SELECT ?coord ?birthyear ?birthplace ?name ?person WHERE {
   {?person wdt:P106 wd:Q188094 } UNION {?person wdt:P101 wd:Q8134} MINUS {?person wdt:P106 wd:Q188094; wdt:P101 wd:Q8134}
   ?person wdt:P19 ?place .
   ?place wdt:P625 ?coord .
   OPTIONAL { ?person wdt:P569 ?dob }.
   MINUS { ?person wdt:P570 ?dod }.
   BIND(YEAR(?dob) as ?birthyear).
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?person rdfs:label ?name. ?place rdfs:label ?birthplace}
} Try it! Economics Nobel Laureates' workplace location, with Wikipedia links [edit] The following query uses these:Items: Prize in Economic Sciences in Memory of Alfred Nobel (Q47170)   , fictional human (Q15632617)   Properties: award received (P166)   , employer (P108)   , coordinate location (P625)   , image (P18)   , instance of (P31)   , subclass of (P279)    Features: map (Q24515275)  #defaultView:Map{\"hide\": [\"?coord\"]}
SELECT ?name ?coord ?image ?workplace ?article WHERE {
?person wdt:P166 wd:Q47170 ;
     wdt:P108 ?place .
?place wdt:P625 ?coord
OPTIONAL{ ?person wdt:P18 ?image }
OPTIONAL{ ?article schema:about ?person ; schema:isPartOf <https://en.wikipedia.org/> }
MINUS{ ?person wdt:P31/wdt:P279? wd:Q15632617 } # exclude fictional people
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?place rdfs:label ?workplace. ?person rdfs:label ?name}
} Try it! Economics Nobel Laureates' alma mater location [edit] The following query uses these:Items: Prize in Economic Sciences in Memory of Alfred Nobel (Q47170)   , fictional human (Q15632617)   Properties: award received (P166)   , educated at (P69)   , coordinate location (P625)   , image (P18)   , instance of (P31)   , subclass of (P279)    Features: map (Q24515275)  #defaultView:Map{\"hide\": [\"?coord\"]}
SELECT ?name ?coord ?image ?almamater ?article WHERE {
?person wdt:P166 wd:Q47170 ;
        wdt:P69 ?place .
?place wdt:P625 ?coord
OPTIONAL{ ?person wdt:P18 ?image }
OPTIONAL{ ?article schema:about ?person ; schema:isPartOf <https://en.wikipedia.org/> }
MINUS{ ?person wdt:P31/wdt:P279? wd:Q15632617 } # Exclude fictional people
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?place rdfs:label ?almamater. ?person rdfs:label ?name}
} Try it! Specialisms within economics and related nationalities [edit] The following query uses these:Items: economics (Q8134)   , fictional human (Q15632617)   Properties: field of work (P101)   , country of citizenship (P27)   , subclass of (P279)   , instance of (P31)   SELECT ?person ?name ?field ?fieldname ?nationality WHERE {
   ?person wdt:P101 ?field; #?field = Q39680 for macroeconomics # Q39072 for microeconomics
     wdt:P27 ?place .
   ?field wdt:P279+ wd:Q8134 .
   ?person rdfs:label ?name filter (lang(?name) = \"en\")
   ?place rdfs:label ?nationality filter (lang(?nationality) = \"en\")
   ?field rdfs:label ?fieldname filter (lang(?fieldname) = \"en\")
MINUS{ ?person wdt:P31/wdt:P279? wd:Q15632617 } # exclude fictional people
} ORDER BY ASC(?fieldname) Try it! Only four with field:macroeconomics One with field:microeconomics Economists with a Project Gutenberg ID and optionally an English Wikisource profile [edit] The following query uses these:Items: economist (Q188094)   , economics (Q8134)   Properties: occupation (P106)   , field of work (P101)   , Project Gutenberg author ID (P1938)   , Online Books Page author ID (P4629)   SELECT DISTINCT ?person ?name ?birthyear ?deathyear ?enws ?quotes ?commonscat
(URI(CONCAT(\"https://www.gutenberg.org/ebooks/author/\", ?gutenberg_id)) AS ?gutenberg) 
(URI(CONCAT(\"https://doi.org/10.1093/ref:odnb/\", ?odnb)) AS ?odnburl)
(URI(CONCAT(\"http://onlinebooks.library.upenn.edu/webbin/book/lookupname?key=\", ?books)) AS ?booksurl)
(URI(CONCAT(\"https://www.britannica.com/\", ?britannica)) AS ?britannicaurl) ?npg WHERE {
{ ?person wdt:P106 wd:Q188094 }
UNION
{ ?person wdt:P101 wd:Q8134 }
OPTIONAL {?person wdt:P1938 ?gutenberg_id}
OPTIONAL { ?person wdt:P4629 ?books }
OPTIONAL {
  ?enws schema:about ?person;
  schema:isPartOf <https://en.wikisource.org/>
}
FILTER (BOUND(?enws) Try it! Economics awards and their recipients, by year [edit] The following query uses these:Items: economics award (Q17701409)   , fictional human (Q15632617)   Properties: instance of (P31)   , subclass of (P279)   , award received (P166)   , point in time (P585)   SELECT DISTINCT ?person ?personLabel ?award ?awardLabel ?year WHERE {
  ?person p:P166 ?statement.
  ?statement ps:P166 ?award.
  ?award wdt:P31 wd:Q17701409 
  OPTIONAL { ?statement pq:P585 ?date. BIND(YEAR(?date) AS ?year) }
MINUS{ ?person wdt:P31/wdt:P279? wd:Q15632617 } # exclude fictional people
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} ORDER BY ASC(?awardLabel) ASC(?year) Try it! Winners of multiple economics awards [edit] The following query uses these:Items: economics award (Q17701409)   Properties: award received (P166)   , instance of (P31)   SELECT DISTINCT ?person ?personLabel (COUNT(?award) AS ?awards) (GROUP_CONCAT(?awardLabel; separator=\", \") as ?list) WHERE {
  ?person wdt:P166 ?award.
  ?award wdt:P31 wd:Q17701409 
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . ?award rdfs:label ?awardLabel . ?person rdfs:label ?personLabel }
} GROUP BY ?person ?personLabel
HAVING ( ?awards > 1 )
ORDER BY DESC(?awards) Try it! People who won economics awards but are not listed as economists [edit] The following query uses these:Items: economics award (Q17701409)   , economist (Q188094)   , fictional human (Q15632617)   Properties: instance of (P31)   , occupation (P106)   , subclass of (P279)   , award received (P166)   , point in time (P585)   SELECT DISTINCT ?person ?personLabel ?award ?awardLabel ?year WHERE {
  ?person p:P166 ?statement.
  ?statement ps:P166 ?award.
  ?award wdt:P31 wd:Q17701409 
  MINUS { ?person wdt:P106 wd:Q188094 }
MINUS{ ?person wdt:P31/wdt:P279? wd:Q15632617 } # exclude fictional people
  OPTIONAL { ?statement pq:P585 ?date. BIND(YEAR(?date) AS ?year) }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} ORDER BY ASC(?awardLabel) ASC(?year) Try it! Wikidata graph: fields of economics [edit] Needs a lot of work Note to self: do one for types of economy, too Titles of (current) national finance ministers [edit] The following query uses these:Items: finance minister (Q7614320)   Properties: subclass of (P279)   , country (P17)   , dissolved, abolished or demolished date (P576)   , applies to jurisdiction (P1001)   SELECT ?countryLabel ?postLabel ?post WHERE {
?post wdt:P279 wd:Q7614320;
         wdt:P17 ?country
MINUS{ ?post wdt:P576 [] } # Exclude abolished posts
OPTIONAL{ ?post wdt:P1001 ?jurisdiction }
FILTER( !(BOUND(?jurisdiction) && ?jurisdiction != ?country) )
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} ORDER BY ?countryLabel Try it! Timeline of Chancellors of the Exchequer [edit] #title:Chancellors of the Exchequer and time served in office
SELECT ?item ?itemLabel ?start ?end ?image ?link ?partyLabel WHERE {
  ?item p:P39 ?s.?s ps:P39 wd:Q531471.
  ?s pq:P580 ?start. OPTIONAL {?s pq:P582 ?end}
  OPTIONAL {?item wdt:P18 ?image}
  OPTIONAL {?item wdt:P1417 ?id}
  OPTIONAL {?item wdt:P102 ?party}
  BIND(IF(BOUND(?id), URI(CONCAT(\"https://www.britannica.com/\",?id)) , ?item) AS ?link)
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} ORDER BY ?start
 Chancellors of the Exchequer and time served in office This query as a Histropedia timeline Timeline of Chairs of the US Federal Reserve [edit] #title:Chairs of the US Federal Reserve and time spent in office
SELECT ?item ?itemLabel ?start ?end ?image ?link ?nominatedLabel WHERE {
  ?item p:P39 ?s.?s ps:P39 wd:Q2666591.
  ?s pq:P580 ?start. OPTIONAL {?s pq:P582 ?end}
  OPTIONAL {?item wdt:P18 ?image}
  OPTIONAL {?item wdt:P1417 ?id}
  OPTIONAL {?s pq:P4353 ?nominated}
  BIND(IF(BOUND(?id), URI(CONCAT(\"https://www.britannica.com/\",?id)) , ?item) AS ?link)
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} ORDER BY ?start
 Chairs of the US Federal Reserve and time spent in office This query as a Histropedia timeline Free trade areas [edit] SELECT ?c ?cLabel ?item ?itemLabel WHERE {
?item wdt:P31 wd:Q5335686.
?c wdt:P463 ?item
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} ORDER BY ?itemLabel
 Try it! Not Economics [edit] Stars in flag versus fertility [edit] SELECT ?iso ?countryLabel (SUM(?stars) as ?stars) ?fertility WHERE {
{SELECT DISTINCT ?country ?iso WHERE {
VALUES ?countrytypes {wd:Q6256 wd:Q3624078} # country and sovereign state
?country wdt:P31 ?countrytypes ; wdt:P298 ?iso
MINUS {?country wdt:P576 []} # Not dissolved
}  }
?country wdt:P163 ?flag.
OPTIONAL{
?flag p:P180 [ps:P180 ?feature ; pq:P1114 ?stars] . # quantity of feature
?feature wdt:P279? wd:Q836708  # type of star polygon
}
OPTIONAL { ?country wdt:P4841 ?fertility }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} GROUP BY ?iso ?countryLabel ?fertility
ORDER BY DESC(?stars) ?countryLabel
 Try it! University of Oxford [edit] Colleges and Permanent Private Halls with coats of arms and official web sites [edit] The following query uses these:Items: college of the University of Oxford (Q2581649)   , Permanent Private Hall (Q3338504)   Properties: instance of (P31)   , dissolved, abolished or demolished date (P576)   , coordinate location (P625)   , coat of arms image (P94)   , official website (P856)   , headquarters location (P159)    Features: map (Q24515275)  #defaultView:Map{\"hide\": [\"?location\"]}
SELECT DISTINCT ?web ?collegeLabel (IF(BOUND(?hq), ?hq, ?coord) as ?location) ?arms WHERE {
  {?college wdt:P31 wd:Q2581649} UNION {?college wdt:P31 wd:Q3338504}
  MINUS {?college wdt:P576 []}
  OPTIONAL { ?college p:P159/pq:P625 ?hq }
  OPTIONAL { ?college wdt:P625 ?coord }
 ?college wdt:P94 ?arms;
          wdt:P856 ?web
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! How many Wikidata entities were educated at the University of Oxford? [edit] The following query uses these:Items: University of Oxford (Q34433)   Properties: educated at (P69)   SELECT (COUNT(?alum) AS ?count)
WHERE
{
	?alum wdt:P69 wd:Q34433. 
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! Notable people educated at colleges of the University of Oxford [edit] The following query uses these:Items: college of the University of Oxford (Q2581649)   , Permanent Private Hall (Q3338504)   , fictional human (Q15632617)   Properties: instance of (P31)   , educated at (P69)   SELECT ?college ?collegeLabel (COUNT(DISTINCT ?alum) AS ?count)
WHERE {
{?college wdt:P31 wd:Q2581649} UNION {?college wdt:P31 wd:Q3338504}. # college or private hall
?alum wdt:P69 ?college.
MINUS { ?alum wdt:P31 wd:Q15632617 } # Exclude fictional people
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\".
                        ?college rdfs:label ?collegeLabel }
} GROUP BY ?college ?collegeLabel
ORDER BY DESC(?count) Try it! How many Wikidata entities were educated at the University of Oxford or at individual colleges? [edit] The following query uses these:Items: University of Oxford (Q34433)   , college of the University of Oxford (Q2581649)   Properties: educated at (P69)   , instance of (P31)   SELECT (COUNT(?alum) AS ?count)
WHERE {
	{ ?alum wdt:P69 wd:Q34433 }
UNION { ?alum wdt:P69/wdt:P31 wd:Q2581649 }
} Try it! Which of the above are fictional humans? [edit] The following query uses these:Items: fictional human (Q15632617)   , University of Oxford (Q34433)   , college of the University of Oxford (Q2581649)   Properties: instance of (P31)   , educated at (P69)   SELECT ?alum ?alumLabel ?alumDescription ?college ?collegeLabel
WHERE {
	?alum wdt:P31 wd:Q15632617
{?alum wdt:P69 wd:Q34433 }
UNION {?college wdt:P31 wd:Q2581649.
        ?alum wdt:P69 ?college}
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! Organisations founded by Oxford alumni (including colleges) [edit] The following query uses these:Items: University of Oxford (Q34433)   , college of the University of Oxford (Q2581649)   , Permanent Private Hall (Q3338504)   Properties: educated at (P69)   , instance of (P31)   , founded by (P112)   SELECT DISTINCT ?alum ?alumLabel ?collegeLabel ?org ?orgLabel
WHERE {
	{?alum wdt:P69 wd:Q34433 }
UNION { {?college wdt:P31 wd:Q2581649} UNION {?college wdt:P31 wd:Q3338504}.
        ?alum wdt:P69 ?college.}
        ?org wdt:P112 ?alum.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} ORDER BY ASC(?alumLabel) Try it! Female graduates of Pembroke College [edit] The following query uses these:Items: human (Q5)   , female (Q6581072)   , Pembroke College (Q82606)   Properties: instance of (P31)   , sex or gender (P21)   , educated at (P69)   SELECT ?person ?personLabel ?personDescription ?englishwp WHERE {
?person wdt:P31 wd:Q5; # human
        wdt:P21 wd:Q6581072; # sex or gender: female
        wdt:P69 wd:Q82606. # Educated at Pembroke College, Oxford
OPTIONAL {?englishwp schema:about ?person; schema:isPartOf <https://en.wikipedia.org/> } # English Wikipedia page
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} ORDER BY ?personLabel Try it! Awards won by international female Oxford alumni (including colleges) [edit] The following query uses these:Items: University of Oxford (Q34433)   , college of the University of Oxford (Q2581649)   , female (Q6581072)   , United Kingdom (Q145)   Properties: educated at (P69)   , instance of (P31)   , award received (P166)   , sex or gender (P21)   , country of citizenship (P27)   SELECT DISTINCT ?alum ?alumLabel ?award ?awardLabel
WHERE {
	{?alum wdt:P69 wd:Q34433 }
UNION {?college wdt:P31 wd:Q2581649.
        ?alum wdt:P69 ?college}
        ?alum wdt:P166 ?award.
        ?alum wdt:P21 wd:Q6581072 .
       MINUS { ?alum wdt:P27 wd:Q145 }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} ORDER BY ASC(?awardLabel) Try it! Image grid of international female Oxford alumnae [edit] #defaultView:ImageGrid{\"hide\":[\"?image\"]}
SELECT DISTINCT ?alum ?alumLabel ?alumDescription ?image
WHERE {
	{?alum wdt:P69 wd:Q34433 .}
UNION {?college wdt:P31 wd:Q2581649.
        ?alum wdt:P69 ?college.}
        ?alum wdt:P21 wd:Q6581072 .
       MINUS { ?alum wdt:P27 wd:Q145 }.
    OPTIONAL {?alum wdt:P18 ?image }.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! Things discovered by Oxford alumni (including colleges & PP halls) [edit] The following query uses these:Items: University of Oxford (Q34433)   , college of the University of Oxford (Q2581649)   , Permanent Private Hall (Q3338504)   Properties: educated at (P69)   , instance of (P31)   , discoverer or inventor (P61)   SELECT DISTINCT ?alum ?alumLabel ?collegeLabel ?discovered ?discoveredLabel
WHERE {
	{?alum wdt:P69 wd:Q34433 }
UNION { { ?college wdt:P31 wd:Q2581649 } UNION { ?college wdt:P31 wd:Q3338504 }
        ?alum wdt:P69 ?college }
        ?discovered wdt:P61 ?alum
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} ORDER BY ASC( ?alumLabel ) Try it! Recipients of the Bodley Medal [edit] The following query uses these:Items: Bodley Medal (Q4936657)   Properties: award received (P166)   SELECT ?winner ?winnerLabel ?winnerDescription
WHERE {
	?winner wdt:P166 wd:Q4936657.
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! Recent publications by living staff (or former staff) of the University of Oxford [edit] The following query uses these:Items: University of Oxford (Q34433)   , college of the University of Oxford (Q2581649)   , Permanent Private Hall (Q3338504)   Properties: employer (P108)   , instance of (P31)   , date of death (P570)   , author (P50)   , publication date (P577)   SELECT DISTINCT ?authorLabel ?publication ?publicationLabel ?date 
WHERE {
      { ?author wdt:P108 wd:Q34433 } # Listed as employees of the university
UNION { {?college wdt:P31 wd:Q2581649 } UNION { ?college wdt:P31 wd:Q3338504 }.
        ?author wdt:P108 ?college } # Listed as employees of a college or hall
        MINUS{ ?author wdt:P570 ?date } # No death date
        ?publication wdt:P50 ?author 
	OPTIONAL { ?publication wdt:P577 ?date }
  
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} ORDER BY DESC(?date) Try it! Map of things in Oxford colour-coded by type [edit] #defaultView:Map{\"hide\": [\"?location\"]}
SELECT ?place ?placeLabel (SAMPLE(?loc) AS ?location) ?layer WHERE {
?place wdt:P131 wd:Q34217;
       wdt:P31 ?type.
MINUS { ?place wdt:P576 [] } # Not closed down
OPTIONAL { ?place wdt:P625 ?coords }
OPTIONAL { ?place p:P159/pq:P625 ?hqcoords }
BIND (IF (BOUND(?coords), ?coords, ?hqcoords) AS ?loc)
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?type rdfs:label ?layer.?place rdfs:label ?placeLabel }
} GROUP BY ?place ?placeLabel ?layer
 Try it! Map of things in Oxford and what they are named after [edit] #defaultView:Map{\"hide\": [\"?location\"]}
SELECT ?person ?personLabel (SAMPLE(?img) AS ?image) (SAMPLE(?loc) AS ?location) ?placeLabel WHERE {
?place wdt:P131 wd:Q34217;
       wdt:P138 ?person FILTER (?person != wd:Q34217).
OPTIONAL { ?place wdt:P625 ?coords }
OPTIONAL { ?place p:P159/pq:P625 ?hqcoords }
BIND (IF (BOUND(?coords), ?coords, ?hqcoords) AS ?loc)
OPTIONAL { ?person wdt:P18 ?img }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} GROUP BY ?person ?personLabel ?placeLabel
 Try it! English Wikisource [edit] People with ENWS author profiles [edit] SELECT ?person ?enws WHERE {
?person wdt:P31 wd:Q5.
?enws schema:about ?person;
schema:isPartOf <https://en.wikisource.org/> FILTER CONTAINS(STR(?enws), \"Author:\")
} ORDER BY ?enws
 Try it! Bodleian Libraries collections [edit] See also commons:Category:Bodleian_Library_manuscripts and w:en:Category:Bodleian_Library_collection Things in collections of the Bodleian [edit] The following query uses these:Items: Bodleian Library (Q82133)   , Bodleian Libraries (Q16147979)   Properties: collection (P195)   , inventory number (P217)   , inception (P571)   , language of work or name (P407)   SELECT DISTINCT ?thing ?thingLabel (GROUP_CONCAT(DISTINCT ?year; separator=\", \") as ?years) ?shelfmark (GROUP_CONCAT(DISTINCT ?langLabel ; separator=\", \") as ?languages) WHERE {
{ ?thing wdt:P195 wd:Q82133} UNION { ?thing p:P217/pq:P195 wd:Q82133 } #wd:Q16147979 
OPTIONAL {?thing wdt:P217 ?shelfmark}
OPTIONAL {?thing wdt:P571 ?date. BIND(YEAR(?date) AS ?year) }
OPTIONAL {?thing wdt:P407 ?lang }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . ?thing rdfs:label ?thingLabel . ?lang rdfs:label ?langLabel }
} GROUP BY ?thing ?thingLabel ?shelfmark
ORDER BY ?thingLabel Try it! Bodleian manuscripts, with images and Commons categories [edit] The following query uses these:Items: Bodleian Library (Q82133)   , manuscript (Q87167)   , illuminated manuscript (Q48498)   Properties: collection (P195)   , instance of (P31)   , image (P18)   , Commons category (P373)   , inventory number (P217)   SELECT DISTINCT ?thing ?thingLabel ?image (URI(CONCAT(\"https://commons.wikimedia.org/wiki/Category:\",?cat) ) AS ?commons) WHERE {
{ ?thing wdt:P195 wd:Q82133 } UNION { ?thing p:P217/pq:P195 wd:Q82133 }
{ ?thing wdt:P31 wd:Q87167 } UNION { ?thing wdt:P31 wd:Q48498 }
OPTIONAL { ?thing wdt:P18 ?image }
OPTIONAL { ?thing wdt:P373 ?cat }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} ORDER BY ?thingLabel Try it! University of Edinburgh [edit] Notable people whose doctoral advisor was a University of Edinburgh alum (+ academic field) [edit] The following query uses these:Items: University of Edinburgh (Q160302)   Properties: educated at (P69)   , doctoral advisor (P184)   , field of work (P101)   SELECT ?alum ?alumLabel ?supervisee ?superviseeLabel ?fieldLabel
WHERE {
	?alum wdt:P69 wd:Q160302. 
        ?supervisee wdt:P184 ?alum.
        OPTIONAL {?supervisee wdt:P101 ?field.}
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! Awards won by women who attended the University of Edinburgh [edit] The following query uses these:Items: University of Edinburgh (Q160302)   , female (Q6581072)   Properties: educated at (P69)   , sex or gender (P21)   , award received (P166)   SELECT ?alum ?alumLabel ?award ?awardLabel
WHERE {
?alum wdt:P69 wd:Q160302; 
  wdt:P21 wd:Q6581072;
  wdt:P166 ?award.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! Awards won by people employed by the University of Edinburgh [edit] The following query uses these:Items: University of Edinburgh (Q160302)   Properties: employer (P108)   , award received (P166)   SELECT ?alum ?alumLabel ?award ?awardLabel
WHERE {
?alum wdt:P108 wd:Q160302; 
  wdt:P166 ?award.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! Organisations founded by people born in Edinburgh [edit] The following query uses these:Items: Edinburgh (Q23436)   Properties: place of birth (P19)   , founded by (P112)   SELECT ?alum ?alumLabel ?org ?orgLabel
WHERE
{
	?alum wdt:P19 wd:Q23436. 
        ?org wdt:P112 ?alum.
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! University of Bristol [edit] Notable alumni of the University of Bristol whose citizenship is not UK [edit] The following query uses these:Items: University of Bristol (Q459506)   , United Kingdom (Q145)   Properties: educated at (P69)   , country of citizenship (P27)   SELECT ?nationality ?nationalityLabel ?alum ?alumLabel ?alumDescription
WHERE {
	?alum wdt:P69 wd:Q459506. 
       ?alum wdt:P27 ?nationality.
       MINUS { ?alum wdt:P27 wd:Q145 } 
       OPTIONAL { ?alum schema:description ?alumDescription FILTER (lang(?alumDescription) = \"en\").}
	   OPTIONAL { ?alum rdfs:label ?alumLabel FILTER (lang(?alumLabel) = \"en\").}
  	   OPTIONAL { ?nationality rdfs:label ?nationalityLabel FILTER (lang(?nationalityLabel) = \"en\")}
}
ORDER BY ?nationalityLabel Try it! Notable people whose doctoral advisor was a University of Bristol alum (+ academic field) [edit] The following query uses these:Items: University of Bristol (Q459506)   Properties: educated at (P69)   , doctoral advisor (P184)   , field of work (P101)   SELECT ?alum ?alumLabel ?supervisee ?superviseeLabel ?fieldLabel
WHERE
{
	?alum wdt:P69 wd:Q459506. 
        ?supervisee wdt:P184 ?alum.
        OPTIONAL {?supervisee wdt:P101 ?field.}
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! Notable people whose doctoral advisor was a University of Bristol employee (+ academic field) [edit] The following query uses these:Items: University of Bristol (Q459506)   Properties: employer (P108)   , doctoral advisor (P184)   , field of work (P101)   SELECT ?alum ?alumLabel ?supervisee ?superviseeLabel ?fieldLabel
WHERE
{
	?alum wdt:P108 wd:Q459506. 
        ?supervisee wdt:P184 ?alum.
        OPTIONAL {?supervisee wdt:P101 ?field.}
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! Awards won by alumni of the University of Bristol [edit] The following query uses these:Items: University of Bristol (Q459506)   Properties: educated at (P69)   , award received (P166)   SELECT ?alum ?alumLabel ?award ?awardLabel
WHERE
{
	?alum wdt:P69 wd:Q459506. 
        ?alum wdt:P166 ?award.
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} ORDER BY ?awardLabel Try it! Awards won by people employed by the University of Bristol (at some point in their career) [edit] The following query uses these:Items: University of Bristol (Q459506)   Properties: employer (P108)   , award received (P166)   SELECT ?alum ?alumLabel ?award ?awardLabel
WHERE
{
	?alum wdt:P108 wd:Q459506. 
        ?alum wdt:P166 ?award.
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} ORDER BY ?awardLabel Try it! University of Reading [edit] Awards won by alumni of the University of Reading [edit] The following query uses these:Items: University of Reading (Q1432632)   Properties: educated at (P69)   , award received (P166)   SELECT ?alum ?alumLabel ?awardLabel WHERE {
  ?alum wdt:P69 wd:Q1432632 .
  ?alum wdt:P166 ?award .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} ORDER BY ?alumLabel Try it! White Rose Research Online [edit] Papers online at a White Rose URL but without \"content deliverer: White Rose Research Online\" qualifier [edit] SELECT ?item ?itemLabel WHERE {
?item p:P953 ?s. ?s ps:P953 ?url FILTER (CONTAINS( STR(?url), \"eprints.whiterose.ac.uk\") )
MINUS {?s pq:P3274 wd:Q24753667 }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
 Try it! Papers by University of Leeds researchers with a Wikimedia-compatible licence [edit] #title:scholarly papers by University of Leeds researchers in White Rose repository with a free licence
SELECT DISTINCT ?paper ?paperLabel ?licenceLabel ?fulltext WHERE {
  ?author wdt:P108 wd:Q503424.   # Employee of University of Leeds
  ?paper wdt:P31 wd:Q13442814; wdt:P50 ?author.   # scholarly article by this author
  VALUES ?freelicence {wd:Q6905323 wd:Q6905942}   # CC-BY or CC-BY-SA
  ?paper wdt:P275 ?licence . ?licence wdt:P629? ?freelicence.  # Article has this licence, or a specific edition such as CC-BY 3.0
  ?paper wdt:P953 ?fulltext FILTER(CONTAINS(STR(?fulltext), \"whiterose.ac.uk\"))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\"}
} ORDER BY ?paper
 scholarly papers by University of Leeds researchers in White Rose repository with a free licence Universities of the UK [edit] Map of universities [edit] The following query uses these:Items: public university (Q875538)   , private university (Q902104)   , university (Q3918)   , United Kingdom (Q145)   Properties: instance of (P31)   , country (P17)   , official website (P856)   , coordinate location (P625)   , dissolved, abolished or demolished date (P576)   , located in the administrative territorial entity (P131)   SELECT ?uni ?uniLabel ?loc ?link ?layer ?countyLabel WHERE {
VALUES ?type {wd:Q875538 wd:Q902104 wd:Q3918}
?uni wdt:P31 ?type;
     wdt:P17 wd:Q145;
     wdt:P856 ?link;
     wdt:P625 ?loc.
?type rdfs:label ?layer FILTER(Lang(?layer)='en').
MINUS {?uni wdt:P576 []}
OPTIONAL {?uni wdt:P131 ?county} 
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! Museums [edit] Museums with Twitter accounts [edit] plus optional Instagram and Facebook The following query uses these:Items: museum (Q33506)   Properties: instance of (P31)   , subclass of (P279)   , X username (P2002)   , country (P17)   , Facebook username (P2013)   , Instagram username (P2003)   SELECT DISTINCT ?museum ?museumLabel ?countryLabel (URI(CONCAT(\"https://www.facebook.com/\",?facebook)) AS ?facebooklink) (URI(CONCAT(\"https://www.instagram.com/\",?instagram)) AS ?instagramlink) (URI(CONCAT(\"https://twitter.com/\",?twitter)) AS ?twitterlink)
WHERE {
?museum wdt:P31/wdt:P279* wd:Q33506;
  wdt:P2002 ?twitter.
OPTIONAL { ?museum wdt:P17 ?country}
OPTIONAL { ?museum wdt:P2013 ?facebook}
OPTIONAL { ?museum wdt:P2003 ?instagram}
SERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl,fr,de,es,pt,bg,be,ru,hu,uk,ja\"}
} ORDER BY ?countryLabel ?museumLabel Try it! Things that museums are named after [edit] The following query uses these:Items: museum (Q33506)   Properties: instance of (P31)   , subclass of (P279)   , named after (P138)   , country (P17)   SELECT DISTINCT ?museum ?museumLabel ?countryLabel ?named ?namedLabel ?namedDescription
WHERE {
?museum wdt:P31/wdt:P279* wd:Q33506;
  wdt:P138 ?named.
OPTIONAL { ?museum wdt:P17 ?country}
SERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl,fr,de,es,pt,bg,be,ru,hu,uk,ja\"}
} ORDER BY ?countryLabel ?museumLabel Try it! Global map of art museums, with their web sites [edit] The following query uses these:Items: art museum (Q207694)   Properties: instance of (P31)   , coordinate location (P625)   , image (P18)   , official website (P856)    Features: map (Q24515275)  #defaultView:Map
SELECT DISTINCT ?museum ?museumLabel ?coord ?image ?web
WHERE {
?museum wdt:P31 wd:Q207694;
   wdt:P625 ?coord .
OPTIONAL {?museum wdt:P18 ?image}.
OPTIONAL {?museum wdt:P856 ?web}.
SERVICE wikibase:label {bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,nl,fr,de,es,pt\"}
} Try it! Map of museums in the UK, with images and web sites [edit] The following query uses these:Items: museum (Q33506)   , United Kingdom (Q145)   Properties: instance of (P31)   , subclass of (P279)   , country (P17)   , coordinate location (P625)   , official website (P856)   , image (P18)    Features: map (Q24515275)  #defaultView:Map
SELECT DISTINCT ?web ?museum ?museumLabel (SAMPLE(?coord) AS ?coord) (SAMPLE(?image) AS ?image)
WHERE {
?museum wdt:P31/wdt:P279* wd:Q33506;
   wdt:P17 wd:Q145;
   wdt:P625 ?coord.
OPTIONAL {?museum wdt:P856 ?web}
OPTIONAL {?museum wdt:P18 ?image}
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} GROUP BY ?web ?museum ?museumLabel Try it! History of Science [edit] Things that stars, galaxies, star clusters and nebulae are named after [edit] The following query uses these:Items: galaxy (Q318)   , star (Q523)   , interstellar cloud (Q1054444)   , star cluster (Q168845)   Properties: instance of (P31)   , subclass of (P279)   , named after (P138)   SELECT DISTINCT ?obj ?objLabel ?objDescription ?nom ?nomLabel ?nomDescription
WHERE {
   {?obj wdt:P31/wdt:P279* wd:Q318} UNION {?obj wdt:P31/wdt:P279* wd:Q523}
  UNION {?obj wdt:P31/wdt:P279* wd:Q1054444}
  UNION {?obj wdt:P31/wdt:P279* wd:Q168845}
    ?obj wdt:P138 ?nom
   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} ORDER BY ASC(?objLabel) Try it! Things that planets and their moons are named after [edit] The following query uses these:Items: substellar object (Q3132741)   Properties: instance of (P31)   , subclass of (P279)   , named after (P138)   , parent astronomical body (P397)   SELECT DISTINCT ?planet ?planetLabel ?planetDescription ?nom ?nomLabel ?nomDescription
WHERE {
	?planet wdt:P31/wdt:P279* wd:Q3132741 .
    ?planet wdt:P138 ?nom.
  ?planet wdt:P397 ?parent.
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }.
} ORDER BY DESC(?parent) Try it! Things that spacecraft are named after [edit] The following query uses these:Items: spacecraft (Q40218)   , human spaceflight program (Q13226541)   Properties: instance of (P31)   , subclass of (P279)   , named after (P138)   SELECT DISTINCT ?obj ?objLabel ?objDescription ?nom ?nomLabel ?nomDescription
WHERE {
{?obj wdt:P31/wdt:P279* wd:Q40218} # type of spacecraft
UNION {?obj wdt:P31/wdt:P279* wd:Q13226541}. # or spaceflight programme
    ?obj wdt:P138 ?nom #named after
   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} ORDER BY ASC(?objLabel) Try it! Things that discovered stars [edit] The following query uses these:Items: star (Q523)   Properties: subclass of (P279)   , instance of (P31)   , discoverer or inventor (P61)   SELECT ?discoverer ?discovererLabel  
	(COUNT(DISTINCT ?star) as ?count)
	(GROUP_CONCAT(DISTINCT(?starLabel); separator=\", \") as ?stars)
WHERE
{
	?ppart wdt:P279* wd:Q523 .
	?star wdt:P31 ?ppart .
	?star wdt:P61 ?discoverer .
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
		?discoverer rdfs:label ?discovererLabel .
		?star rdfs:label ?starLabel            
	}
}
GROUP BY ?discoverer ?discovererLabel
ORDER BY DESC(?count) Try it! People who invented scientific instruments [edit] The following query uses these:Items: scientific instrument (Q3099911)   Properties: instance of (P31)   , subclass of (P279)   , discoverer or inventor (P61)   SELECT ?discoverer ?discovererLabel ?instrument ?instrumentLabel
WHERE {
	?instrument wdt:P31/wdt:P279* wd:Q3099911 ;
	 wdt:P61 ?discoverer .
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! Biosphere [edit] See w:Wikipedia:WikiProject_United_Nations/Biosphere_Reserve_Descriptions Map of Biosphere reserves with an entry and location in Wikidata but not in English Wikipedia [edit] The following query uses these:Properties: UNESCO Biosphere Reserve URL (P2520)   , coordinate location (P625)   , image (P18)    Features: map (Q24515275)  #defaultView:Map
SELECT ?wikidata_item ?biosphere_reserve_name ?biosphereURL ?image ?location
  WHERE {
  ?wikidata_item wdt:P2520 ?biosphereURL ; # get a list of all biospheres
   wdt:P625 ?location # and location
  OPTIONAL{ ?wikidata_item wdt:P18 ?image }
FILTER NOT EXISTS { ?enwp schema:about ?wikidata_item ; schema:isPartOf <https://en.wikipedia.org/> } # No article in English wikipedia
   ?wikidata_item rdfs:label ?biosphere_reserve_name filter (lang(?biosphere_reserve_name) = \"en\")
} Try it! Map of Biosphere reserves with an entry and location in Wikidata and an English Wikipedia article [edit] The following query uses these:Properties: UNESCO Biosphere Reserve URL (P2520)   , coordinate location (P625)   , image (P18)    Features: map (Q24515275)  #defaultView:Map
SELECT ?wikidata_item ?biosphere_reserve_name ?biosphereURL ?wikipedia_article ?image ?location
  WHERE {
  ?wikidata_item wdt:P2520 ?biosphereURL ; # get a list of all biospheres
     wdt:P625 ?location # and location
  OPTIONAL{ ?wikidata_item wdt:P18 ?image }
?wikipedia_article schema:about ?wikidata_item ;
  schema:isPartOf <https://en.wikipedia.org/>. # Must have an article in English wikipedia
  ?wikidata_item rdfs:label ?biosphere_reserve_name filter (lang(?biosphere_reserve_name) = \"en\")
} Try it! Biosphere reserves with an entry but no location [edit] The following query uses these:Properties: UNESCO Biosphere Reserve URL (P2520)   , coordinate location (P625)   SELECT ?wikidata_item ?biosphere_reserve_name ?biosphereURL
  WHERE {
  ?wikidata_item wdt:P2520 ?biosphereURL . # get a list of all biospheres
  FILTER NOT EXISTS { ?wikidata_item wdt:P625 ?location.} # no location

  ?wikidata_item rdfs:label ?biosphere_reserve_name filter (lang(?biosphere_reserve_name) = \"en\").
 } Try it! Music [edit] Lutenists ordered by year of birth [edit] The following query uses these:Items: lute (Q180733)   Properties: instrument (P1303)   , date of birth (P569)   , place of birth (P19)   SELECT ?player ?playerLabel ?article ?birthyear ?placeLabel
WHERE {
  ?player wdt:P1303 wd:Q180733.
OPTIONAL {?player wdt:P569 ?born}.
OPTIONAL {?player wdt:P19 ?place}.
  BIND(YEAR(?born) as ?birthyear).
OPTIONAL{ ?article schema:about ?player. ?article schema:isPartOf <https://en.wikipedia.org/>.  }
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
ORDER BY ASC(?birthyear) Try it! Artworks [edit] Birthplaces of painters in the Rijksmuseum collection (based on query by Jane Darnell) [edit] The following query uses these:Items: painting (Q3305213)   , Rijksmuseum (Q190804)   Properties: instance of (P31)   , subclass of (P279)   , collection (P195)   , creator (P170)   , place of birth (P19)   , coordinate location (P625)    Features: map (Q24515275)  #defaultView:Map
SELECT DISTINCT ?painter ?painterLabel ?birthplaceLabel ?geoloc where {
      ?painting wdt:P31/wdt:P279* wd:Q3305213 ;  # any painting (or type of painting)
       wdt:P195 wd:Q190804 ;  # in collection Rijksmuseum
       wdt:P170 ?painter . # get painter
      ?painter wdt:P19 ?birthplace . # get painter's birthplace
      ?birthplace wdt:P625 ?geoloc . #latitude and longitude
  SERVICE wikibase:label {
       bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,es\"
    }
} Try it! Image gallery of oil paintings from Rijksmuseum [edit] The following query uses these:Items: painting (Q3305213)   , Rijksmuseum (Q190804)   , oil paint (Q296955)   Properties: instance of (P31)   , subclass of (P279)   , collection (P195)   , creator (P170)   , made from material (P186)   , image (P18)    Features: ImageGrid (Q24515278)  #defaultView:ImageGrid
SELECT DISTINCT ?painting ?paintingLabel ?painterLabel ?image where {
      ?painting wdt:P31/wdt:P279* wd:Q3305213 ;  # any painting (or type of painting)
       wdt:P195 wd:Q190804 ;  # in collection Rijksmuseum
       wdt:P170 ?painter ; # get painter
       wdt:P186 wd:Q296955 ; # Made with oil paint
       wdt:P18 ?image . # Image from Commons of the artwork
  SERVICE wikibase:label {
       bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,fr,es\"
    }
} LIMIT 160 Try it! Visual art works by African-American women [edit] The following query uses these:Items: African Americans (Q49085)   , female (Q6581072)   , visual artist (Q3391743)   Properties: ethnic group (P172)   , sex or gender (P21)   , occupation (P106)   , subclass of (P279)   , image (P18)   , creator (P170)    Features: Graph (Q24515287)  """@en;
  dcterms:isPartOf <https://www.wikidata.org//wiki/User:MartinPoulter/queries>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d811012-wikidata_prefixes;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bd: <http://www.bigdata.com/rdf#>
#defaultView:Graph
SELECT ?person ?personLabel ?personimage ?work ?workLabel ?workimage WHERE {
  ?person wdt:P172 wd:Q49085 ;  # African American
  wdt:P21 wd:Q6581072 ;      # women
  wdt:P106/wdt:P279* wd:Q3391743 .  # visual artists
 OPTIONAL{ ?person wdt:P18 ?personimage }
  ?work wdt:P170 ?person . # and their work
 OPTIONAL{ ?work wdt:P18 ?workimage }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
  }""" .
