@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-9bf64d15f81be59d6f0e0d867b8d40cd> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org//wiki/Wikidata:Request_a_query/Archive/2020/06>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d832165-wikidata_prefixes;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX schema: <http://schema.org/>
PREFIX bd: <http://www.bigdata.com/rdf#>
#Search in category
SELECT DISTINCT ?item ?itemLabel ?inst ?instLabel ?found_in
WITH
{
  SELECT ?item (GROUP_CONCAT(?endpoint; SEPARATOR=\", \") AS ?found_in)
  WHERE
  {
    ?cat schema:about wd:Q8682545 .
    ?cat schema:isPartOf ?wikimedia_site.
    ?cat schema:name ?category_title.
    BIND (STRBEFORE(STRAFTER(STR(?wikimedia_site), \"https://\"), \"/\") AS ?endpoint)
    OPTIONAL
    {
      SERVICE wikibase:mwapi
      {
        bd:serviceParam wikibase:endpoint ?endpoint.
        bd:serviceParam wikibase:api \"Generator\".
        bd:serviceParam mwapi:generator \"categorymembers\".
        bd:serviceParam mwapi:gcmtitle ?category_title.
        bd:serviceParam mwapi:gcmlimit \"max\".
        ?item wikibase:apiOutputItem mwapi:item.
      }
    }
    FILTER BOUND (?item)
  }
  GROUP BY ?item
} AS %get_items
WHERE
{
  INCLUDE %get_items
  OPTIONAL { ?item wdt:P31 ?inst }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],it\". }
}""" .
