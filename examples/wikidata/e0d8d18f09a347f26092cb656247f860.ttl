@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-e0d8d18f09a347f26092cb656247f860> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  sh:select """SELECT ?s1 ?s2 ?s3
WHERE
{
  ?s1 p1 o1;             # s1
      p2 o2;             # s1
      p3 o31, o32, o33.  # s1
  ?s2 p4 o41, o42.       # s2
  ?s3 p5 o5;             # s3
      p6 o6.             # s3
}""";
  rdfs:comment """WDQS, the Wikidata Query Service (Q20950365)   is an awesome tool to answer many questions we might have.For brief introduction about interface with pictures and very first queries: A gentle introduction to the Wikidata Query Service.SPARQL 1.1 Query Language (Q32146616)   is a language used in Wikidata Query Service (Q20950365)   . Contents 1 Agenda 2 RDF graph (Q31386861) 2.1 semantic triple (Q28134515) 2.2 RDF node 2.2.1 Internationalized Resource Identifier 2.2.2 RDF literal 3 RDF datatype IRI in Wikidata RDF Dump Format 3.1 xsd:dateTime 4 nodes in WDQS 4.1 Entities 4.1.1 Entities that represent properties 5 edges in WDQS 5.1 Multiple values 6 Wikidata property (Q18616576) 7 Group Graph Patterns 7.1 SPARQL punctuation 7.1.1 Repetition in subject 7.1.2 Repetition in subject and predicate 7.1.3 Blank nodes 7.1.3.1 Brackets syntax 7.1.4 Property paths 7.1.4.1 Duplicates and alternative claims 7.1.4.2 Symmetric properties and self-references 8 Retrieving items with optional information (OPTIONAL) 9 Instances and classes 10 Wider or narrower results 11 Unknown or no values 12 Pagination (ORDER and LIMIT) 12.1 Limitations 12.2 Arthur Conan Doyle books 12.3 Chemical elements 13 Ways to reduce multiplicity 13.1 Note about \"Bad Aggregate\" messages 13.2 Exercises 13.2.1 Paintings along with their painting material 13.2.2 Guns by manufacturer 13.2.3 Publishers by number of pages 14 And beyond… 15 References Agenda [edit] We will: mention key points of Resource Description Framework (Q54872)   cover Wikidata data model (Q16354757)   and Wikidata RDF Dump Format (Q32786132)   first and in order; explanation of SPARQL features could be not in order or even missing (i.e. too complex or with narrow application) mention terminology in order to ask search engines with right questions later on Whitespace is significant in strings, but not meaningful otherwise.[sparqlspec 1] WDQS editor indents lines for us automatically.Let's go! RDF graph (Q31386861) [edit] semantic triple (Q28134515) [edit] Relations. Claims. object (Q488383). ⟨ subject ⟩ Wikidata property ⟨ object or value ⟩ relations are directed from the subject;[rdfprimer 1] RDF model is used to represent information about resources (entities): resource describes something in the world[rdfconcepts 1] and not limited to any networks at all; duplicates are allowed, while A relational model of data for large shared data banks (Q32061744) prohibits this for relational algebra (Q840540) \"All rows are distinct\" [such limitation can be avoided by introduction of additional column with globally unique identifier (Q254972)]. Such definition leads to multiple ways database normalisation (Q339072) solely to allow data with multiple values in databases again; Turtle (Q114409) is a text-based format used to serialization (Q1127410) RDF graph (Q31386861). SPARQL 1.1 Query Language (Q32146616) supports almost identical[RDF11Turtle 1] notation natively. World Wide Web Consortium (Q37033)' documents are commonly use this notation. Internationalized Resource Identifier (Q424583)s can be abbreviated into prefixes like wd: and wdt: in storage[rdfprimer 2] and in queries;[sparqlspec 2] More trivial notes same resource is often represented using multiple triples; in any RDF storage RDF property (Q31208391) is expressed with Internationalized Resource Identifier (Q424583);[rdfprimer 3] we could draw analogy between semi-structured data (Q2336004) and sparse matrix (Q1050404) but when \"cells\" are single-valued (for most of Wikidata, but not entirely); Special:EntityData can output all claims related to one entity: Mona Lisa in Turtle; in any RDF storage data is semi-structured data (Q2336004) for the most part: child (P40) can be absent for any instance of human (Q5); this is impossible in relational model (Q755662) where data is fully structured in terms of columns [some column can be picked to have semi-structured content e.g. JSON (Q2063), but such column is required for every row in that table]; in Wikidata entities have Internationalized Resource Identifier, links (data mapping (Q2330408)) to external datasets are implemented using special properties with datatype external id; resources could be in local datasets (e.g. Wikidata (Q2013)) or remote;[sparqlfederation 1] Notes about FILTER FILTER(condition) is a clause you can insert into your SPARQL query to, well, filter the results. Inside the parentheses, you can put any expression of boolean type, and only those results where the expression returns true are used. For example, to get a list of all humans born in 2015, we first get all humans with their date of birth – SELECT ?person ?personLabel ?dob
WHERE
{
  ?person wdt:P31 wd:Q5;
          wdt:P569 ?dob.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } 
}
 – and then filter that to only return the results where the year of the date of birth is 2015. There are two ways to do that: extract the year of the date with the YEAR function, and test that it’s 2015 – FILTER(YEAR(?dob) = 2015)
 – or check that the date is between Jan. 1st (inclusive), 2015 and Jan. 1st, 2016 (exclusive): FILTER(\"2015-01-01\"^^xsd:dateTime <= ?dob && ?dob < \"2016-01-01\"^^xsd:dateTime)
 I’d say that the first one is more straightforward, but it turns out the second one is much faster, so let’s use that: SELECT ?person ?personLabel ?dob
WHERE
{
  ?person wdt:P31 wd:Q5;
          wdt:P569 ?dob.
  FILTER(\"2015-01-01\"^^xsd:dateTime <= ?dob && ?dob < \"2016-01-01\"^^xsd:dateTime)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } 
}
 Try it! RDF node [edit] Internationalized Resource Identifier (Q424583), RDF literal (Q31381203)[rdfconcepts 2] and blank node (Q3427875) are RDF node (Q31465098) in RDF graph (Q31386861);[rdfconcepts 3] Internationalized Resource Identifier [edit] IRIs differ from RDF literal in RDF and in SPARQL. in order to construct IRIs from xsd:string or simple literal use IRI()[sparqlspec 3] and glue strings literals using CONCAT();[sparqlspec 4] isIRI()[sparqlspec 5] and isLiteral()[sparqlspec 6] provides boolean checks; STR()[sparqlspec 7] is used to convert IRIs back to simple literals; RDF literal [edit] simple literal (Q39771219): \"Hello\" - RDF datatype IRI (Q31385480) in RDF 1.1 (Q31398258) is xsd:string language-tagged string RDF literal (Q31384986): \"Hello\"@en - RDF datatype IRI is rdf:langString RDF literal: \"002\"^^xsd:integer - RDF datatype IRI is xsd:integer SPARQL treats them separately:[sparqlspec 8] SELECT ?node ?predicate WHERE {
  ?node ?predicate \"Wikidata\"
}
 Try it! is different from SELECT ?node ?predicate WHERE {
  ?node ?predicate \"Wikidata\"@en # @en is different from @en-gb and @en-ca
}
 Try it! to get RDF datatype IRI of RDF literal: DATATYPE(\"Wikidata\") to get IETF language tag of language-tagged string RDF literal: LANG(\"Wikidata\"@en) to construct RDF literal with RDF datatype IRI: STRDT(\"Wikidata\", xsd:string) to construct language-tagged string RDF literal: STRLANG(\"Wikidata\", \"en\") See also: functions on strings (xsd:string)[sparqlspec 9] checks based on regular expression (Q185612)[sparqlspec 10] RDF datatype IRI in Wikidata RDF Dump Format [edit] Following RDF datatype IRI of RDF literal could be seen in Wikidata RDF Dump Format: rdf:langString xsd:string xsd:decimal xsd:integer [derived from decimal][XSDDatatypes 1] xsd:dateTime <http://www.opengis.net/ont/geosparql#wktLiteral> wdt: prefixed variants of Special:ListProperties/globe-coordinate Example: operators to compare values with specific datatype Decimals and integers: +, -, *, / to calculate; <, >, =, <=, >= to compare Strings: =, != IRIs: =, != Booleans: || and && to calculate; IF(?condition, ValueIfTrue, ValueIfFalse) Example: language of the value Saint Petersburg (Q656) with multiple values in official name (P1448) or any other property Special:ListProperties/monolingualtext. SELECT ?value ?startDate ?endDate # ?r
WHERE
{
       wd:Q656  p:P1448 ?s.
       ?s      ps:P1448 ?value.
       ?s      pq:P580  ?startDate.
       ?s      pq:P582  ?endDate.
#      ?s      wikibase:rank ?r.
       FILTER(LANG(?value) = \"ru\")
}
 Try it! Example: language of the label We get the label with the ?human rdfs:label ?label triple, restrict it to English labels, and then check if it starts with “Mr. ”: SELECT ?human ?label
WHERE
{
  ?human wdt:P31 wd:Q15632617;
         rdfs:label ?label.
  FILTER(LANG(?label) = \"en\")
  FILTER(STRSTARTS(?label, \"Mr. \"))
}
 Try it! xsd:dateTime [edit] YEAR() to get year MONTH() to get month DAY() to get day NOW() to get current date and time Notes: ROUND(1950/100) will return 20 and ROUND(1949/100) will return 19, so it is inappropriate for centuries; more accurate solution is to use FLOOR((?year-1)/100)+1 (works well for 1..2001 range) nodes in WDQS [edit] RDF nodes in Wikidata RDF Dump Format (Q32786132) follow specific naming conventions. wd: - entity, browsable in Wikibase (Q16354758) or scriptable in Extension:Wikibase Client (Q21679293) wds: - statement node, internal part wdref: - reference node, internal part wdv: - value node, internal part [unprefixed] - sitelink node, per every language, per every project # We can inspect complex parts of data model at any second
SELECT ?property ?RDFNode (IF(isLiteral(?RDFNode), CONCAT(\"literal, datatype IRI:\", STR(DATATYPE(?RDFNode))), IF(isIRI(?RDFNode), \"IRI\", IF(isBlank(?RDFNode), \"blank node\", \"impossible?!!\"))) as ?kindOfRDFNode)
WHERE
{
  # prefixed subjects                                 or their IRIs
  #                                                      <https://en.wikipedia.org/wiki/Mona%20Lisa>
  #                                                      <https://es.wikipedia.org/wiki/La%20Gioconda>
  #                                                      <https://www.wikidata.org/wiki/Wikidata:Introduction>
  #                                                      <https://ko.wikinews.org/wiki/%EC%9C%84%ED%82%A4%EB%89%B4%EC%8A%A4:%EC%86%8C%EA%B0%9C>
  #    wd:Q12418                                      or <http://www.wikidata.org/entity/Q12418>
  #    wd:P571                                        or <http://www.wikidata.org/entity/P571>
  #   wds:Q12418-8EDF7B01-3F71-4DA7-8B52-8C26242F0293 or <http://www.wikidata.org/entity/statement/Q12418-8EDF7B01-3F71-4DA7-8B52-8C26242F0293>
  # wdref:8f08ac3e0839bdbc4c6eb8d671e772deb12ba423    or <http://www.wikidata.org/reference/8f08ac3e0839bdbc4c6eb8d671e772deb12ba423>
  #   wdv:817fac0649608d9ebd295b60135818d4 QuantityValue <http://www.wikidata.org/value/817fac0649608d9ebd295b60135818d4>
  #   wdv:804d3164e16f5c568523ef7b563ee1af QuantityValue, Normalized
  #   wdv:800000d7a293881690f27762757ec940 wikibase:TimeValue
  #   wdv:800fbeee96e1b9bd5d91c1f66b25365d wikibase:GlobecoordinateValue
  wdv:788f87d431fffec0fc34235813459708 ?property ?RDFNode.
}
 Try it! Entities [edit] Entities that represent properties [edit] Wikidata property (Q18616576)It is possible to use entities for properties (they have information about wikibase:directClaim).It is impossible to substitute property path at second position with property at second position in one triple [as opposed to Q31209160 and Q31209194]. But it is possible with more triples or other variable-forming constructs. One nuance is to use entity outside triple where resulting property should be applied. Examples The following query uses these: SELECT ?child ?childLabel ?p1 ?p2
WHERE
{
# variant 0: functional; note \"prop/direct\"
# ?child <http://www.wikidata.org/prop/direct/P22> <http://www.wikidata.org/entity/Q1339>.
# ?child <http://www.wikidata.org/prop/direct/P25> <http://www.wikidata.org/entity/Q57487>.

# variant 00: functional; note 2 kinds of \"prop\"
# ?child <http://www.wikidata.org/prop/P22>/<http://www.wikidata.org/prop/statement/P22> <http://www.wikidata.org/entity/Q1339>.
# ?child <http://www.wikidata.org/prop/P25>/<http://www.wikidata.org/prop/statement/P25> <http://www.wikidata.org/entity/Q57487>

# wikibase:directClaim - https://www.mediawiki.org/wiki/Wikibase/Indexing/RDF_Dump_Format#Properties

# variant 1: functional, additional patterns, note \"entity\"
# <http://www.wikidata.org/entity/P22> wikibase:directClaim ?p1 .
# <http://www.wikidata.org/entity/P25> wikibase:directClaim ?p2 .
  
# ?child ?p1 <http://www.wikidata.org/entity/Q1339>.
# ?child ?p2 <http://www.wikidata.org/entity/Q57487>.

# variant 2: functional, property paths, note \"entity\"
  BIND(<http://www.wikidata.org/entity/P22>/wikibase:directClaim as ?p1)
  BIND(<http://www.wikidata.org/entity/P25>/wikibase:directClaim as ?p2)
  
  ?child ?p1 <http://www.wikidata.org/entity/Q1339>.
  ?child ?p2 <http://www.wikidata.org/entity/Q57487>.
  
# variant 3: not, note \"entity\"
# ?child <http://www.wikidata.org/entity/P22>/wikibase:directClaim <http://www.wikidata.org/entity/Q1339>.
# ?child <http://www.wikidata.org/entity/P25>/wikibase:directClaim <http://www.wikidata.org/entity/Q57487>.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
 Try it! edges in WDQS [edit] 0.. — optional (or semi-structured) parts ..* — limitless ..1 — at most one edge (Q3297804) from to Domain * Domain * sitelink (Q17587456) 0..1** Wikidata item (Q16222597) 0..1 schema:about Wikidata entity (Q32753077) 0..1 statement node (Q17586663) 0..* p: prefix statement node (Q17586663) 0..1 Help:Sources (Q32753827) 0..* prov:wasDerivedFrom Links to value node (Q32753852) statement node (Q17586663) 0..1 value node (Q32753852) 0..1 psv: prefix statement node (Q17586663) 0..1 value node (Q32753852) 0..1 pqv: prefix Help:Sources (Q32753827) 0..1 value node (Q32753852) 0..1 prv: prefix wikibase:QuantityValue specific[WikibaseDumpRDF 1] statement node (Q17586663) 0..1 normalized value node (Q33126575) 0..1 psn: prefix statement node (Q17586663) 0..1 normalized value node (Q33126575) 0..1 pqn: prefix Help:Sources (Q32753827) 0..1 normalized value node (Q33126575) 0..1 prn: prefix * - multiplicity; ** - per language per project Multiple values [edit] See also: Help:Statements#Multiple values aggregate function (Q4115063)Rarely in Wikidata, we may enter multiple values.When we query for ?item wdt:mvproperty ?value we can get multiple records about values, not one about item. This is different from object-oriented approach where one record corresponds to one object.In order to get one subject (or item) per record: ignore such properties the most radical way; do not place properties that return multiple values (wd:Q12418 wdt:P186 ?material) in \"SELECT\" part of your query SAMPLE aggregate[sparqlspec 11] returns an arbitrary value working query GROUP_CONCAT aggregate[sparqlspec 12] working query. simplest query with label service wouldn't work. LIMIT 1 (when item and property is known beforehand) a less radical way than first, but it discards data as well: SELECT ?materialLabel { SELECT ?materialLabel WHERE { wd:Q12418 wdt:P186 ?material . SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". } . } LIMIT 1 }; with a good hammer it is possible to fit square in circle Wikidata property (Q18616576) [edit] Practical implications of statements with different ranks number of statement nodes wds: with such rank scaling wikibase:rank of wds: wikibase:PreferredRank 1 0 1 1 1 0 0 1 wikibase:NormalRank 0 100 100 100 0 100 0 100 wikibase:DeprecatedRank 0 0 10 0 10 10 10 10 below per above wdt: in Wikidata entity (Q32753077) 1 100 1 1 1 100 0 p: between Wikidata entity and statement node 1 100 111 101 11 110 10 Statement nodes with rdf:type wikibase:BestRank are with red border Property in Wikidata model is augmented with Help:Ranks and can be used in multiple positions (references, qualifiers).Most Wikibase types have simple values.[WikibaseDumpRDF 2]By simple values we mean anything from RDF node section [IRIs, xsd:string, language-tagged literals, literals with other types, blank nodes].Simple values can be accessed with following prefixes, depending on where property was used: from Entity - wdt: [historic and wrong values aren't accessible here, see table on the right] from Statement node to value of property - ps: from Statement node to value of qualifier - pq: from Reference node - pr: Equivalent of wdt: SELECT ?pop WHERE {
   wd:Q2807 wdt:P1082 ?pop
}
 Try it! # equivalent of wdt:
# wd:Q2807 wdt:P1082 ?pop
SELECT ?pop WHERE {
   wd:Q2807     p:P1082 ?popNode           . # will return every node
     ?popNode rdf:type  wikibase:BestRank  . # will restrict it to \"best\" nodes, similar to wdt: 
     ?popNode  ps:P1082 ?pop                 # extract value of node
}
 Try it! Common mistake is to mix wdt:P1082 with p:P1082 in one SELECT clause: in most cases we should use only one way, not both. We can mix wdt: and p: of different properties.When we switch from wdt: to p: (in order to use qualifiers) we should use ps: prefixes (they would respect current statement node). Common mistake is to use wdt: instead of ps:.  Group Graph Patterns [edit] Johann Sebastian Bach chapelmaster, Thomaskantor, composer, organist, harpsichordist, violinist, conductor, choir director, concertmaster, musicologist, music educator, virtuoso and school teacher Catharina Dorothea Bach … Christiana Benedicta Louisa … Regina Johanna Bach … Ernestus Andreas Bach … Elisabeth Juliana Friderica Bach … Christiana Dorothea Bach … Johann August Abraham Bach … Johann Christoph Friedrich Bach composer, concertmaster, organist, chapelmaster and musician … Johann Christian Bach composer, pianist and music arranger … Johanna Carolina Bach … Christian Gottlieb Bach … Christiana Sophia Enrietta Bach … Maria Sophia Bach … Wilhelm Friedemann Bach composer, organist, pianist, musician, music arranger and independent publisher … Gottfried Heinrich Bach musician, pianist and composer … Johann Christoph Bach … Johann Gottfried Bernhard Bach composer, musician and organist … Carl Philipp Emanuel Bach chapelmaster and composer … Leopold Augustus Bach … Regina Susanna Bach … Johann Sebastian Bach (Q1339) had two wives. How can we see the children of Johann Sebastian Bach with his first wife, Maria Barbara Bach (Q57487)?The simplest way to do this is to add a second triple with that restriction: SELECT ?child ?childLabel
WHERE
{
  ?child wdt:P22 wd:Q1339.     # Child  has father  Johann Sebastian Bach.
  ?child wdt:P25 wd:Q57487.    # Child  has mother     Maria Barbara Bach.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\". }
}
 Try it! Dot between triple patterns corresponds to \"and\" conjunction; \";\" can be used instead. Note: it is possible to omit last conjunction symbol, but some place it for interchangeability. SPARQL punctuation [edit] Each triple about a subject is terminated by a period; Multiple predicates about the same subject can be separated by semicolons; Multiple objects for the same subject and predicate can be separated by commas. """@en;
  dcterms:isPartOf <https://www.wikidata.org//wiki/User:D1gggg/Wikidata_model_and_SPARQL>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:wikidata_prefixes;
  schema:target <https://query.wikidata.org/sparql/> .
