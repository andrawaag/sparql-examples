@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-907b95429164a2dd56a6e728c2d9ec26> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/lb>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/th>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/eu>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/en-gb>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/vec>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/hy>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/id>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/be-tarask>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/tr>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/ro>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/he>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/zh>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/pt-br>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/si>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/eo>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/da>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/ar>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/ko>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/pl>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/ms>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/sv>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/lt>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/nl>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/ca>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/uk>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/it>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/ja>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/es>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/cs>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/ru>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/de>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/fr>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/en>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d837544-wikidata_prefixes, _:genid-4e694113159d4e3db4a1a913894a81d837544-45E0AF5A104F007FF9A38D7CACD6F659,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-994FF725272DBDAA93CBD09095CF84D1, _:genid-4e694113159d4e3db4a1a913894a81d837544-1081C77B49E97B6734828E49827AA1A0,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-3ECC5DD3B7F316DE74B4DB9FD871A07E, _:genid-4e694113159d4e3db4a1a913894a81d837544-33B94DB31EB0C4D97303051FD66AF057,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-5E08BBB1C8C4B3EE3ED58B8496371E6F, _:genid-4e694113159d4e3db4a1a913894a81d837544-644B18E46BA7360074CE13429B4FD94D,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-BC45B94F36049800DC83640C38B11579, _:genid-4e694113159d4e3db4a1a913894a81d837544-DE6E9539D7C948544F91E3941769959F,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-8E062223DFC00DFE312489D1753F9CC5, _:genid-4e694113159d4e3db4a1a913894a81d837544-0BA72BD6E2C50BE69E92F753BBA78E1E,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-2C86D67582063D2FDE2A045161E31F9A, _:genid-4e694113159d4e3db4a1a913894a81d837544-00C902C6A9E82C787503299BEC186EA3,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-029FDF2EF5BC02A7FE5992DFB5C611F9, _:genid-4e694113159d4e3db4a1a913894a81d837544-751C79BE8CDEA91E1A87D122618C24FE,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-CAE9F2158689184094217C01D9E5CF90, _:genid-4e694113159d4e3db4a1a913894a81d837544-143093DB0B0EAE30CF1F6CA10D3D5098,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-A6E93EE48DA51DDD19FC05F95784753B, _:genid-4e694113159d4e3db4a1a913894a81d837544-6C0E75DD231BEE821F02F759FDC7636C,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-B736E2FFE7746A88138255A7643E7B4C, _:genid-4e694113159d4e3db4a1a913894a81d837544-C5E07ECF5606037F8F55C52738A3EFF0,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-7B4B7FDF7E38993A520F0AC2B57A9E5F, _:genid-4e694113159d4e3db4a1a913894a81d837544-FBA2F8B3DE5AC09C296763E4D7337261,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-C5676D47149262C2F75DD9DA89753496, _:genid-4e694113159d4e3db4a1a913894a81d837544-43DA40083F6C38766EE630394169A99B,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-F6C1D890D3F84F4F5970BAF40DE3E24F, _:genid-4e694113159d4e3db4a1a913894a81d837544-1FFE80F0226B78538679665BB2385D75,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-95F93F7473C8FB77A185EB81D4FD5DBB, _:genid-4e694113159d4e3db4a1a913894a81d837544-689920F394922A76858B0E17A08018A9,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-922445B3AF5F532A3D475C2442D1BA86, _:genid-4e694113159d4e3db4a1a913894a81d837544-E54AF617D84771B64002EFF86F41671D,
    _:genid-4e694113159d4e3db4a1a913894a81d837544-F3C2222D60C41E0EC087F723D2C7D2C2, _:genid-4e694113159d4e3db4a1a913894a81d837544-3968254A126440E20B9F5D2489905384;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
prefix void:  <http://rdfs.org/ns/void#>
prefix pav:   <http://purl.org/pav/>
prefix xsd:   <http://www.w3.org/2001/XMLSchema#>
prefix freq:  <http://purl.org/cld/freq/>
prefix biopax: <http://www.biopax.org/release/biopax-level3.owl#>
prefix skos:  <http://www.w3.org/2004/02/skos/core#>
prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#>
prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix gpml:  <http://vocabularies.wikipathways.org/gpml#>
prefix wp:    <http://vocabularies.wikipathways.org/wp#>
prefix dcterms: <http://purl.org/dc/terms/>
prefix wprdf: <http://rdf.wikipathways.org/>
prefix prov:  <http://www.w3.org/ns/prov#>
prefix foaf:  <http://xmlns.com/foaf/0.1/>
prefix dc:    <http://purl.org/dc/elements/1.1/>

SELECT DISTINCT ?biomarkerLabel ?proteinLabel ?geneID ?WP_gene ?PathwayID ?PathwayName #results that are displayed.
WHERE {
  VALUES ?biomarker {wd:Q420633 wd:Q27125809 wd:Q422462} #you can add more biomarkers here if needed, separated by a space.
  ?biomarker wdt:P31 wd:Q11173. #Stating that all biomarkers have to be \"instance of\" \"chemical compound\" (you could ommit this, but query will probably take longer).
  ?biomarker wdt:P638 ?pdbID . #Checking if a biomarker has a Protein Databank ID (PDB) -> meaning the metabolite can interact with a protein.
  ?protein wdt:P31 wd:Q8054 . #Stating that all proteins are \"instance of\" \"protein\"
  ?protein wdt:P638 ?pdbID . #Checking which proteins have a PDB ID, which we queried previously in relationship to the biomarkers.
  ?protein wdt:P702 ?gene . #Connecting the protein to a gene (\"encoded by\" relationship) -> to get an identifier we can use later in federated WikiPathways query.
  ?gene wdt:P703 wd:Q15978631 . #Now removing all genes that are not found in species \"Homo sapiens\". -> This info is not always available for proteins in WikiData.
  ?gene wdt:P2888 ?geneID . #Getting the \"exact match\" identifier for the gene, related to the protein, related to the biomarker.

  ##The IRI from Wikidata starts with http:// , where the one from WikiPathways starts with https:// , so we need to rewrite the IRI
    BIND(                      # Bind the created IRI into a new variable (called ?newIRI)
        IRI(                   # Convert the string back to an IRI
          CONCAT(              # Concatenate item 1 and 2 together as one string
               \"https\",        # First item to concat (more items can be added with a comma
              #Second item to concat:
               SUBSTR(         # Obtain a substring
                 STR(?geneID), # Convert the geneID IRI from Wikidata to a string,
                 5)            # removing the first 5 characters (<http)
        )) AS ?newIRI          # Name for the new variable
    )

  SERVICE <http://sparql.wikipathways.org/sparql> { #Connecting to the WikiPathways SPARQL endpoint.
     ?WP_pathway a wp:Pathway . #Stating a ?WP_pathway is indeed a pathway in the WikiPathways RDF .
     ?WP_pathway wp:organismName \"Homo sapiens\" . #Removing all PWs not for species Homo sapiens.
     ?WP_pathway dc:identifier ?PathwayID . #Query the identifier of the pathway in WPs.
     ?WP_pathway dc:title ?PathwayName . #Obtaining the name of the pathway.

     ?WP_gene a wp:Protein . #Stating that a ?WP_gene is a Protein DataNode (you could ommit this, to also get all DataNodes modeled as GeneProducts out, but query will take longer).
     ?WP_gene wp:bdbEntrezGene ?newIRI . #Connecting the previously queried \"exact match\" from WikiData to the NCBI/Entrez Gene ID in WPs.
     ?WP_gene dcterms:isPartOf ?WP_pathway . #Connecting the WP_gene to the WP_pathway.

   }
 OPTIONAL {?biomarker rdfs:label ?biomarkerLabel. #Create a label (aka name) for the biomarkers in WikiData, without using the service query.
FILTER(LANG(?biomarkerLabel) = \"en\").
}
   OPTIONAL {?protein rdfs:label ?proteinLabel. #Create a label(aka name) for the proteins in WikiData, without using the service query.
FILTER(LANG(?proteinLabel) = \"en\").
}

}
ORDER BY DESC (?biomarkerLabel) #Order results for biomarkers""" .
