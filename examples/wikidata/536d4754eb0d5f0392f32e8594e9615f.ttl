@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-536d4754eb0d5f0392f32e8594e9615f> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org//wiki/User:Jobu0101/API>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d812251-wikidata_prefixes;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bd: <http://www.bigdata.com/rdf#>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX v: <http://www.wikidata.org/prop/statement/>
PREFIX pq: <http://www.wikidata.org/prop/qualifier/>

SELECT ?tatortWithLabel (MIN(?publication) AS ?aired) ?case ?ordinal ?film ?title (GROUP_CONCAT(DISTINCT(?screenwriter);separator=\", \") AS ?screenwriters) (GROUP_CONCAT(DISTINCT(?director);separator=\", \") AS ?directors) (SAMPLE(?runtime) AS ?runtime) (SAMPLE(?imdb) AS ?imdb) WHERE {
	?tatortWith wdt:P31 wd:Q5398426 . ?tatortWith wdt:P361 wd:Q689438 .
	?film p:P179 ?series . ?series v:P179 wd:Q689438 . ?series pq:P1545 ?ordinal .
    ?film p:P179 ?team . ?team v:P179 ?tatortWith . ?team pq:P1545 ?case .
    ?film wdt:P1476 ?title
    OPTIONAL{?film wdt:P57 ?dir . ?dir rdfs:label ?director . FILTER(lang(?director) = \"de\")}
    OPTIONAL{?film wdt:P58 ?screen . ?screen rdfs:label ?screenwriter . FILTER(lang(?screenwriter) = \"de\")}
    OPTIONAL{?film wdt:P345 ?imdb}
  	OPTIONAL{?film wdt:P577 ?publication}
    OPTIONAL{?film wdt:P2047 ?runtime}
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"de\" }
}
GROUP BY ?tatortWith ?tatortWithLabel ?film ?title ?ordinal ?case
ORDER BY ?tatortWithLabel ASC(xsd:integer(?case))""" .
