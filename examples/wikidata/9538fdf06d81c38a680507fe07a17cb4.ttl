@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-9538fdf06d81c38a680507fe07a17cb4> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org//wiki/Wikidata:Request_a_query/Archive/2022/05>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d819226-wikidata_prefixes;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX schema: <http://schema.org/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?title_en ?article_en
  (IF(BOUND(?article_no), IF(BOUND(?badge_no), ?badge_noLabel, \"yes\"), \"no\") as ?no)
  (IF(BOUND(?article_sv), IF(BOUND(?badge_sv), ?badge_svLabel, \"yes\"), \"no\") as ?sv)
  (IF(BOUND(?article_da), IF(BOUND(?badge_da), ?badge_daLabel, \"yes\"), \"no\") as ?da)
  (IF(BOUND(?article_nn), IF(BOUND(?badge_nn), ?badge_nnLabel, \"yes\"), \"no\") as ?nn)
WITH
{
  SELECT ?title_en ?article_en
  WHERE
  {
    SERVICE wikibase:mwapi
    {
      bd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .

      # Generator to get all transclusions of the Template \"WikiProject Climate change\"
      bd:serviceParam wikibase:api \"Generator\" .
      bd:serviceParam mwapi:generator \"alltransclusions\" .
      bd:serviceParam mwapi:gatfrom \"WikiProject Climate change\" .
      bd:serviceParam mwapi:gatto \"WikiProject Climate change\" .
      bd:serviceParam mwapi:gatlimit \"max\" .

      # Use the info module to get the name of associated page
      # (the template is on talk pages, so this gives the subject pages)
      bd:serviceParam mwapi:prop \"info\" .
      bd:serviceParam mwapi:inprop \"associatedpage\" .

      # Output
      # (There is no point in trying to get associated items, because that would be for the found talk pages) 
      ?title wikibase:apiOutput \"@associatedpage\" .
    }
    BIND (STRLANG(?title, \"en\") AS ?title_en)
    OPTIONAL { ?article_en schema:name ?title_en . }
    FILTER BOUND(?article_en)
  }
}
AS %get_titles
WHERE
{
  INCLUDE %get_titles
  ?article_en schema:isPartOf <https://en.wikipedia.org/> .
  ?article_en schema:about ?item .

  OPTIONAL
  {
    ?article_no schema:about ?item ; schema:isPartOf <https://no.wikipedia.org/> .
    OPTIONAL { ?article_no  wikibase:badge ?badge_no . }
  }
  OPTIONAL
  {
    ?article_da schema:about ?item ; schema:isPartOf <https://da.wikipedia.org/> .
    OPTIONAL { ?article_da  wikibase:badge ?badge_da . }
  }
  OPTIONAL
  {
    ?article_sv schema:about ?item ; schema:isPartOf <https://sv.wikipedia.org/> .
    OPTIONAL { ?article_sv  wikibase:badge ?badge_sv . }
  }
  OPTIONAL
  {
    ?article_nn schema:about ?item ; schema:isPartOf <https://nn.wikipedia.org/> .
    OPTIONAL { ?article_nn  wikibase:badge ?badge_nn . }
  }
  SERVICE wikibase:label
  {
    bd:serviceParam wikibase:language \"en\" .
    ?badge_no rdfs:label ?badge_noLabel .
    ?badge_da rdfs:label ?badge_daLabel .
    ?badge_sv rdfs:label ?badge_svLabel .
    ?badge_nn rdfs:label ?badge_nnLabel .
  }
}""" .
