@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-ca8ed527d25da24ad9b85c161805f06a> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org//wiki/Wikidata:Request_a_query/Archive/2019/02>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d812920-wikidata_prefixes;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX bd: <http://www.bigdata.com/rdf#>
prefix encat: <https://en.wikipedia.org/wiki/Category:>
select distinct ?itemLabel ?licenseLabel {
  service <https://query.wikidata.org/bigdata/namespace/categories/sparql> {
    ?s mediawiki:isInCategory* encat:Linux_media_players ;
       rdfs:label ?label .
  }
  bind (concat(\"Category:\", ?label) as ?title)
  service wikibase:mwapi {
     bd:serviceParam wikibase:api \"Generator\" .
     bd:serviceParam wikibase:endpoint \"en.wikipedia.org\" .
     bd:serviceParam mwapi:gcmtitle ?title .
     bd:serviceParam mwapi:generator \"categorymembers\" .
     bd:serviceParam mwapi:gcmprop \"ids\" .
     bd:serviceParam mwapi:gcmlimit \"max\" .
     ?ns wikibase:apiOutput \"@ns\" .
     ?item wikibase:apiOutputItem mwapi:item .
  }
  filter(bound(?item) && ?ns = \"0\")
  optional {?item wdt:P275 ?license} 
  service wikibase:label {bd:serviceParam wikibase:language \"en\"}
}""" .
