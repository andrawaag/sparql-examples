@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-e330c7e22ad545bdbf0c57d50ea4cdf0> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/nl>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/pl>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/it>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/hy>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/es>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/uk>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/sv>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/zh>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/ja>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/fr>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/da>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/th>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/id>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/ar>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/arz>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human/en>,
    <https://www.wikidata.org//wiki/Wikidata:SPARQL_query_service/queries/examples/human>,
    <https://www.wikidata.org//wiki/User:Duesentrieb/WDQL>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d845560-wikidata_prefixes, _:genid-4e694113159d4e3db4a1a913894a81d845560-C6D9B5E1407FFD13736A3062FE530CD9,
    _:genid-4e694113159d4e3db4a1a913894a81d845560-22C50F81465FC7FFD5C65ABC31FE1550, _:genid-4e694113159d4e3db4a1a913894a81d845560-1508E77406DDD86A089F2FC92A2B0ED8,
    _:genid-4e694113159d4e3db4a1a913894a81d845560-93C108C96C4C381F44407E6E7818A4A2, _:genid-4e694113159d4e3db4a1a913894a81d845560-395979204EDBD223D7F2DEEA88A05622,
    _:genid-4e694113159d4e3db4a1a913894a81d845560-A45FC3A710B7324F7DD8A98335788B38, _:genid-4e694113159d4e3db4a1a913894a81d845560-6614A8B0D3D5B92A55C5BA52322FE356,
    _:genid-4e694113159d4e3db4a1a913894a81d845560-8BCE688556086111ED2FEF8BEAF2EA85, _:genid-4e694113159d4e3db4a1a913894a81d845560-C87EE111AB362363E1A8F413067A2EE8,
    _:genid-4e694113159d4e3db4a1a913894a81d845560-D3BC06653EAC4A9D4526639024725525, _:genid-4e694113159d4e3db4a1a913894a81d845560-E47264916D9515142735308AE0992A2F,
    _:genid-4e694113159d4e3db4a1a913894a81d845560-790188E209C7FFAB06FBF484C2A07DAB, _:genid-4e694113159d4e3db4a1a913894a81d845560-3FE47D5C48B2BFB894A648564B9CA6DD,
    _:genid-4e694113159d4e3db4a1a913894a81d845560-EFAFF3B138316735E78F8B6D4ACF7547, _:genid-4e694113159d4e3db4a1a913894a81d845560-B2D61877126DC2C684590006515C648F,
    _:genid-4e694113159d4e3db4a1a913894a81d845560-366E13B2600C2D0C3EB15AD0C3E7DED0, _:genid-4e694113159d4e3db4a1a913894a81d845560-61E858A3BA7A677032476150BE1222E9;
  schema:target <https://query.wikidata.org/sparql/>;
  rdfs:comment """Contents 1 Simple Queries 1.1 Cats 1.2 Goats 1.3 Horses (showing a few info about them) 1.4 Cats, with pictures 1.5 Map of hospitals 1.6 Number of humans in Wikidata 1.7 Humans without children 1.8 Items with a Wikispecies sitelink 1.9 Items about authors with a Wikispecies page 1.10 Recent Events 1.11 Popular eye colors among humans 1.12 Humans whose gender we know we don't know 1.13 URLs of Wikipedia in all languages 1.14 All items with a property 2 Showcase Queries 2.1 Largest cities with female mayor 2.2 List of countries ordered by the number of their cities with female mayor 2.3 Popular surnames among humans 2.4 Given names with most variations 2.5 Popular surnames among fictional characters 2.6 Women with most sitelinks and no image born in 1921 or later 2.7 Whose birthday is today? 2.8 Finding John and Sarah Connor 2.9 Data of Douglas Adams 2.10 Data of Douglas Adams (modified version) 2.11 Bubble charts 2.11.1 Overall causes of death ranking 2.11.2 WWII battle durations 2.11.3 The top 10 heaviest humans Simple Queries [edit] These basic queries help to understand SPARQL and the Wikibase RDF format. Cats [edit] The following query uses these:Items: house cat (Q146)   Properties: instance of (P31)   SELECT ?item ?itemLabel 
WHERE 
{
  ?item wdt:P31 wd:Q146.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! The following query uses these:FIND item
WITH instanceof( :Q146 );   # class() is a function expanding to wikidata:P31/wikidata:P279*
RETURN id(), label();   # id() and label() are functions providing access to well known fields
PRAGMA language: auto, en. Try it!  Goats [edit] The following query uses these:Items: goat (Q2934)   Properties: instance of (P31)   SELECT ?item ?itemLabel 
WHERE 
{
  ?item wdt:P31 wd:Q2934.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! The following query uses these:FIND item
WITH instanceof( search(\"item\", \"goat\") ); # search by label/alias, using pragma language (ignoring auto), may expand to multiple hits
RETURN id(), label();   # id() and label() are functions providing access to well known fields
PRAGMA language: auto, en. Try it! Horses (showing a few info about them) [edit] #Illustrates optional fields, instances of subclasses, language fallback on label service, date to year conversion
#Horses on Wikidata
SELECT DISTINCT ?horse ?horseLabel ?mother ?father (year(?birthdate) as ?birthyear) (year(?deathdate) as ?deathyear) ?genderLabel
WHERE
{
	?horse wdt:P31/wdt:P279* wd:Q726 .     # Instance et sous-classes de Q726-Cheval
	 
	OPTIONAL{?horse wdt:P25 ?mother .}       # P25  : Mère
	OPTIONAL{?horse wdt:P22 ?father .}       # P22  : Père
	OPTIONAL{?horse wdt:P569 ?birthdate .} # P569 : Date de naissance
	OPTIONAL{?horse wdt:P570 ?deathdate .}     # P570 : Date de décès
	OPTIONAL{?horse wdt:P21 ?gender .}       # P21  : Sexe
 
	SERVICE wikibase:label { #BabelRainbow
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],fr,ar,be,bg,bn,ca,cs,da,de,el,en,es,et,fa,fi,he,hi,hu,hy,id,it,ja,jv,ko,nb,nl,eo,pa,pl,pt,ro,ru,sh,sk,sr,sv,sw,te,th,tr,uk,yue,vec,vi,zh\"
	}
}
ORDER BY ?horse
 Try it! The following query uses these:FIND item
WITH instanceof( :Q726 ); 
RETURN id() => horse, label() => horseLabel, # $id and $label are special fields, not property values
	@mother, @father, # @father is a shorthand for search(\"property\", \"father\"), for accessing properties by name
	year( :P569 ) => birthyear, year( :P570 ) => deathyear, # functions may modify output
	@gender.label() => genderLabel; # functions may be called method-style
ORDER BY :P569;
PRAGMA language: auto, en. Try it! Cats, with pictures [edit] The following query uses these:Items: house cat (Q146)   Properties: instance of (P31)   , image (P18)    Features: ImageGrid (Q24515278)  #added before 2016-10

#defaultView:ImageGrid
SELECT ?item ?itemLabel ?pic
WHERE
{
?item wdt:P31 wd:Q146 .
?item wdt:P18 ?pic
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! The following query uses these:FIND item
WITH instanceof( :Q146 ); 
WITH defined( :P18 ); 
RETURN id(), label(), :P18 => pic
PRAGMA display: ImageGrid. Try it! Map of hospitals [edit] The following query uses these:Items: hospital (Q16917)   Properties: instance of (P31)   , subclass of (P279)   , coordinate location (P625)    Features: map (Q24515275)  #added 2017-08
#defaultView:Map
SELECT * WHERE {
  ?item wdt:P31*/wdt:P279* wd:Q16917;
        wdt:P625 ?geo .
} Try it! The following query uses these:FIND item
WITH instanceof( :Q16917 ); 
WITH defined( :P625 ); 
RETURN id(), label(), :P625 => geo
PRAGMA display: Map. Try it! Number of humans in Wikidata [edit] Using the count function SELECT (COUNT(?item) AS ?count)
WHERE {
	?item wdt:P31/wdt:P279* wd:Q5 .
}
 Try it! The following query uses these:FIND item
WITH instanceof( :Q5 ); 
AGGREGATE count( id() ). Try it! Humans without children [edit] In the simplest form: The following query uses these:Items: human (Q5)   Properties: instance of (P31)   , child (P40)   #added before 2016-10
#Demonstrates \"no value\" handling
SELECT ?human ?humanLabel
WHERE
{
	?human wdt:P31 wd:Q5 .       #find humans
	?human rdf:type wdno:P40 .   #with at least one P40 (child) statement defined to be \"no value\"
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! An equivalent query (slightly more verbose): SELECT ?human ?humanLabel 
WHERE
{
  ?human wdt:P31 wd:Q5 .         #find humans
  ?human p:P40 ?childStatement . #with at least one P40 (child) statement
  ?childStatement rdf:type wdno:P40 .   #where the P40 (child) statement is defined to be \"no value\"
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" . }
}
 Try it! The following query uses these:FIND item
WITH instanceof( :Q5 ); 
WITH novalue( :P40 ); 
RETURN id(), label(). Try it! Items with a Wikispecies sitelink [edit] #added before 2016-10
#illustrates sitelink selection, \";\" notation
SELECT ?item ?itemLabel ?article
WHERE
{
	?article 	schema:about ?item ;
			schema:isPartOf <https://species.wikimedia.org/> .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
LIMIT 200
 Try it! The following query uses these:FIND item
WITH instanceof( :Q5 ); 
WITH sitelink( 'https://species.wikimedia.org/' ); 
RETURN id(), label(), sitelink( 'https://species.wikimedia.org/' ). Try it! Items about authors with a Wikispecies page [edit] SELECT ?author ?authorLabel (COUNT(?paper) AS ?count)
WHERE
{
	?article 	schema:about ?author ;
			schema:isPartOf <https://species.wikimedia.org/> .
    ?author wdt:P31 wd:Q5.
    ?paper wdt:P50 ?author.
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
GROUP BY ?author ?authorLabel
ORDER BY DESC(?count)
LIMIT 200
 Try it! Ideomatic WDQL: The following query uses these:FIND item
WITH instanceof( :Q5 ); 
WITH sitelink( 'https://species.wikimedia.org/' ); 
RETURN id(), label(), (
	FIND item
	WITH equals( :P50, outer ) # outer refers back to the entity in the outer query
). Try it! Pragmatic WDQL: The following query uses these:FIND item => paper
JOIN item => author ON :P50
WITH instanceof( :Q5 ); 
WITH sitelink( 'https://species.wikimedia.org/' ); 
GROUP BY author.id();
RETURN author.id(), author.label();
AGGREGATE count( paper.id() ) Try it! Recent Events [edit] The following query uses these:Items: occurrence (Q1190554)   Properties: instance of (P31)   , subclass of (P279)   , point in time (P585)   , start time (P580)   SELECT ?event ?eventLabel ?date
WHERE
{
	# find events
	?event wdt:P31/wdt:P279* wd:Q1190554.
	# with a point in time or start date
	OPTIONAL { ?event wdt:P585 ?date. }
	OPTIONAL { ?event wdt:P580 ?date. }
	# but at least one of those
	FILTER(BOUND(?date) && DATATYPE(?date) = xsd:dateTime).
	# not in the future, and not more than 31 days ago
	BIND(NOW() - ?date AS ?distance).
	FILTER(0 <= ?distance && ?distance < 31).
	# and get a label as well
	OPTIONAL {
		?event rdfs:label ?eventLabel.
		FILTER(LANG(?eventLabel) = \"en\").
	}
}
# limit to 10 results so we don't timeout
LIMIT 10 Try it! Popular eye colors among humans [edit] The following query uses these:Items: human (Q5)   Properties: instance of (P31)   , eye color (P1340)    Features: BubbleChart (Q24515280)  #added before 2016-10
#illustrates bubblechart view, count

#defaultView:BubbleChart
SELECT ?eyeColorLabel (COUNT(?human) AS ?count)
WHERE
{
	?human wdt:P31 wd:Q5.
	?human wdt:P1340 ?eyeColor.
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?eyeColorLabel Try it! Humans whose gender we know we don't know [edit] The following query uses these:Properties: sex or gender (P21)   #added before 2016-10
# Demonstrates filtering for \"unknown value\"
SELECT ?human ?humanLabel
WHERE
{
	?human wdt:P21 ?gender
	FILTER isBLANK(?gender) .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
} Try it! URLs of Wikipedia in all languages [edit] This query provides an alternative to scraping the Wikipedia.org portal page and various lists/tables of Wikipedias that are out there. PREFIX schema: <http://schema.org/>

SELECT ?sitelink
WHERE 
{
  BIND(wd:Q52 AS ?wikipedia)
  ?sitelink schema:about ?wikipedia .
  FILTER REGEX(STR(?sitelink), \".wikipedia.org/wiki/\") .
}
 Try it!  All items with a property [edit] # Sample to query all values of a property
# Property talk pages on Wikidata include basic queries adapted to each property
SELECT
  ?item ?itemLabel
  ?value ?valueLabel
# valueLabel is only useful for properties with item-datatype
WHERE 
{
  ?item wdt:P1800 ?value
  # change P1800 to another property        
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
# remove or change limit for more results
LIMIT 10
 Try it! Showcase Queries [edit] These queries show the power and functionality of SPARQL and WDQS GUI. Largest cities with female mayor [edit] #added before 2016-10
#TEMPLATE={\"template\":\"Largest ?c with ?sex head of government\",\"variables\":{\"?sex\":{\"query\":\" SELECT ?id WHERE { ?id wdt:P31 wd:Q48264 .  } \"},\"?c\":{\"query\":\"SELECT DISTINCT ?id WHERE {  ?c wdt:P31 ?id.  ?c p:P6 ?mayor. }\"} } }
SELECT DISTINCT ?city ?cityLabel ?mayor ?mayorLabel
WHERE
{
  BIND(wd:Q6581072 AS ?sex)
  BIND(wd:Q515 AS ?c)

	?city wdt:P31/wdt:P279* ?c .  # find instances of subclasses of city
	?city p:P6 ?statement .            # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .          # ... that has the value ?mayor
	?mayor wdt:P21 ?sex .       # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	
	# Now select the population value of the ?city
	# (wdt: properties use only statements of \"preferred\" rank if any, usually meaning \"current population\")
	?city wdt:P1082 ?population .
	# Optionally, find English labels for city and mayor:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .
	}
}
ORDER BY DESC(?population)
LIMIT 10
 Try it! List of countries ordered by the number of their cities with female mayor [edit] #added before 2016-10
SELECT ?country ?countryLabel (count(*) AS ?count)
WHERE
{
	?city wdt:P31/wdt:P279* wd:Q515 . # find instances of subclasses of city
	?city p:P6 ?statement .           # with a P6 (head of goverment) statement
	?statement ps:P6 ?mayor .         # ... that has the value ?mayor
	?mayor wdt:P21 wd:Q6581072 .      # ... where the ?mayor has P21 (sex or gender) female
	FILTER NOT EXISTS { ?statement pq:P582 ?x }  # ... but the statement has no P582 (end date) qualifier
	?city wdt:P17 ?country .          # Also find the country of the city
 	
	# If available, get the \"ru\" label of the country, use \"en\" as fallback:
	SERVICE wikibase:label {
		bd:serviceParam wikibase:language \"ru,en\" .
	}
}
GROUP BY ?country ?countryLabel
ORDER BY DESC(?count)
LIMIT 100
 Try it! Popular surnames among humans [edit] #added before 2016-10

#defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?human) AS ?count) WHERE {
      ?human wdt:P31 wd:Q5.
      ?human wdt:P734 ?surname.
    }
    GROUP BY ?surname
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?count)
LIMIT 100
 Try it! Given names with most variations [edit] #added before 2016-10

SELECT ?name (COUNT(?otherName) AS ?count)
WHERE
{
  ?name wdt:P31 wd:Q202444;
        wdt:P460 ?otherName.
}
GROUP BY ?name
ORDER BY DESC(?count)
LIMIT 10
 Try it! Popular surnames among fictional characters [edit] #added before 2016-10

#defaultView:BubbleChart
SELECT ?surname ?surnameLabel ?count
WHERE
{
  {
    SELECT ?surname (COUNT(?person) AS ?count) WHERE {
      ?person (wdt:P31/wdt:P279*) wd:Q95074.
      ?person wdt:P734 ?surname.
    }
    GROUP BY ?surname
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?count)
LIMIT 100
 Try it! Women with most sitelinks and no image born in 1921 or later [edit] SELECT ?s ?desc ?linkcount
WHERE
{
  ?s wdt:P31 wd:Q5 ;   # human
     wdt:P21 wd:Q6581072 ;  # gender: female
     wdt:P569 ?born .
  FILTER (?born >= \"1921-01-01T00:00:00Z\"^^xsd:dateTime) .
  ?s wikibase:sitelinks ?linkcount .
  MINUS {
    ?s wdt:P18 []  # exclude if there is an image
  }
?s rdfs:label ?desc FILTER(lang(?desc)=\"en\").
}
GROUP BY ?s ?desc ?linkcount
ORDER BY DESC(?linkcount)
LIMIT 50
 Try it! Whose birthday is today? [edit] The following query uses these:Properties: date of birth (P569)   #Whose birthday is today?
SELECT ?entityLabel (YEAR(?date) as ?year)
WHERE
{
    BIND(MONTH(NOW()) AS ?nowMonth)
    BIND(DAY(NOW()) AS ?nowDay)

    ?entity wdt:P569 ?date .
    FILTER (MONTH(?date) = ?nowMonth && DAY(?date) = ?nowDay)
    SERVICE wikibase:label {
        bd:serviceParam wikibase:language \"en\" .
    }
}
LIMIT 10 Try it! Finding John and Sarah Connor [edit] #added before 2016-10
 SELECT * WHERE {
  ?p wdt:P1080 wd:Q620588 . # from fictional universe: Terminator
  ?p rdfs:label ?pl .
  FILTER (lang(?pl) = \"en\")
  ?p wdt:P25 ?m .  # ?m is mother of ?p
  ?m rdfs:label ?ml .
  FILTER (lang(?ml) = \"en\")
}
 Try it! Data of Douglas Adams [edit] #added before 2016-10

PREFIX entity: <http://www.wikidata.org/entity/>
#partial results

SELECT ?propUrl ?propLabel ?valUrl ?valLabel ?picture
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"identity\"@en AS ?propLabel ) .
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel
	}
	
  	?valUrl rdfs:label ?valLabel
	FILTER (LANG(?valLabel) = 'en') .
	OPTIONAL{ ?valUrl wdt:P18 ?picture .}
	FILTER (lang(?propLabel) = 'en' )
}
ORDER BY ?propUrl ?valUrl
LIMIT 200
 Try it!  Data of Douglas Adams (modified version) [edit] PREFIX entity: <http://www.wikidata.org/entity/>

#  In addition to the original query this one comes with some advantages:
#  - You will get only literals as results, (even if the values are stored as IRI in wikibase)
#  - That means you will also get properties as birth date, alphanumeric identifier and so on.
#  - The list is ordered numerically by property number. (So P19 comes before P100) 
#  - All label, altLabel and description in a given Language are included.
#  You may open a separate column ?valUrl if you need also the IRI
#
#  Please advise, if there is an option to put the Q-Number  and/or the Language 
#  code into a runtime variable. 

SELECT ?propNumber ?propLabel ?val
WHERE
{
	hint:Query hint:optimizer 'None' .
	{	BIND(entity:Q42 AS ?valUrl) .
		BIND(\"N/A\" AS ?propUrl ) .
		BIND(\"Name\"@de AS ?propLabel ) .
       entity:Q42 rdfs:label ?val .
      
        FILTER (LANG(?val) = \"de\") 
	}
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"AltLabel\"@de AS ?propLabel ) .
        optional{entity:Q42 skos:altLabel ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
    UNION
    {   BIND(entity:Q42 AS ?valUrl) .
      
        BIND(\"Beschreibung\"@de AS ?propLabel ) .
        optional{entity:Q42 schema:description ?val}.
        FILTER (LANG(?val) = \"de\") 
    }
   	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' )
        filter  isliteral(?valUrl) 
        BIND(?valUrl AS ?val)
	}
	UNION
	{	entity:Q42 ?propUrl ?valUrl .
		?property ?ref ?propUrl .
		?property rdf:type wikibase:Property .
		?property rdfs:label ?propLabel.
     	FILTER (lang(?propLabel) = 'de' ) 
        filter  isIRI(?valUrl) 
        ?valUrl rdfs:label ?valLabel 
		FILTER (LANG(?valLabel) = \"de\") 
         BIND(CONCAT(?valLabel) AS ?val)
	}
        BIND( SUBSTR(str(?propUrl),38, 250) AS ?propNumber)
}
ORDER BY xsd:integer(?propNumber)
 Try it!  Bubble charts [edit] Overall causes of death ranking [edit] #defaultView:BubbleChart
#TEMPLATE={\"template\":\"Overall causes of death ranking of ?thing \",\"variables\":{\"?thing\": {\"query\":\"SELECT ?id  (COUNT(?id) AS ?count) WHERE {  ?sub wdt:P509 ?y.  ?sub wdt:P31 ?id. } GROUP BY ?id \"} } }
SELECT ?cid ?cause (COUNT(*) AS ?count) WHERE {
  BIND(wd:Q5 AS ?thing)
  ?pid wdt:P31 ?thing;
      wdt:P509 ?cid.
SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?cid rdfs:label ?cause}
}
GROUP BY ?cid ?cause
ORDER BY DESC(?count) ?cause
 Try it! WWII battle durations [edit] #defaultView:BubbleChart
SELECT DISTINCT ?item ?itemLabel (?end - ?start AS ?duration)
WHERE
{
	?item wdt:P361* wd:Q362 ;
          wdt:P31/wdt:P279* wd:Q178561 ;
          wdt:P580 ?start ;
          wdt:P582 ?end .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" }
}
 Try it! The top 10 heaviest humans [edit] The following query uses these:Items: human (Q5)   Properties: mass (P2067)   , instance of (P31)    Features: BubbleChart (Q24515280)  """@en;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX psn: <http://www.wikidata.org/prop/statement/value-normalized/>
PREFIX p: <http://www.wikidata.org/prop/>
PREFIX bd: <http://www.bigdata.com/rdf#>
#defaultView:BubbleChart
#TEMPLATE={ \"template\": \"The top 10 heaviest ?type \", \"variables\": { \"?type\": { \"query\": \"SELECT DISTINCT ?id WHERE { ?i wdt:P2067 ?v. ?i wdt:P31 ?id}\" } } }
SELECT ?item ?itemLabel ?mass ?image WHERE {
  BIND(wd:Q5 AS ?type)
  ?item wdt:P31 ?type;
        p:P2067/psn:P2067/wikibase:quantityAmount ?mass.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,es,fr,de\" }
}
ORDER BY DESC(?mass)
LIMIT 10""" .
