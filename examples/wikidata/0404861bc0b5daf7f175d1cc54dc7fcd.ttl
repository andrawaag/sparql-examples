@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-0404861bc0b5daf7f175d1cc54dc7fcd> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  dcterms:isPartOf <https://www.wikidata.org//wiki/User_talk:Pi_bot/doublecheck>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d863731-wikidata_prefixes;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX schema: <http://schema.org/>
PREFIX bd: <http://www.bigdata.com/rdf#>
# find a string in the description that isn't in the label

SELECT 
  ?search 
  ?item ?itemLabel ?itemDescription 
  ?instanceof ?instanceofLabel
WHERE
{
   VALUES ?text { \"UNIQ\" }
   BIND ( CONCAT(?text, ' hasdescription:en -inlabel:\"', ?text, '\"') as ?search  ) 
   SERVICE wikibase:mwapi  # max. 10000
   {
     bd:serviceParam wikibase:api \"Search\" .
     bd:serviceParam wikibase:endpoint \"www.wikidata.org\" .
     bd:serviceParam mwapi:srnamespace \"0\" .
     bd:serviceParam mwapi:srsearch ?search .
     ?item wikibase:apiOutputItem mwapi:title.
   }
   FILTER EXISTS {   ?item schema:description ?desc . 
                     FILTER( lang(?desc)=\"en\" && CONTAINS( ?desc, ?text) ) 
                  }
   OPTIONAL {?item wdt:P31 wd:instanceof }
   SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\" .}
}
ORDER BY deSC(?check_text)""" .
