@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix schema: <https://schema.org/> .

<https://www.wikidata.org/#query-8bd398581cdcb452e7cb1c584a51d9f8> a sh:SPARQLExecutable,
    sh:SPARQLSelectExecutable;
  rdfs:comment """Explore Wikidata's classes and properties: https://tools.wmflabs.org/hay/propbrowse/ https://tools.wmflabs.org/sqid/#/browse?type=properties https://tools.wmflabs.org/wikidata-exports/miga/ Here are some show and tell SPARQL queries: Contents 1 Passage 1.1 Properties for a type 1.2 Toponym analysis 1.3 Translations 1.4 Translations that don't link to a source work 1.5 The most prolific translators 1.6 Works translated by the most prolific translator 1.7 Literary works with the most translations 1.8 Short tail works that have been translated into English 1.9 Cornell employees, ordered by their start time 1.10 employees of Cornell who have author the most academic writings (not necessarily within that tenure though) 1.11 Death date of Jane Austen 1.12 Field of work of the author of \"De re metallica\" 1.13 Modern country where Mary Magdaline died 1.14 first names of main characters of notable works written by Jane Austen 1.15 Women Computer Scientists 1.16 Item types associated with translator property 1.17 Buildings 1.18 Greek dieties 1.19 Human settlements in Brazil 1.20 Items related to Francesco Francia 1.21 Joint ventures 1.22 Publishers etc 1.23 Properties associated with Publishers etc 1.24 List of Wikidata property to indicate a constraint 1.25 Exclude a few things 2 Library related 2.1 Top 1000 sitelinked women that lack VIAF IDs 2.2 People with the most fields of work (dated) 2.3 List of external equivalent/sub classes 2.4 List of equivalent properties 2.5 Subclasses for selected high-level classes 2.6 Manuscripts 2.7 Collective Pseudonyms 2.8 The people behind collective pseudonyms (at one stage or another) 2.9 Works authored by a collective pseudonym along with the person(s) who did the actual writing 2.10 10 Miscellaneous Works 2.11 10 Miscellaneous Editions 2.12 Editions of Encyclopedia Britannica (Q455) in publication date order 2.13 Editions of Diary of a Young Girl (Q6911) 2.14 Works authored by baseball players 2.15 Top 50 for P31 (instance of) and P279 (subclass of) of items using P243 (OCLC control number) 2.16 List of properties associated with OCLC control numbers 2.17 Top 50 for P31 (instance of) and P279 (subclass of) of items using P214 (VIAF identifier) 2.18 Properties associated with (VIAF identifiers) 2.19 Top 50 for P31 (instance of) and P279 (subclass of) of items using P2163 (FAST identifier) 2.20 Properties associated with P2163 (FAST identifiers) 2.21 List of law reviews that are identified/described in both Wikidata and WorldCat 2.22 List of ISSN-identified serials that are identified/described in both Wikidata and WorldCat 2.23 Work/Editions that are identified/described in both Wikidata and WorldCat 2.24 Works identified/described in both Wikidata and WorldCat that were authored by Jane Austen 2.25 Characters in books in WorldCat 2.26 Book Series 2.27 Characters and the Series (where they originate?) 2.28 Items related to the Sherlock Holmes Series 2.29 Publishers 2.30 Imprints 2.31 100 book topics and the type of thing(s) they are 2.32 Cookbooks 2.33 Russian scifi 2.34 Properties related to various aspects of Vegetarian 2.35 Properties related to New York City 2.36 Autobiographies (inferred by author = about) 2.37 Autobiographies (declared) 2.38 External identifiers 2.39 Works authored by entities with ISNI identifiers 2.40 Comparison of author coverage between VIAF, ORCID, ISNI, and FAST 2.41 Things in Wikidata that have associated FAST identifiers 2.42 Multilingual labels/descriptions for things in Wikidata that have associated FAST identifiers 2.43 A few of the types that Wikidata assigns (via wdt:P31 'instance of') to things that have FAST identifiers 2.44 Editions (aka FRBR Manifestations) in Wikidata that link to online content (aka FRBR Digital Items) 2.45 Properties associated with editions 2.46 Wikidata items that have VIAF identifiers 2.47 Wikidata items that have DOI identifiers 2.48 Books in Wikidata with OCLC identifiers 2.49 Books in Wikidata that don't have an OCLC identifiers, with a link to suggestions 2.50 Properties of The Illuminatus! Trilogy 2.51 Exploring the Notable works property 2.52 Types of Notable Works 2.53 Works authored and illustrated by the same individual 2.54 People who perform in movies that are based on books they authored 2.55 People who author a book that is based on a movie they performed in 2.56 People who form a production company and then perform in one of its movies 2.57 Authors that self-publish 2.58 Editions (reified form) 2.59 Editions of Uncle Tom's Cabin (reified form) 2.60 Variations of a work that aren't in the original language 2.61 Properties associated with work variants that are referenced in multiple languages 2.62 A bespoke example of a work with language variants 2.63 Uses of OCNs in a \"qualified\" form 2.64 OCNs with an associated edition literal 2.65 Things with OCNs and ISBNs 2.66 Things with OCNs and DNB identifiers 2.67 WorldCat things related to VIAF Things 2.68 WorldCat things related to VIAF Things (using Schema.org properties) 2.69 Test identical id value template 2.70 Collections with items represented in Wikidata 2.71 Who played M in Quantum of Solace? 2.72 Fictional Animal Characters 2.73 Fictional Universes 2.74 States that don't have VIAF IDs 2.75 Real people who are fictionalized in the context of a work 2.76 List of publishers 2.77 List of publisher imprints 2.78 Serial/Volume/Issue 2.79 Some licensed works 2.80 Some identified licenses 2.81 Types of licenses 2.82 Identified licenses (declared) 2.83 Creative Commons licenses 2.84 Form/genre 2.84.1 Novels 2.84.2 Plays 2.84.3 Drawings 2.85 Public Libraries 2.86 Properties associated with public libraries 2.87 Academic Libraries 2.88 University Presses 2.89 Properties associated with academic libraries 2.90 Properties associated with libraries 2.91 Scientific articles 2.92 Properties associated with scientific articles 2.93 Scientific articles with links to fulltext 2.94 Oddities 2.94.1 WikiData Books with OCNs but without authors 2.95 Star Wars novels 2.96 Erin Hunter analysis 2.97 Scholarly articles that have Wikipedia articles about them 2.98 Types of things that are classified as \"unknown\" 2.99 Types of entities that have ISSNs 2.100 Follows claims where the types aren't the same 2.101 Replaces claims where the types aren't the same 2.102 Types of things that get replaced by something else (P1366) 2.103 Type of things that replace something else (P1365) 2.104 Types of things that are followed by something else (P156) 2.105 Types of things that follow something else (P155) 2.106 Nice example of using VALUES clause with multiple variables 2.107 VIAF Single Value Constraint violations 2.108 Fictional universes with the most related entities 2.109 Names according to the Discogs master database 2.110 Wikidata items with the most external ID associated labels 2.111 Things with the most names in external databases 3 Digital Collections 4 Digital Repository 5 Constraint violation 5.1 Examples 6 Misc 6.1 Hybrid search/query example 6.2 OCN/page as claim references 6.3 One-of constraints 6.4 Languages with/without LCSH ID 6.5 Who followed President Buchanan in various political offices? 6.6 Family names with the most variants 7 Wikidata -> BF Crosswalks 7.1 Identifiers and Notes 7.1.1 Crosswalk ISBN identifiers from Wikidata to BF 2.0 (method 1) 7.1.2 Crosswalk ISBN identifiers from Wikidata to BF 2.0 (method 2) 7.1.3 Crosswalk Wikidata into a BF 2.0 Note (example 1) 7.2 Agents and Roles 7.2.1 Crosswalk Wikidata contributor to BF 2.0 (combined methods) 8 Baseball 8.1 Shortstops for the San Francisco Giants 8.2 All the shortstops, when they were born, and which teams they played for 9 operas 9.1 composers without a composition 10 Network of Resources 10.1 Teams 10.2 People 10.3 Systems 10.4 Roles 10.5 Skills 10.6 Products 10.7 Work 10.8 Quality 10.9 Metrics/KPIs 10.10 Variations of the the personal name \"Jeff\" 11 Lexical analysis 11.1 Common properties for Lexemes 11.2 Lexeme languages 11.3 Common lexical categories 11.4 List of wikibase:grammaticalFeatures 11.5 Book topics with their plural lexical form(s) 11.6 Plural form of an Wikibase Item 11.7 Lexemes with the most senses 11.8 English Lexemes with the most forms 11.9 Lexemes with the most entitifed senses 12 Stuff 12.1 Perry Mason Works 12.2 Selected places 12.3 What novels did Jane Austen and Douglas Adams write? 12.4 Famous authors that wrote one or more book series 12.5 Casebook of Sherlock Holmes 12.6 Types of series 12.7 Translations 12.8 non-work types associated with OCN external IDs 12.9 Usage Instructions 13 Type constraint violations 14 Translations of Les Miserables 15 Useful links 16 Attribution Passage [edit] Properties for a type [edit] The following query uses these:Properties: properties for this type (P1963)   SELECT ?type ?typeLabel (COUNT(DISTINCT ?propertyForType) AS ?numPropsForType) 
WHERE {
  ?type wdt:P1963 ?propertyForType .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?type ?typeLabel 
ORDER BY DESC(?numPropsForType) Try it! Toponym analysis [edit] The following query uses these:Items: toponym (Q7884789)   Properties: instance of (P31)   #SELECT ?item ?itemLabel ?propLabel ?toponym ?toponymLabel 
SELECT DISTINCT ?p ?propLabel (COUNT(?item) AS ?itemCount)
WHERE {
  ?item ?p ?toponym.
  ?prop wikibase:directClaim ?p.
  ?toponym wdt:P31 wd:Q7884789 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?p ?propLabel
ORDER BY DESC(?itemCount) Try it! Translations [edit] The following query uses these:Items: book (Q571)   , Qur’an (Q428)   , Bible (Q1845)   , translation (Q7553)   Properties: edition or translation of (P629)   , language of work or name (P407)   , instance of (P31)   , translator (P655)   SELECT ?translation ?translationLabel ?translationLanguageLabel ?translatorLabel ?sourceLabel ?sourceLanguageLabel
WHERE {
  {
    ?translation wdt:P629 ?source;
          wdt:P407 ?translationLanguage.
    ?source wdt:P407 ?sourceLanguage ;
            wdt:P31 wd:Q571 .
    OPTIONAL {?translation wdt:P655 ?translator}
    FILTER(?translationLanguage != ?sourceLanguage)
    
  }
  FILTER(?source != wd:Q428 && ?source != wd:Q1845)
#  UNION 
#  {?item wdt:P31 wd:Q7553 .}
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de,fr\". }
} Try it! Translations that don't link to a source work [edit] The following query uses these:Items: translation (Q7553)   Properties: instance of (P31)   , edition or translation of (P629)   , language of work or name (P407)   , ISO 639-1 code (P218)   , of (P642)   # Declared translations that don't link to a source work
SELECT ?translation (SAMPLE(?nativeLabel) AS ?title) ?translationDescription ?sitelinks
WHERE {
  {
    ?translation wdt:P31 wd:Q7553.
  }
  UNION
  {
    ?translation wdt:translator [].
  }
  MINUS {?translation wdt:P629 []}
  MINUS {?translation p:P31/pq:P642 []}
  ?translation rdfs:label ?nativeLabel .
  OPTIONAL {
    ?translation wdt:P407 ?language. 
    ?language wdt:P218 ?langcode.
    FILTER(LANG(?nativeLabel)=?langcode)
  }
  ?translation wikibase:sitelinks ?sitelinks.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?translation ?translationDescription ?sitelinks
ORDER BY DESC(?sitelinks)
LIMIT 100 Try it! The most prolific translators [edit] The following query uses these:Properties: translator (P655)   SELECT DISTINCT ?translator ?translatorLabel (COUNT(DISTINCT ?item) AS ?numTranslations)
WHERE {
  ?item wdt:P655 ?translator.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,ru,fr\". }
}
GROUP BY ?translator ?translatorLabel
ORDER BY DESC(?numTranslations)
LIMIT 100 Try it! Works translated by the most prolific translator [edit] The following query uses these:Items: Ilya Kaminsky-Halpérine (Q964250)   Properties: translator (P655)   , author (P50)   , edition or translation of (P629)   SELECT DISTINCT ?source ?sourceLabel ?author ?authorLabel ?translation ?translationLabel
WHERE {
  ?translation wdt:P655 wd:Q964250.
  OPTIONAL {?translation wdt:P50 ?author.}
  OPTIONAL {?translation wdt:P629 ?source.}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,ru,fr\". }
}
ORDER BY ?translationLabel Try it! Literary works with the most translations [edit] The following query uses these:Items: literary work (Q7725634)   Properties: edition or translation of (P629)   , instance of (P31)   , subclass of (P279)   # by Realworldobject, 2019-12-04
# Literary works with the most translations
SELECT ?work ?workLabel (COUNT(DISTINCT ?translation) AS ?count)
WHERE {
  ?translation wdt:P629 ?work .
  ?work wdt:P31/wdt:P279* wd:Q7725634.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?work ?workLabel
ORDER BY DESC(?count)
LIMIT 100 Try it! Short tail works that have been translated into English [edit] The following query uses these:Items: English (Q1860)   Properties: has edition or translation (P747)   , language of work or name (P407)   , title (P1476)   , author (P50)   , translator (P655)   # by Realworldobject, 2019-12-04
# Short tail works that have been translated into English
SELECT DISTINCT ?original (SAMPLE(?originalTitle) AS ?originalTitle) (GROUP_CONCAT(DISTINCT ?authorLabel) AS ?authors) (GROUP_CONCAT(DISTINCT ?originalLangLabel) AS ?originalLangs) ?translation ?translationTitle ?translationLangLabel ?translatorLabel ?sitelinks
WHERE {
  VALUES ?translationLang {
    wd:Q1860  # English
  }
  ?original wdt:P747 ?translation ;
            wdt:P407 ?originalLang ;
            wdt:P1476 ?originalTitle ;
            wdt:P50 ?author ;
            wikibase:sitelinks ?sitelinks .
  ?translation wdt:P655 ?translator ;
               wdt:P407 ?translationLang ;
               wdt:P1476 ?translationTitle;
               wdt:P655 ?translator .

  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". ?author rdfs:label ?authorLabel .?originalLang rdfs:label ?originalLangLabel}
}
GROUP BY ?original ?translation ?translationTitle ?translationLangLabel ?translatorLabel ?sitelinks
ORDER BY DESC(?sitelinks)
LIMIT 100 Try it! Cornell employees, ordered by their start time [edit] The following query uses these:Items: Cornell University (Q49115)   Properties: employer (P108)   , start time (P580)   , end time (P582)   SELECT ?person ?personLabel ?employer ?employerLabel ?startTime ?endTime
WHERE {
  VALUES ?employer {
    wd:Q49115
  }
  ?person p:P108 ?statement.
  ?statement ps:P108 ?employer.
  OPTIONAL {?statement pq:P580 ?startTime}
  OPTIONAL {?statement pq:P582 ?endTime}
  
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?startTime) Try it! employees of Cornell who have author the most academic writings (not necessarily within that tenure though) [edit] The following query uses these:Items: Cornell University (Q49115)   , academic writing (Q4119870)   Properties: employer (P108)   , parent organization (P749)   , author (P50)   , instance of (P31)   , subclass of (P279)   # employees of Cornell who have author the most academic writings (not necessarily within that tenure though)
SELECT ?institution ?institutionLabel ?scholar ?scholarLabel (COUNT(DISTINCT ?work) AS ?numWorks)
WHERE
{
  VALUES ?institution {
    wd:Q49115
  }
  ?scholar wdt:P108/wdt:P749* ?institution. 
  ?work wdt:P50 ?scholar;
        wdt:P31/wdt:P279* wd:Q4119870.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?scholar ?scholarLabel ?institution ?institutionLabel
ORDER BY DESC(?numWorks)
LIMIT 100 Try it! Death date of Jane Austen [edit] The following query uses these:Items: Jane Austen (Q36322)   Properties: date of death (P570)   #Death date of Jane Austen
SELECT ?deathdate
WHERE {
  wd:Q36322 wdt:P570 ?deathdate. 
} Try it! Field of work of the author of \"De re metallica\" [edit] The following query uses these:Items: De Re Metallica (Q3193676)   Properties: author (P50)   , field of work (P101)   #Field of work of author of \"De re metallica\"
SELECT ?fieldOfWork ?fieldOfWorkLabel 
WHERE {
  wd:Q3193676 wdt:P50 ?author.
  ?author wdt:P101 ?fieldOfWork.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Modern country where Mary Magdaline died [edit] The following query uses these:Items: Mary Magdalene (Q63070)   Properties: place of death (P20)   , country (P17)   #Modern country where Mary Magdaline died
SELECT ?placeOfDeath ?placeOfDeathLabel ?country ?countryLabel
WHERE {
  wd:Q63070 wdt:P20 ?placeOfDeath.
  ?placeOfDeath wdt:P17 ?country.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! first names of main characters of notable works written by Jane Austen [edit] The following query uses these:Items: Jane Austen (Q36322)   Properties: notable work (P800)   , characters (P674)   , given name (P735)   #first name of main characters of notable works written by Jane Austen
SELECT ?notableWork ?notableWorkLabel ?character ?characterLabel ?givenName ?givenNameLabel
WHERE {
  wd:Q36322 wdt:P800 ?notableWork.
  ?notableWork wdt:P674 ?character.
  ?character wdt:P735 ?givenName.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Women Computer Scientists [edit] The following query uses these:Items: human (Q5)   , female (Q6581072)   , computer scientist (Q82594)   Properties: instance of (P31)   , sex or gender (P21)   , occupation (P106)   , VIAF ID (P214)   #Women Computer Scientists
SELECT ?item ?itemLabel ?itemDescription ?itemAltLabel ?viafID
WHERE 
{
  ?item wdt:P31 wd:Q5;  # instance of: human
        wdt:P21 wd:Q6581072;  # gender: female
        wdt:P106 wd:Q82594.  # occupation: computer scientist
  OPTIONAL {?item wdt:P214 ?viafID}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Item types associated with translator property [edit] The following query uses these:Properties: translator (P655)   , instance of (P31)   #Item types associated with the translator property
SELECT DISTINCT ?type ?typeLabel (COUNT(DISTINCT ?translation) AS ?numOccurs)
#SELECT ?translation ?translationLabel ?translator ?translatorLabel (COUNT(DISTINCT ?translation) AS ?numOccurs)
WHERE 
{
  ?translation wdt:P655 ?translator;
               wdt:P31 ?type.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
#LIMIT 100
GROUP BY ?type ?typeLabel
ORDER BY DESC(?numOccurs) Try it! Buildings [edit] The following query uses these:Items: building (Q41176)   Properties: instance of (P31)   #Buildings
SELECT ?item ?itemLabel 
WHERE 
{
  ?item wdt:P31 wd:Q41176.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Greek dieties [edit] The following query uses these:Items: Greek deity (Q22989102)   Properties: instance of (P31)   #Greek Dieties
SELECT ?item ?itemLabel ?itemDescription
WHERE 
{
  ?item wdt:P31 wd:Q22989102.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Human settlements in Brazil [edit] The following query uses these:Items: human settlement (Q486972)   , Brazil (Q155)   Properties: instance of (P31)   , subclass of (P279)   , located in the administrative territorial entity (P131)   #Human settlements in Brazil
SELECT ?item ?itemLabel ?itemDescription
WHERE 
{
  ?item wdt:P31/wdt:P279 wd:Q486972;
        wdt:P131* wd:Q155.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Items related to Francesco Francia [edit] The following query uses these:Items: Francesco Francia (Q260057)   # Items related to Francesco Francia
SELECT ?item ?itemLabel ?p ?propLabel
WHERE 
{
  ?item ?p wd:Q260057.
  ?prop wikibase:directClaim ?p.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Joint ventures [edit] The following query uses these:Items: joint venture (Q489209)   Properties: instance of (P31)   #Joint ventures
SELECT ?item ?itemLabel 
WHERE 
{
  ?item wdt:P31 wd:Q489209.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Publishers etc [edit] The following query uses these:Items: publishing company (Q2085381)   , imprint (Q2608849)   , record label (Q18127)   Properties: instance of (P31)   , subclass of (P279)   , inception (P571)   , dissolved, abolished or demolished date (P576)   , has subsidiary (P355)   #Publishers, etc.
SELECT ?publisher ?publisherLabel ?publisherDescription (COUNT(DISTINCT ?label) AS ?numLabel) ?sitelinks ?inception ?dissolved (COUNT(DISTINCT ?subsidiary) AS ?numSubsidiaries)
WHERE 
{
  VALUES ?type {
    wd:Q2085381  # publisher
    wd:Q2608849  # imprint
    wd:Q18127  # record label
    }
  ?publisher wdt:P31/wdt:P279 ?type;
             wikibase:sitelinks ?sitelinks.
  OPTIONAL {?publisher rdfs:label|skos:altLabel ?label}
  OPTIONAL {?publisher wdt:P571 ?inception}
  OPTIONAL {?publisher wdt:P576 ?dissolved}
  OPTIONAL {?publisher wdt:P355 ?subsidiary}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en,de,fr,ja,es,eo,ru,it\". }
}
GROUP BY ?publisher ?publisherLabel ?publisherDescription ?inception ?dissolved ?sitelinks
ORDER BY DESC(?sitelinks) Try it! Properties associated with Publishers etc [edit] The following query uses these:Items: publishing company (Q2085381)   , imprint (Q2608849)   , record label (Q18127)   Properties: instance of (P31)   , subclass of (P279)   #Properties associated with publishers, etc.
SELECT ?p ?propLabel (COUNT(?p) AS ?numOccurs)
WHERE 
{
  VALUES ?type {
    wd:Q2085381  # publisher
    wd:Q2608849  # imprint
    wd:Q18127  # record label
    }
  ?publisher wdt:P31/wdt:P279 ?type;
             ?p [].
  ?prop wikibase:directClaim ?p.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?p ?propLabel
ORDER BY DESC(?numOccurs) Try it! List of Wikidata property to indicate a constraint [edit] The following query uses these:Items: Wikidata property to indicate a constraint (Q21504947)   Properties: instance of (P31)   SELECT ?item ?itemLabel 
WHERE {
  ?item wdt:P31 wd:Q21504947 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Exclude a few things [edit] The following query uses these:Items: Jane Austen (Q36322)   , George Austen (Q3101398)   , Cassandra Austen (Q2505245)   Properties: sibling (P3373)   SELECT DISTINCT ?include ?includeLabel
WHERE {
  wd:Q36322 wdt:P3373 ?include .
  FILTER NOT EXISTS { 
    wd:Q36322 wdt:P3373 ?include .
    VALUES ?include { wd:Q3101398 wd:Q2505245 }
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". } 

} Try it! Library related [edit] Top 1000 sitelinked women that lack VIAF IDs [edit] The following query uses these:Items: female (Q6581072)   Properties: sex or gender (P21)   , VIAF ID (P214)   SELECT ?item ?itemLabel ?itemDescription ?sitelinks
WHERE {
  {
  SELECT ?item ?sitelinks
  WHERE {
    ?item wdt:P21 wd:Q6581072 ;
          wikibase:sitelinks ?sitelinks.
    MINUS {?item wdt:P214 []}
  }
  ORDER BY DESC(?sitelinks)
  LIMIT 1000
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?sitelinks) Try it! People with the most fields of work (dated) [edit] The following query uses these:Properties: field of work (P101)   , start time (P580)   SELECT ?item ?itemLabel (COUNT(?field) AS ?numFields) (GROUP_CONCAT(?fieldname) AS ?fields)
WHERE {
  ?item p:P101 ?stmt. 
  ?stmt ps:P101 ?field;
        pq:P580 ?starttime.
  ?field rdfs:label ?fieldname FILTER(LANG(?fieldname)=\"en\")
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?item ?itemLabel
HAVING(?numFields>1)
ORDER BY DESC(?numFields) 
LIMIT 10 Try it! List of external equivalent/sub classes [edit] The following query uses these:Properties: subclass of (P279)   , equivalent class (P1709)   #External equivalent/sub classes
PREFIX wikibase: <http://wikiba.se/ontology#>
SELECT ?wdClass ?label ?equivalentClass ?subclassOfExternal
WHERE {
  {?wdClass wdt:P279+/wdt:P1709 ?subclassOfExternal}
  UNION
  {?wdClass wdt:P1709 ?equivalentClass}
  ?wdClass rdfs:label ?label.
  FILTER(LANG(?label)=\"en\")
#  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 1000 Try it! List of equivalent properties [edit] The following query uses these:Properties: equivalent property (P1628)   , external subproperty (P2236)   , external superproperty (P2235)   PREFIX wikibase: <http://wikiba.se/ontology#>
SELECT ?wdt ?wdLabel ?equivalent ?externalSubproperty ?externalSuperproperty
WHERE {
  ?wd wikibase:directClaim ?wdt.
  OPTIONAL {?wd wdt:P1628 ?equivalent}
  OPTIONAL {?wd wdt:P2236 ?externalSubproperty}
  OPTIONAL {?wd wdt:P2235 ?externalSuperproperty}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
  FILTER(BOUND(?equivalent) || BOUND(?externalSubproperty) || BOUND(?externalSuperproperty))
}
ORDER BY ?wd ?equivalent ?externalSubproperty ?externalSuperproperty Try it! Subclasses for selected high-level classes [edit] The following query uses these:Items: human (Q5)   , book (Q571)   , geographic location (Q2221906)   , organization (Q43229)   Properties: subclass of (P279)   # Subclasses for selected high-level classes
SELECT DISTINCT ?class ?classLabel ?subclass ?subclassLabel
WHERE
{
	?subclass wdt:P279* ?class .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
    VALUES ?class {
      wd:Q5	# human
      wd:Q571	# book
      wd:Q2221906	# geographic location
      wd:Q43229	# organization
    }
}
ORDER BY ?classLabel ?subclassLabel Try it! Manuscripts [edit] The following query uses these:Items: manuscript (Q87167)   Properties: instance of (P31)   #Manuscripts
SELECT ?item ?itemLabel
WHERE
{
	?item wdt:P31 wd:Q87167 .
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
} Try it! Collective Pseudonyms [edit] Limited to those who authored something The following query uses these:Items: collective pseudonym (Q16017119)   , duo (Q10648343)   , human (Q5)   Properties: author (P50)   , instance of (P31)   , subclass of (P279)   SELECT DISTINCT ?collectivePseudonymLabel ?collectivePseudonym ?humanLabel ?human ?evidence
WHERE {
  ?evidence schema:about ?collectivePseudonym.
  ?work wdt:P50 ?collectivePseudonym.
  ?collectivePseudonym wdt:P31 wd:Q16017119.
  MINUS {?collectivePseudonym wdt:P31/wdt:P279* wd:Q10648343}
  ?human wdt:P31 wd:Q5.
  { ?collectivePseudonym ?p ?human }
  UNION
  { ?human ?p ?collectivePseudonym }
  FILTER regex(STR(?evidence), 'https://en.wikipedia.org/wiki/')
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?collectivePseudonym ?human
LIMIT 100 Try it! The people behind collective pseudonyms (at one stage or another) [edit] Limited to those who authored something The following query uses these:Items: collective pseudonym (Q16017119)   , human (Q5)   Properties: author (P50)   , instance of (P31)   SELECT DISTINCT ?collectivePseudonymLabel ?collectivePseudonym ?humanLabel ?human ?evidence
WHERE {
  ?evidence schema:about ?collectivePseudonym.
  ?work wdt:P50 ?collectivePseudonym.
  ?collectivePseudonym wdt:P31 wd:Q16017119.
  ?human wdt:P31 wd:Q5.
  { ?collectivePseudonym ?p ?human }
  UNION
  { ?human ?p ?collectivePseudonym }
  FILTER regex(STR(?evidence), 'https://en.wikipedia.org/wiki/')
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?collectivePseudonym ?human
LIMIT 100 Try it! Works authored by a collective pseudonym along with the person(s) who did the actual writing [edit] The following query uses these:Items: collective pseudonym (Q16017119)   , human (Q5)   Properties: author (P50)   , instance of (P31)   SELECT DISTINCT ?workLabel ?work ?collectivePseudonymLabel ?collectivePseudonym ?humanLabel ?human ?evidence
WHERE {
  ?evidence schema:about ?work.
  ?work wdt:P50 ?collectivePseudonym;
        wdt:P50 ?human.
  ?collectivePseudonym wdt:P31 wd:Q16017119.
  ?human wdt:P31 wd:Q5.
  {
    ?work ?workhumanrelationship ?human.
    ?collectivePseudonym ?p ?human
  }
  UNION
  {
    ?work ?workhumanrelationship ?human.
    ?human ?p ?collectivePseudonym
  }
  FILTER regex(STR(?evidence), 'https://en.wikipedia.org/wiki/')
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?enWorkLabel
LIMIT 100 Try it! 10 Miscellaneous Works [edit] The following query uses these:Items: book (Q571)   Properties: instance of (P31)   PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema: <http://schema.org/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?work ?workLabel ?evidence
WHERE {
  ?evidence schema:about ?work.
  ?work wdt:P31 wd:Q571.
  FILTER regex(STR(?evidence), 'https://en.wikipedia.org/wiki/')
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?workLabel
LIMIT 10 Try it! 10 Miscellaneous Editions [edit] The following query uses these:Items: version, edition or translation (Q3331189)   Properties: instance of (P31)   PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema: <http://schema.org/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?edition ?editionLabel ?evidence
WHERE {
  ?evidence schema:about ?edition.
  ?edition wdt:P31 wd:Q3331189.
  FILTER regex(STR(?evidence), 'https://en.wikipedia.org/wiki/')
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?editionLabel
LIMIT 10 Try it! Editions of Encyclopedia Britannica (Q455) in publication date order [edit] The following query uses these:Items: Encyclopædia Britannica (Q455)   Properties: edition or translation of (P629)   , publication date (P577)   PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema: <http://schema.org/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?editionLabel ?publicationDate ?edition
WHERE {
  ?edition wdt:P629 wd:Q455;
           wdt:P577 ?publicationDate.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?publicationDate Try it! Editions of Diary of a Young Girl (Q6911) [edit] It's cool how the English labels for editions contain the title as it would appear in the language of that edition. You have to go to the work level to see the English language title (whether there is an English language edition or not.) The following query uses these:Items: Diary of Anne Frank (Q6911)   Properties: original language of film or TV show (P364)   , publication date (P577)   , has edition or translation (P747)   , language of work or name (P407)   , translator (P655)   , publisher (P123)   PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX schema: <http://schema.org/>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?work ?workLabel ?workLanguageLabel ?edition ?editionLabel ?publisherLabel ?editionLanguageLabel ?editionDate ?translatorLabel ?translator
WHERE {
  FILTER (?work = wd:Q6911)
  {
    ?work wdt:P364 ?workLanguage;
          wdt:P577 ?originalPublicationDate;
          wdt:P747 ?edition.

    OPTIONAL {?work wdt:P407 ?workLanguage}
    OPTIONAL {?edition wdt:P655 ?translator}
    OPTIONAL {?edition wdt:P407 ?editionLanguage}
    OPTIONAL {?edition wdt:P577 ?editionDate}
    OPTIONAL {?edition wdt:P123 ?publisher}
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?editionDate ?translatorLabel Try it! Works authored by baseball players [edit] The following query uses these:Items: baseball player (Q10871364)   Properties: author (P50)   , occupation (P106)   PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?player ?playerLabel ?work ?workLabel ?evidence
WHERE
{
  ?evidence schema:about ?work.
  ?work wdt:P50 ?player.
  ?player wdt:P106 wd:Q10871364. # occupation: baseball player
  FILTER regex(STR(?evidence), 'https://en.wikipedia.org/wiki/')
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?playerLabel ?workLabel Try it! Top 50 for P31 (instance of) and P279 (subclass of) of items using P243 (OCLC control number) [edit] The following query uses these:Properties: OCLC control number (P243)   , instance of (P31)   , subclass of (P279)   SELECT ?class ?classLabel ?count ?use_as_Label
{	{	SELECT ?class (COUNT(*) AS ?count) (wd:P31 as ?use_as_)
		{	?a	wdt:P243	?p	; wdt:P31	?class}
        GROUP BY ?class ORDER BY DESC(?count) LIMIT 50
  	}
  	UNION
	{	SELECT ?class (COUNT(*) AS ?count) (wd:P279 as ?use_as_)
		{	?a	wdt:P243	?p	; wdt:P279	?class}
        GROUP BY ?class ORDER BY DESC(?count) LIMIT 50
  	}
  	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,en\" }
}
ORDER BY DESC(?count) ?class Try it! List of properties associated with OCLC control numbers [edit] The following query uses these:Properties: OCLC control number (P243)   SELECT ?qual ?qualLabel ?count WHERE {
  {
    SELECT ?qual (COUNT(DISTINCT ?item) AS ?count) WHERE {
         hint:Query hint:optimizer \"None\" .
         ?item p:P243 ?statement .
         ?statement ?pq_qual ?pq_obj .
         ?qual wikibase:qualifier ?pq_qual .
    }  GROUP BY ?qual
  } .

  OPTIONAL {
    ?qual rdfs:label ?qualLabel filter (lang(?qualLabel) = \"en\") .
  }
}
ORDER BY DESC(?count) ASC(?qualLabel) Try it! Top 50 for P31 (instance of) and P279 (subclass of) of items using P214 (VIAF identifier) [edit] The following query uses these:Properties: VIAF ID (P214)   , instance of (P31)   , subclass of (P279)   SELECT ?class ?classLabel ?count ?use_as_Label
{	{	SELECT ?class (COUNT(*) AS ?count) (wd:P31 as ?use_as_)
		{	?a	wdt:P214	?p	; wdt:P31	?class}
        GROUP BY ?class ORDER BY DESC(?count) LIMIT 50
  	}
  	UNION
	{	SELECT ?class (COUNT(*) AS ?count) (wd:P279 as ?use_as_)
		{	?a	wdt:P214	?p	; wdt:P279	?class}
        GROUP BY ?class ORDER BY DESC(?count) LIMIT 50
  	}
  	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,en\" }
}
ORDER BY DESC(?count) ?class Try it! Properties associated with (VIAF identifiers) [edit] The following query uses these:Properties: VIAF ID (P214)   SELECT ?qual ?qualLabel ?count WHERE {
  {
    SELECT ?qual (COUNT(DISTINCT ?item) AS ?count) WHERE {
         hint:Query hint:optimizer \"None\" .
         ?item p:P214 ?statement .
         ?statement ?pq_qual ?pq_obj .
         ?qual wikibase:qualifier ?pq_qual .
    }  GROUP BY ?qual
  } .

  OPTIONAL {
    ?qual rdfs:label ?qualLabel filter (lang(?qualLabel) = \"en\") .
  }
}
ORDER BY DESC(?count) ASC(?qualLabel) Try it! Top 50 for P31 (instance of) and P279 (subclass of) of items using P2163 (FAST identifier) [edit] The following query uses these:Properties: FAST ID (P2163)   , instance of (P31)   , subclass of (P279)   SELECT ?class ?classLabel ?count ?use_as_Label
{	{	SELECT ?class (COUNT(*) AS ?count) (wd:P31 as ?use_as_)
		{	?a	wdt:P2163	?p	; wdt:P31	?class}
        GROUP BY ?class ORDER BY DESC(?count) LIMIT 50
  	}
  	UNION
	{	SELECT ?class (COUNT(*) AS ?count) (wd:P279 as ?use_as_)
		{	?a	wdt:P2163	?p	; wdt:P279	?class}
        GROUP BY ?class ORDER BY DESC(?count) LIMIT 50
  	}
  	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,en\" }
}
ORDER BY DESC(?count) ?class Try it! Properties associated with P2163 (FAST identifiers) [edit] The following query uses these:Properties: FAST ID (P2163)   SELECT ?qual ?qualLabel ?count WHERE {
  {
    SELECT ?qual (COUNT(DISTINCT ?item) AS ?count) WHERE {
         hint:Query hint:optimizer \"None\" .
         ?item p:P2163 ?statement .
         ?statement ?pq_qual ?pq_obj .
         ?qual wikibase:qualifier ?pq_qual .
    }  GROUP BY ?qual
  } .

  OPTIONAL {
    ?qual rdfs:label ?qualLabel filter (lang(?qualLabel) = \"en\") .
  }
}
ORDER BY DESC(?count) ASC(?qualLabel) Try it! List of law reviews that are identified/described in both Wikidata and WorldCat [edit] The following query uses these:Items: law review (Q746654)   Properties: instance of (P31)   , OCLC control number (P243)   PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT ?sLabel ?s ?worldcatURI
WHERE {
  ?s wdt:P31 wd:Q746654;
     wdt:P243 ?ocn.
  BIND (URI(CONCAT(\"http://www.worldcat.org/oclc/\",?ocn)) AS ?worldcatURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?sLabel Try it! List of ISSN-identified serials that are identified/described in both Wikidata and WorldCat [edit] The following query uses these:Properties: title (P1476)   , instance of (P31)   , OCLC control number (P243)   , ISSN (P236)   PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?titleLabel ?s ?typeLabel ?worldcatURI ?issn
WHERE {
  ?s wdt:P1476 ?title;
     wdt:P31 ?type;
     wdt:P243 ?ocn;
     wdt:P236 ?issn.
  BIND (URI(CONCAT(\"http://www.worldcat.org/oclc/\",?ocn)) AS ?worldcatURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?issn ?titleLabel Try it! Work/Editions that are identified/described in both Wikidata and WorldCat [edit] The following query uses these:Properties: OCLC control number (P243)   , has edition or translation (P747)   , edition number (P393)   , language of work or name (P407)   PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?wdWork ?wcWork ?wdWorkLabel ?wdEdition ?wcEdition ?wdEditionLabel ?languageLabel ?editionNumber
WHERE {
  ?wdWork wdt:P243 ?ocnWork ;
          wdt:P747 ?wdEdition.
  ?wdEdition wdt:P243 ?ocnEdition .
  OPTIONAL {?wdEdition wdt:P393 ?editionNumber}
  OPTIONAL {?wdEdition wdt:P407 ?language}
  BIND (URI(CONCAT(\"http://www.worldcat.org/oclc/\",?ocnWork)) AS ?wcWork)
  BIND (URI(CONCAT(\"http://www.worldcat.org/oclc/\",?ocnEdition)) AS ?wcEdition)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?wdWorkLabel ?editionNumber
LIMIT 100 Try it! Works identified/described in both Wikidata and WorldCat that were authored by Jane Austen [edit] The following query uses these:Items: Jane Austen (Q36322)   Properties: author (P50)   , OCLC control number (P243)   PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?work ?workLabel ?worldcatURI
WHERE {
  ?work wdt:P50 wd:Q36322;
        wdt:P243 ?ocn.
  BIND (URI(CONCAT(\"http://www.worldcat.org/oclc/\",?ocn)) AS ?worldcatURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?workLabel Try it! Characters in books in WorldCat [edit] The following query uses these:Items: literary work (Q7725634)   Properties: instance of (P31)   , OCLC control number (P243)   , characters (P674)   PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?character ?characterLabel ?wcWork ?workLabel
WHERE {
  ?work wdt:P31 wd:Q7725634;
        rdfs:label ?workLabel;
        wdt:P243 ?ocn;
        wdt:P674 ?character.
  ?character rdfs:label ?characterLabel.
  BIND (URI(CONCAT(\"http://www.worldcat.org/oclc/\",?ocn)) AS ?wcWork)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?characterLabel ?workLabel
LIMIT 100 Try it! Book Series [edit] The following query uses these:Items: book series (Q277759)   Properties: instance of (P31)   , OCLC control number (P243)   PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?bookSeries ?bookSeriesLabel ?worldCat
WHERE {
  ?bookSeries wdt:P31 wd:Q277759;
     rdfs:label ?bookSeriesLabel.
  OPTIONAL {?bookSeries wdt:P243 ?ocn}
  BIND (URI(CONCAT(\"http://www.worldcat.org/oclc/\",?ocn)) AS ?worldCat)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?bookSeriesLabel Try it! Characters and the Series (where they originate?) [edit] The following query uses these:Items: book series (Q277759)   Properties: instance of (P31)   , characters (P674)   , OCLC control number (P243)   PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?characterLabel ?character ?bookSeriesLabel ?bookSeries
WHERE {
  ?bookSeries wdt:P31 wd:Q277759;
     wdt:P674 ?character;
     rdfs:label ?bookSeriesLabel.
  ?character rdfs:label ?characterLabel .
  OPTIONAL {?bookSeries wdt:P243 ?ocn}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?characterLabel ?bookSeriesLabel Try it! Items related to the Sherlock Holmes Series [edit] The following query uses these:Items: canon of Sherlock Holmes (Q2316684)   Properties: instance of (P31)   PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?seriesMember ?seriesMemberLabel ?typeLabel
WHERE {
  ?seriesMember ?p wd:Q2316684;
    wdt:P31 ?type;
  	rdfs:label ?seriesMemberLabel.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?typeLabel ?seriesMemberLabel Try it! Publishers [edit] The following query uses these:Items: publishing company (Q2085381)   Properties: instance of (P31)   , VIAF ID (P214)   , publisher (P123)   PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?publisherLabel ?publisher ?typeLabel ?viafURI (COUNT(?publisher) as ?count)
WHERE {
  ?publisher wdt:P31 ?type.
  OPTIONAL {?publisher wdt:P214 ?viaf}
  { ?publisher wdt:P31 wd:Q2085381}
  UNION
  { ?s wdt:P123 ?publisher . }
  BIND (URI(CONCAT(\"http://viaf.org/viaf/\",?viaf)) AS ?viafURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
GROUP BY ?publisher ?publisherLabel ?typeLabel ?viafURI
ORDER BY DESC(?count)
LIMIT 100 Try it! Imprints [edit] The following query uses these:Items: imprint (Q2608849)   Properties: instance of (P31)   PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?imprintLabel ?imprint
WHERE {
  ?imprint wdt:P31 wd:Q2608849;
           rdfs:label ?imprintLabel.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?imprintLabel Try it! 100 book topics and the type of thing(s) they are [edit] The following query uses these:Items: book (Q571)   Properties: instance of (P31)   , main subject (P921)   PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?topic ?topicLabel ?topicType ?topicTypeLabel
WHERE {
  ?book wdt:P31 wd:Q571;
        wdt:P921 ?topic.
  ?topic wdt:P31 ?topicType.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?topic ?topicType
LIMIT 100 Try it! Cookbooks [edit] The following query uses these:Items: cookbook (Q605076)   Properties: instance of (P31)   , genre (P136)   , OCLC control number (P243)   SELECT DISTINCT ?cookbook ?cookbookLabel ?worldcatURI
WHERE
{
  ?cookbook wdt:P31|wdt:P136 wd:Q605076.
  OPTIONAL {
    ?cookbook wdt:P243 ?ocn.
    BIND (URI(CONCAT(\"http://www.worldcat.org/oclc/\",?ocn)) AS ?worldcatURI)
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
} Try it! Russian scifi [edit] The following query uses these:Items: science fiction (Q24925)   , Russian (Q7737)   Properties: language of work or name (P407)   , genre (P136)   , title (P1476)   , OCLC control number (P243)   SELECT DISTINCT ?scifi ?title ?scifiLabel ?languageLabel ?worldcatURI
WHERE
{
  ?scifi wdt:P407 ?language;
             wdt:P136 wd:Q24925.

  OPTIONAL {?scifi wdt:P1476 ?title}

  OPTIONAL {?scifi wdt:P243 ?ocn }

  BIND (URI(CONCAT(\"http://www.worldcat.org/oclc/\",?ocn)) AS ?worldcatURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
  FILTER (?language = wd:Q7737)
} Try it! Properties related to various aspects of Vegetarian [edit] The following query uses these:Items: vegetarianism (Q83364)   , vegetarian (Q18338317)   , vegetarian cuisine (Q638022)   SELECT DISTINCT ?p ?propLabel (COUNT(?p) as ?occurrences)
WHERE
{
  ?s rdfs:label ?sLabel.
  { ?s ?p wd:Q83364 }
  UNION
  { ?s ?p wd:Q18338317 }
  UNION
  { ?s ?p wd:Q638022}
  ?prop wikibase:directClaim ?p
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
GROUP BY ?p ?propLabel
ORDER BY DESC(?occurrences) Try it! Properties related to New York City [edit] The following query uses these:Items: New York City (Q60)   SELECT DISTINCT ?p ?propLabel (COUNT(?p) as ?occurrences)
WHERE
{
  {wd:Q60 ?p ?o}
  UNION
  {?o ?p wd:Q60}
  ?prop wikibase:directClaim ?p
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
GROUP BY ?p ?propLabel
ORDER BY DESC(?occurrences) Try it! Autobiographies (inferred by author = about) [edit] The following query uses these:Properties: main subject (P921)   , author (P50)   SELECT DISTINCT ?s ?sLabel
WHERE
{
  ?s wdt:P921 ?o;
     wdt:P50 ?o;
     rdfs:label ?sLabel.
  ?prop wikibase:directClaim ?p
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
} Try it! Autobiographies (declared) [edit] The following query uses these:Items: autobiography (Q4184)   Properties: instance of (P31)   SELECT DISTINCT ?s ?sLabel
WHERE
{
  ?s wdt:P31 wd:Q4184;
     rdfs:label ?sLabel.
  ?prop wikibase:directClaim ?p
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
} Try it! External identifiers [edit] The following query uses these:Items: Wikidata property for an identifier (Q19847637)   , Wikidata property for authority control (Q18614948)   , Wikidata property for authority control for people (Q19595382)   Properties: instance of (P31)   SELECT DISTINCT ?externalID ?externalIDLabel ?typeLabel
WHERE {
  ?externalID wdt:P31 ?type.
  {?externalID wdt:P31 wd:Q19847637 .}
  UNION
  {?externalID wdt:P31 wd:Q18614948.}
  UNION
  {?externalID wdt:P31 wd:Q19595382 .}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en,en\" }
}
ORDER BY ?externalIDLabel ?typeLabel Try it! Works authored by entities with ISNI identifiers [edit] The following query uses these:Properties: author (P50)   , ISNI (P213)   SELECT DISTINCT ?workLabel ?work ?authorLabel ?author ?isniID
WHERE {
  ?work wdt:P50 ?author;
        rdfs:label ?workLabel.
  ?author wdt:P213 ?isniID.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 100 Try it! Comparison of author coverage between VIAF, ORCID, ISNI, and FAST [edit] The following query uses these:Properties: author (P50)   , ORCID iD (P496)   , ISNI (P213)   , VIAF ID (P214)   , FAST ID (P2163)   SELECT DISTINCT ?workLabel ?work ?authorLabel ?author ?orcid ?isni ?viaf ?fast
WHERE {
  ?work wdt:P50 ?author ;
        rdfs:label ?workLabel .
  OPTIONAL { ?author wdt:P496 ?orcidID }
  OPTIONAL { ?author wdt:P213 ?isniID }
  OPTIONAL { ?author wdt:P214 ?viafID }
  OPTIONAL { ?author wdt:P2163 ?fastID }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
  BIND (URI(CONCAT('http://orcid.org/', ?orcidID)) AS ?orcid)
  BIND (URI(CONCAT('http:/viaf.org/viaf/', ?viafID)) AS ?viaf)
  BIND (URI(CONCAT('http://isni.org/', ?orcidID)) AS ?isni)
  BIND (URI(CONCAT('http://id.worldcat.org/fast/', ?fastID)) AS ?fast)
}
LIMIT 1000 Try it! Things in Wikidata that have associated FAST identifiers [edit] The following query uses these:Properties: instance of (P31)   , FAST ID (P2163)   SELECT ?s ?sLabel ?typeLabel ?fastURI
WHERE {
  ?s wdt:P31 ?type;
  	wdt:P2163 ?fast.
  BIND (URI(CONCAT(\"http://id.worldcat.org/fast/\",?fast)) AS ?fastURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 100 Try it! Multilingual labels/descriptions for things in Wikidata that have associated FAST identifiers [edit] The following query uses these:Properties: FAST ID (P2163)   SELECT ?wdItem ?fastURI ?label ?description ?labelLang
WHERE {
  ?wdItem wdt:P2163 ?fast;
     rdfs:label ?label;
    schema:description ?description.
  BIND (LANG(?label) as ?labelLang)
  BIND (LANG(?description) as ?descriptionLang)
  BIND (URI(CONCAT(\"http://id.worldcat.org/fast/\",?fast)) AS ?fastURI)
#  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
  FILTER (?labelLang = ?descriptionLang)
}
LIMIT 100 Try it! A few of the types that Wikidata assigns (via wdt:P31 'instance of') to things that have FAST identifiers [edit] In effect, this is Wikidata's version of Product Ontology. The difference is that PTO was limited to English Wikipedia, whereas the Wikidata mechanism can be anything in the WikiData namespace, which includes multi-lingual labels and descriptions. The following query uses these:Properties: instance of (P31)   , FAST ID (P2163)   SELECT DISTINCT ?typeLabel ?type
WHERE {
  ?s wdt:P31 ?type;
  	wdt:P2163 ?fast.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 50 Try it! Editions (aka FRBR Manifestations) in Wikidata that link to online content (aka FRBR Digital Items) [edit] The following query uses these:Properties: language of work or name (P407)   , OCLC control number (P243)   , Internet Archive ID (P724)   , Wikisource index page URL (P1957)   SELECT DISTINCT ?wdItemLabel ?wdItem ?wcItem ?languageLabel ?iaContent ?wikicommonsContent
WHERE {
  ?wdItem
    wdt:P407 ?language;
  	?contentProperty ?o;
    rdfs:label ?wdItemLabel.
  OPTIONAL {?wdItem wdt:P243 ?ocn}
  OPTIONAL {?wdItem wdt:P724 ?ia}
  OPTIONAL {?wdItem wdt:P1957 ?wikicommonsContent}
  BIND (URI(CONCAT(\"http://www.worldcat.org/oclc/\", ?ocn)) AS ?wcItem)
  BIND (URI(CONCAT(\"https://archive.org/details/\", ?ia)) AS ?iaContent)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" .}
  FILTER (?contentProperty=wdt:P1957 || ?contentProperty=wdt:P724)
}
ORDER BY ?wdItemLabel
LIMIT 100 Try it! Properties associated with editions [edit] The following query uses these:SELECT DISTINCT ?propLabel ?p
WHERE {
  ?s ?p ?o .
  ?prop wikibase:directClaim ?p
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?propLabel Try it! Wikidata items that have VIAF identifiers [edit] The following query uses these:Properties: instance of (P31)   , VIAF ID (P214)   SELECT ?s ?sLabel ?typeLabel ?viafURI
WHERE {
  ?s wdt:P31 ?type;
  	wdt:P214 ?viaf.
  BIND (URI(CONCAT(\"http://viaf.org/viaf/\",?viaf)) AS ?viafURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 100 Try it! Wikidata items that have DOI identifiers [edit] The following query uses these:Properties: DOI (P356)   , instance of (P31)   , published in (P1433)   SELECT ?wdItem ?wdItemLabel ?journalLabel ?journal ?typeLabel ?doiURI
WHERE {
  ?wdItem wdt:P356 ?doi;
          wdt:P31 ?type.
  ?wdItem wdt:P1433 ?journal .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
  BIND(URI(CONCAT('http://dx.doi.org/', ?doi)) AS ?doiURI)
}
LIMIT 100 Try it! Books in Wikidata with OCLC identifiers [edit] The following query uses these:Properties: OCLC control number (P243)   , instance of (P31)   SELECT ?wdItem ?wdItemLabel ?typeLabel ?ocnURI ?ocnTurtle
WHERE {
  ?wdItem wdt:P243 ?ocn;
          wdt:P31 ?type.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
  BIND(URI(CONCAT('http://www.worldcat.org/oclc/', ?ocn)) AS ?ocnURI)
  BIND(URI(CONCAT('http://experiment.worldcat.org/oclc/', ?ocn, '.ttl')) AS ?ocnTurtle)
}
LIMIT 100 Try it! Books in Wikidata that don't have an OCLC identifiers, with a link to suggestions [edit] The following query uses these:Items: book (Q571)   Properties: instance of (P31)   , author (P50)   , OCLC control number (P243)   SELECT ?wdItem ?ocnURI ?wdItemLabel ?authorLabel ?ocnSuggest
WHERE {
  ?wdItem wdt:P31 wd:Q571;
          rdfs:label ?wdItemLabel;
          wdt:P50 ?author.
  ?author rdfs:label ?authorLabel.
  OPTIONAL { ?wdItem wdt:P243 ?ocn }
#  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
  BIND(URI(CONCAT('http://www.worldcat.org/search?qt=worldcat_org_all&q=', ENCODE_FOR_URI(?wdItemLabel), ' ', ENCODE_FOR_URI(?authorLabel))) AS ?ocnSuggest)
  FILTER(!bound(?ocn))
  FILTER (LANG(?wdItemLabel)='en')
  FILTER (LANG(?authorLabel)='en')
}
LIMIT 10 Try it! Properties of The Illuminatus! Trilogy [edit] The Illuminatus! Trilogy It's odd that this query response doesn't include rdfs:label and schema:description statements. If you want those, you have to request those properties explicitly (see 2nd query below). This seems to imply they are stored in a separate graph and there is a gizmo behind the scenes that merges them into the result when the properties are explicitly requested. The following query uses these:Items: The Illuminatus! Trilogy (Q1460253)   SELECT ?propLabel ?oLabel ?o
WHERE {
  wd:Q1460253 ?p ?o .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
  ?prop wikibase:directClaim ?p
}
ORDER BY ?p Try it! labels/descriptions The following query uses these:Items: The Illuminatus! Trilogy (Q1460253)   SELECT DISTINCT ?label ?description (LANG(?description) AS ?langTag)
WHERE {
  wd:Q1460253 rdfs:label ?label;
    schema:description ?description .
  FILTER (LANG(?label)=LANG(?description))
} Try it! Exploring the Notable works property [edit] This property is interesting, but it reveals the need for provenance and constraint checking on these statements. The following query uses these:Properties: notable work (P800)   , instance of (P31)   SELECT ?creatorLabel ?creator ?notableWorkLabel ?notableWork ?workTypeLabel
WHERE {
  ?creator wdt:P800 ?notableWork .
  ?notableWork wdt:P31 ?workType.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 100 Try it! Types of Notable Works [edit] Some of these types imply that some constraint checking on wdt:P800 is in order... The following query uses these:Properties: notable work (P800)   , instance of (P31)   SELECT DISTINCT ?workTypeLabel ?workType ?executeForSample
WHERE {
  ?creator wdt:P800 ?notableWork .
  ?notableWork wdt:P31 ?workType.
  ?workType rdfs:label ?workTypeLabel.
#  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
  FILTER (LANG(?workTypeLabel)='en')
  BIND(URI(CONCAT('https://query.wikidata.org/#SELECT%20%3FsLabel%20%3Fs%0AWHERE%20%7B%0A%20%20%3Fs%20wdt%3AP31%20%3C', ENCODE_FOR_URI(STR(?workType)), '%3E%3B%0A%20%20%20%20%20rdfs%3Alabel%20%3FsLabel.%0A%20%20FILTER%20(LANG(%3FsLabel)%3D\\'en\\')%0A%7D%0AORDER%20BY%20%3FsLabel%0ALIMIT%20100')) AS ?executeForSample)
}
ORDER BY ?workTypeLabel Try it! Works authored and illustrated by the same individual [edit] The following query uses these:Properties: author (P50)   , illustrator (P110)   , OCLC control number (P243)   SELECT DISTINCT ?workLabel ?work ?authorIllustratorLabel ?authorIllustrator ?ocnURI
WHERE {
  ?work wdt:P50 ?authorIllustrator;
        rdfs:label ?workLabel ;
        wdt:P110 ?authorIllustrator .
  OPTIONAL {
    ?work wdt:P243 ?ocn .
  }
  BIND(URI(CONCAT('http://www.worldcat.org/oclc/', ?ocn)) AS ?ocnURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?workLabel Try it! People who perform in movies that are based on books they authored [edit] The following query uses these:Items: book (Q571)   , film (Q11424)   Properties: instance of (P31)   , author (P50)   , cast member (P161)   , based on (P144)   SELECT DISTINCT ?bookLabel ?book ?movieLabel ?movie ?personLabel ?person
WHERE {
  ?book wdt:P31 wd:Q571;
        wdt:P50 ?person .
  ?movie wdt:P31 wd:Q11424;
         wdt:P161 ?person .
  ?movie wdt:P144 ?book .
#  ?prop wikibase:directClaim ?p
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?bookLabel ?movieLabel
LIMIT 100 Try it! People who author a book that is based on a movie they performed in [edit] The following query uses these:Items: book (Q571)   , film (Q11424)   Properties: instance of (P31)   , author (P50)   , cast member (P161)   , based on (P144)   SELECT DISTINCT ?bookLabel ?book ?movieLabel ?movie ?personLabel ?person
WHERE {
  ?book wdt:P31 wd:Q571;
        wdt:P50 ?person .
  ?movie wdt:P31 wd:Q11424;
         wdt:P161 ?person .
  ?book wdt:P144 ?movie .
#  ?prop wikibase:directClaim ?p
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?bookLabel ?movieLabel
LIMIT 100 Try it! People who form a production company and then perform in one of its movies [edit] The following query uses these:Properties: production company (P272)   , cast member (P161)   , founded by (P112)   SELECT DISTINCT ?movieLabel ?movie ?personLabel ?person ?productionCompanyLabel ?productionCompany
WHERE {
  ?movie wdt:P272 ?productionCompany;
         wdt:P161 ?person ;
         rdfs:label ?movieLabel.
  ?productionCompany wdt:P112 ?person .
#  ?prop wikibase:directClaim ?p
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?movieLabel
LIMIT 100 Try it! Authors that self-publish [edit] The following query uses these:Properties: author (P50)   , publisher (P123)   , OCLC control number (P243)   SELECT DISTINCT ?bookLabel ?book ?authorPublisherLabel ?authorPublisher ?ocnURI
WHERE {
  ?book wdt:P50 ?authorPublisher;
        rdfs:label ?bookLabel;
        wdt:P123 ?authorPublisher .
  OPTIONAL {
    ?book wdt:P243 ?ocn
  }
  BIND(URI(CONCAT('http://www.worldcat.org/oclc/', ?ocn)) AS ?ocnURI)
#  ?prop wikibase:directClaim ?p
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?bookLabel
LIMIT 100 Try it! Editions (reified form) [edit] The following query uses these:Items: Uncle Tom's Cabin (Q2222)   Properties: OCLC control number (P243)   , publication date (P577)   , language of work or name (P407)   , translator (P655)   SELECT DISTINCT ?workLabel ?work ?workOCNURI ?editionOCNURI ?languageLabel ?language ?year ?translatorLabel ?translator
WHERE {
  ?work p:P577 ?edition ;
        rdfs:label ?workLabel .
  ?edition pq:P407 ?language ;
	ps:P577 ?date .
  OPTIONAL { ?work wdt:P243 ?workOCN }
  OPTIONAL { ?edition pq:P243 ?editionOCN }
  OPTIONAL { ?edition pq:P655 ?translator }
  BIND(URI(CONCAT('http://www.worldcat.org/oclc/', ?workOCN)) AS ?workOCNURI)
  BIND(URI(CONCAT('http://www.worldcat.org/oclc/', ?editionOCN)) AS ?editionOCNURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
  BIND(YEAR(?date) AS ?year)
#  FILTER (?work=wd:Q2222)
}
ORDER BY ?workLabel ?date
LIMIT 100 Try it! Editions of Uncle Tom's Cabin (reified form) [edit] The following query uses these:Items: Uncle Tom's Cabin (Q2222)   Properties: OCLC control number (P243)   , publication date (P577)   , language of work or name (P407)   , translator (P655)   SELECT DISTINCT ?workLabel ?work ?workOCNURI ?editionOCNURI ?editionLanguageLabel ?year ?translatorLabel ?translator
WHERE {
  ?work p:P577 ?edition ;
        rdfs:label ?workLabel .
  ?edition pq:P407 ?editionLanguage ;
	ps:P577 ?date .
  OPTIONAL { ?work wdt:P243 ?workOCN }
  OPTIONAL { ?edition pq:P243 ?editionOCN }
  OPTIONAL { ?edition pq:P655 ?translator }
  BIND(URI(CONCAT('http://www.worldcat.org/oclc/', ?workOCN)) AS ?workOCNURI)
  BIND(URI(CONCAT('http://www.worldcat.org/oclc/', ?editionOCN)) AS ?editionOCNURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
  BIND(YEAR(?date) AS ?year)
  FILTER (?work=wd:Q2222)
}
ORDER BY ?workLabel ?date Try it! Variations of a work that aren't in the original language [edit] The following query uses these:Properties: original language of film or TV show (P364)   , language of work or name (P407)   , has edition or translation (P747)   SELECT DISTINCT ?sLabel ?s ?originalLanguageLabel ?variantWorkLanguageLabel ?editionLabel ?edition
WHERE {
  ?s wdt:P364 ?originalLanguage ;
     wdt:P407 ?variantWorkLanguage ;
     rdfs:label ?sLabel .
  OPTIONAL { ?s wdt:P747 ?edition }
  FILTER(?originalLanguage != ?variantWorkLanguage)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?sLabel
LIMIT 1000 Try it! Properties associated with work variants that are referenced in multiple languages [edit] The following query uses these:Properties: original language of film or TV show (P364)   , language of work or name (P407)   SELECT DISTINCT ?propLabel ?p
WHERE {
  ?s wdt:P364 ?originalLanguage .
  ?s wdt:P407 ?variantWorkLanguage .
  OPTIONAL {
    ?s ?p ?o .
  }
  ?prop wikibase:directClaim ?p .
  FILTER (?originalLanguage != ?variantWorkLanguage)
  FILTER (STRSTARTS(STR(?p), STR(wdt:)))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?propLabel Try it! A bespoke example of a work with language variants [edit] It looks like somebody experimented with this shape, but it didn't catch on. The following query uses these:Properties: original language of film or TV show (P364)   , language of work or name (P407)   , has edition or translation (P747)   SELECT DISTINCT ?sLabel ?s ?originalLanguageLabel ?variantWorkLanguageLabel ?editionLabel ?edition
WHERE {
  ?s wdt:P364 ?originalLanguage ;
     wdt:P407 ?variantWorkLanguage ;
     wdt:P747 ?edition ;
     rdfs:label ?sLabel .
  ?edition rdfs:label ?editionLabel .
  FILTER(?originalLanguage != ?variantWorkLanguage)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?sLabel
LIMIT 100 Try it! Uses of OCNs in a \"qualified\" form [edit] These look like one-off oddballs The following query uses these:Properties: OCLC control number (P243)   SELECT DISTINCT ?sLabel ?s ?p ?ocnURI
WHERE {
  ?s ?p ?stmt ;
     rdfs:label ?sLabel .
  ?stmt pq:P243 ?ocn .
#  ?prop wikibase:directClaim ?p  .
  BIND(URI(CONCAT('http://www.worldcat.org/oclc/', ?ocn)) AS ?ocnURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?sLabel
LIMIT 100 Try it! OCNs with an associated edition literal [edit] The following query uses these:Properties: OCLC control number (P243)   , edition number (P393)   SELECT DISTINCT ?sLabel ?s ?editionNumber ?ocnURI
WHERE {
  ?s wdt:P243 ?ocn ;
     rdfs:label ?sLabel ;
     wdt:P393 ?editionNumber .
#  ?prop wikibase:directClaim ?p  .
  BIND(URI(CONCAT('http://www.worldcat.org/oclc/', ?ocn)) AS ?ocnURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?sLabel
LIMIT 100 Try it! Things with OCNs and ISBNs [edit] The following query uses these:Properties: OCLC control number (P243)   , ISBN-10 (P957)   , ISBN-13 (P212)   SELECT DISTINCT ?sLabel ?s ?ocnURI ?isbn
WHERE {
  ?s wdt:P243 ?ocn ;
     rdfs:label ?sLabel;
     ?isbnP ?isbn .
  FILTER (?isbnP=wdt:P957 || ?isbnP=wdt:P212)
#  ?prop wikibase:directClaim ?p  .
  BIND(URI(CONCAT('http://www.worldcat.org/oclc/', ?ocn)) AS ?ocnURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?sLabel
LIMIT 100 Try it! Things with OCNs and DNB identifiers [edit] The following query uses these:Properties: language of work or name (P407)   , OCLC control number (P243)   , DNB edition ID (P1292)   SELECT DISTINCT ?sLabel ?s ?languageLabel ?ocnURI ?dnbURI
WHERE {
  ?s rdfs:label ?sLabel ;
     wdt:P407 ?language ;
     wdt:P243 ?ocn ;
     wdt:P1292 ?dnb .
  BIND(URI(CONCAT('http://www.worldcat.org/oclc/', ?ocn)) AS ?ocnURI)
  BIND(URI(CONCAT('http://d-nb.info/', ?dnb)) AS ?dnbURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?sLabel
LIMIT 100 Try it! WorldCat things related to VIAF Things [edit] The following query uses these:Properties: OCLC control number (P243)   , instance of (P31)   , VIAF ID (P214)   SELECT DISTINCT ?sLabel ?s ?ocnURI ?p ?oLabel ?o ?viafURI
WHERE {
  ?s wdt:P243 ?ocn ;
#     wdt:P31 ?sType ;
     ?p ?o .
  ?o wdt:P214 ?viafID ;
#     wdt:P31 ?oType
     .
#  ?prop wikibase:directClaim ?p
  BIND(URI(CONCAT('http://www.worldcat.org/oclc/', ?ocn)) AS ?ocnURI)
  BIND(URI(CONCAT('http://viaf.org/viaf/', ?viafID)) AS ?viafURI)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 100 Try it! WorldCat things related to VIAF Things (using Schema.org properties) [edit] The following query uses these:Properties: OCLC control number (P243)   , instance of (P31)   , equivalent property (P1628)   , VIAF ID (P214)   PREFIX wdt:  <http://www.wikidata.org/prop/direct/>
PREFIX wikibase:  <http://wikiba.se/ontology#>

CONSTRUCT {
  ?ocnURI ?schemaP ?viafURI.
} WHERE {
  ?s wdt:P243 ?ocn ;
#     wdt:P31 ?sType ;
     ?p ?o .
  ?wd  wikibase:directClaim ?p.
  ?wd wdt:P1628 ?schemaP.
  ?o wdt:P214 ?viafID ;
#     wdt:P31 ?oType
     .
  BIND(URI(CONCAT('http://www.worldcat.org/oclc/', ?ocn)) AS ?ocnURI)
  BIND(URI(CONCAT('http://viaf.org/viaf/', ?viafID)) AS ?viafURI)
  FILTER(CONTAINS(STR(?schemaP), \"schema.org\"))
#  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 100 Try it! Test identical id value template [edit] TODO Not sure what this template does or even how to inject a clickable label on it.[1] Collections with items represented in Wikidata [edit] The following query uses these:Properties: collection (P195)   SELECT DISTINCT ?collectionLabel ?collection
WHERE {
  ?item wdt:P195 ?collection .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 100 Try it! Who played M in Quantum of Solace? [edit] TODO The following query uses these: Try it! Fictional Animal Characters [edit] The following query uses these:Items: fictional animal character (Q3542731)   Properties: instance of (P31)   SELECT DISTINCT ?fictionalAnimalLabel ?fictionalAnimal
WHERE {
  ?fictionalAnimal wdt:P31 wd:Q3542731;
                   rdfs:label ?fictionalAnimalLabel .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
} Try it! Fictional Universes [edit] The following query uses these:Items: fictional universe (Q559618)   Properties: instance of (P31)   SELECT ?fictionalUniverseLabel ?fictionalUniverse
WHERE {
  ?fictionalUniverse wdt:P31 wd:Q559618 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 100 Try it! States that don't have VIAF IDs [edit] The following query uses these:Items: U.S. state (Q35657)   Properties: instance of (P31)   , VIAF ID (P214)   SELECT ?stateLabel ?state ?viafID
WHERE {
  ?state wdt:P31 wd:Q35657;
  OPTIONAL {?state wdt:P214 ?viafID}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
  FILTER(!BOUND(?viafID))
} Try it! Real people who are fictionalized in the context of a work [edit] TODO The following query uses these: Try it! List of publishers [edit] The following query uses these:Items: publishing company (Q2085381)   Properties: instance of (P31)   SELECT DISTINCT ?publisherLabel ?publisher
WHERE {
  ?publisher wdt:P31 wd:Q2085381;
             rdfs:label ?publisherLabel .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?publisherLabel Try it! List of publisher imprints [edit] The following query uses these:Items: imprint (Q2608849)   Properties: instance of (P31)   , owned by (P127)   , part of (P361)   SELECT DISTINCT ?imprintLabel ?imprint ?ownerLabel ?owner ?partOfLabel ?partOf
WHERE {
  ?imprint wdt:P31 wd:Q2608849;
	rdfs:label ?imprintLabel .
  OPTIONAL {?imprint wdt:P127 ?owner }
  OPTIONAL {?imprint wdt:P361 ?partOf }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?imprintLabel ?ownerLabel ?partOfLabel Try it! Serial/Volume/Issue [edit] The volume and issue aren't separately identified, they are treated as properties of the articles contained in the issue. The following query uses these:Properties: published in (P1433)   , volume (P478)   , issue (P433)   SELECT DISTINCT ?serialLabel ?serial ?volume ?issue
WHERE {
  ?article wdt:P1433 ?serial;
    wdt:P478 ?volume ;
    wdt:P433 ?issue .
  ?serial rdfs:label ?serialLabel .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?serialLabel ?volume ?issue
LIMIT 100 Try it! Some licensed works [edit] The following query uses these:Properties: copyright license (P275)   SELECT ?sLabel ?s ?license ?licenseLabel
WHERE {
  ?s wdt:P275 ?license .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 100 Try it! Some identified licenses [edit] Some of these are bugs in the data. The following query uses these:Properties: copyright license (P275)   , instance of (P31)   SELECT DISTINCT ?license ?licenseLabel ?instanceOfLabel
WHERE {
  ?s wdt:P275 ?license .
  ?license rdfs:label ?licenseLabel ;
           wdt:P31 ?instanceOf .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 100 Try it! Types of licenses [edit] Some of these are bugs in the data. The following query uses these:Properties: copyright license (P275)   , instance of (P31)   SELECT DISTINCT ?licenseTypeLabel ?licenseType
WHERE {
  ?s wdt:P275 ?license .
  ?license wdt:P31 ?licenseType .
  ?licenseType rdfs:label ?licenseTypeLabel .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?licenseTypeLabel Try it! Identified licenses (declared) [edit] The following query uses these:Items: license (Q79719)   Properties: instance of (P31)   SELECT DISTINCT ?licenseLabel ?license
WHERE {
  ?license wdt:P31 wd:Q79719 ;
    rdfs:label ?licenseLabel .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?licenseLabel Try it! Creative Commons licenses [edit] The following query uses these:Items: Creative Commons license (Q284742)   Properties: instance of (P31)   SELECT DISTINCT ?ccLicenseLabel ?ccLicense
WHERE {
  ?ccLicense wdt:P31 wd:Q284742 ;
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?ccLicenseLabel Try it! Form/genre [edit] Novels [edit] The following query uses these:Items: novel (Q8261)   Properties: instance of (P31)   SELECT DISTINCT ?sLabel ?s
WHERE
{
	?s wdt:P31 wd:Q8261;
       rdfs:label ?sLabel.
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 10 Try it! Plays [edit] The following query uses these:Items: play (Q25379)   Properties: instance of (P31)   SELECT DISTINCT ?sLabel ?s
WHERE
{
	?s wdt:P31 wd:Q25379;
       rdfs:label ?sLabel.
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 10 Try it! Drawings [edit] The following query uses these:Items: drawing (Q93184)   Properties: instance of (P31)   SELECT DISTINCT ?sLabel ?s
WHERE
{
	?s wdt:P31 wd:Q93184;
       rdfs:label ?sLabel.
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 10 Try it! Public Libraries [edit] The following query uses these:Items: public library (Q28564)   Properties: instance of (P31)   SELECT DISTINCT ?publicLibraryLabel ?publicLibrary
WHERE
{
	?publicLibrary wdt:P31 wd:Q28564 ;
                   rdfs:label ?publicLibraryLabel.
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?publicLibraryLabel Try it! Properties associated with public libraries [edit] The following query uses these:Items: public library (Q28564)   Properties: instance of (P31)   SELECT DISTINCT ?propLabel ?p
WHERE {
  ?s wdt:P31 wd:Q28564 .
  OPTIONAL {
    ?s ?p ?o .
  }
  ?prop wikibase:directClaim ?p .
  FILTER (STRSTARTS(STR(?p), STR(wdt:)))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?propLabel Try it! Academic Libraries [edit] The following query uses these:Items: academic library (Q856234)   Properties: instance of (P31)   SELECT DISTINCT ?academicLibraryLabel ?academicLibrary
WHERE
{
	?academicLibrary wdt:P31 wd:Q856234 ;
                   rdfs:label ?academicLibraryLabel.
	SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?academicLibraryLabel Try it! University Presses [edit] The following query uses these:Items: university press (Q479716)   , university (Q3918)   Properties: instance of (P31)   , named after (P138)   , subclass of (P279)   SELECT DISTINCT ?item ?itemLabel ?propLabel ?university ?universityLabel
WHERE {
  ?item wdt:P31 wd:Q479716 ;
        wikibase:sitelinks ?sitelinks ;
        ?p ?university .
  FILTER(?p != wdt:P138)
  ?university wdt:P31/wdt:P279* wd:Q3918.
  ?prop wikibase:directClaim ?p .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?sitelinks) ?propLabel Try it! Properties associated with academic libraries [edit] The following query uses these:Items: academic library (Q856234)   Properties: instance of (P31)   SELECT DISTINCT ?propLabel ?p
WHERE {
  ?s wdt:P31 wd:Q856234 .
  OPTIONAL {
    ?s ?p ?o .
  }
  ?prop wikibase:directClaim ?p .
  FILTER (STRSTARTS(STR(?p), STR(wdt:)))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?propLabel Try it! Properties associated with libraries [edit] The following query uses these:Items: library (Q7075)   Properties: instance of (P31)   SELECT DISTINCT ?propLabel ?p
WHERE {
  ?s wdt:P31 wd:Q7075 .
  OPTIONAL {
    ?s ?p ?o .
  }
  ?prop wikibase:directClaim ?p .
  FILTER (STRSTARTS(STR(?p), STR(wdt:)))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?propLabel Try it! Scientific articles [edit] The following query uses these:Items: scholarly article (Q13442814)   Properties: instance of (P31)   SELECT DISTINCT ?scientificArticleLabel ?scientificArticle
WHERE {
  ?scientificArticle wdt:P31 wd:Q13442814 .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
} Try it! Properties associated with scientific articles [edit] Limited to scientific articles that have authors The following query uses these:Items: scholarly article (Q13442814)   Properties: instance of (P31)   , author (P50)   SELECT DISTINCT ?propLabel ?p
WHERE {
  ?s wdt:P31 wd:Q13442814;
     wdt:P50 ?author .
  OPTIONAL {
    ?s ?p ?o .
  }
  ?prop wikibase:directClaim ?p .
  FILTER (STRSTARTS(STR(?p), STR(wdt:)))
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?propLabel Try it! Scientific articles with links to fulltext [edit] The following query uses these:Items: scholarly article (Q13442814)   Properties: instance of (P31)   , Wikisource index page URL (P1957)   , Internet Archive ID (P724)   , full work available at URL (P953)   SELECT DISTINCT ?scientificArticleLabel ?scientificArticle ?fulltextLink
WHERE {
  ?scientificArticle wdt:P31 wd:Q13442814 ;
                     ?contentProperty ?fulltextLink ;
                     rdfs:label ?scientificArticleLabel .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
  FILTER (?contentProperty=wdt:P1957 || ?contentProperty=wdt:P724 || ?contentProperty=wdt:P953)
} Try it! Oddities [edit] WikiData Books with OCNs but without authors [edit] The following query uses these:Items: book (Q571)   Properties: instance of (P31)   , OCLC control number (P243)   , author (P50)   SELECT *
WHERE {
  ?wd wdt:P31 wd:Q571;
      wdt:P243 ?ocn.
  OPTIONAL {?wd wdt:P50 ?author}
  FILTER(!BOUND(?author))
  BIND(URI(CONCAT(\"http://www.worldcat.org/oclc/\", ?ocn)) AS ?wc)
}
LIMIT 100 Try it! Star Wars novels [edit] The following query uses these: Try it! Erin Hunter analysis [edit] https://en.wikipedia.org/wiki/Erin_Hunter https://www.wikidata.org/wiki/Q641740 type: Collective Pseudonym wdt:P527 (‘has part’) relationship to the notable (but incomplete) list of people Dan Jolley is interesting because the data indicates that his role in the collective pseudonym is specifically \"comics artist\". http://viaf.org/viaf/80628888 Conflation of Erin Hunter and Kate Cary. Alternate names 4XX conflate other individuals Related 5XX to other \"names\". Asserts sameAs to http://www.wikidata.org/entity/Q465326 http://viaf.org/viaf/39212464 type: Person http://rdf-translator.appspot.com/convert/xml/n3/html/http%3A%2F%2Fviaf.org%2Fviaf%2F80628888%2Frdf.xml “pseud.” is indicated in one of the names, but isn’t currently parsed as a type in this example. There is a rule to parse pseudonym as a type, but it looks like it needs tightening. Here’s an example that did get caught: http://rdf-translator.appspot.com/convert/xml/n3/html/http%3A%2F%2Fviaf.org%2Fviaf%2F7376791%2Frdf.xml The various individuals are treated as “alternate name forms” (strings) and/or “related names” (entities) Scholarly articles that have Wikipedia articles about them [edit] https://twitter.com/EvoMRI/status/842497174114127878 Types of things that are classified as \"unknown\" [edit] The following query uses these:Items: unknown (Q24238356)   Properties: instance of (P31)   , subclass of (P279)   #Cats
SELECT ?type ?typeLabel (COUNT(DISTINCT ?item) AS ?numItems)
WHERE 
{
  ?item wdt:P31/wdt:P279* wd:Q24238356;
        wdt:P31 ?type .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?type ?typeLabel
ORDER BY DESC(?numItems) Try it! Types of entities that have ISSNs [edit] The following query uses these:Properties: ISSN (P236)   , instance of (P31)   SELECT DISTINCT ?type ?typeLabel (COUNT(DISTINCT ?item) AS ?itemCount) 
WHERE {
  ?item wdt:P236 [];
        wdt:P31 ?type .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?type ?typeLabel 
ORDER BY DESC(?itemCount) Try it! Follows claims where the types aren't the same [edit] The following query uses these:Properties: follows (P155)   , instance of (P31)   SELECT DISTINCT ?follow ?followLabel ?followTypeLabel ?precede ?precedeLabel ?precedeTypeLabel
WHERE {
  ?follow wdt:P155 ?precede ;
         wdt:P31 ?followType .
  ?precede wdt:P31 ?precedeType .
  FILTER NOT EXISTS {
    ?follow wdt:P31 ?precedeType
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
LIMIT 100 Try it! Replaces claims where the types aren't the same [edit] The following query uses these:Properties: replaces (P1365)   , instance of (P31)   SELECT DISTINCT ?follow ?followLabel ?followTypeLabel ?precede ?precedeLabel ?precedeTypeLabel
WHERE {
  ?follow wdt:P1365 ?precede ;
         wdt:P31 ?followType .
  ?precede wdt:P31 ?precedeType .
  FILTER NOT EXISTS {
    ?follow wdt:P31 ?precedeType
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
LIMIT 100 Try it! Types of things that get replaced by something else (P1366) [edit] The following query uses these:Properties: replaced by (P1366)   , instance of (P31)   # Types of things that get replaced by something else (P1366)
SELECT ?typeReplaced ?typeReplacedLabel (COUNT(DISTINCT ?item) AS ?numItems)
WHERE {
  ?item wdt:P1366 [] ;
        wdt:P31 ?typeReplaced .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?typeReplaced ?typeReplacedLabel
ORDER BY DESC(?numItems)
LIMIT 100 Try it! Type of things that replace something else (P1365) [edit] The following query uses these:Properties: followed by (P156)   , instance of (P31)   # Types of things that are followed by something else (P1366)
SELECT ?typeFollowed ?typeFollowedLabel ?numItems
WHERE {
  {
    SELECT ?typeFollowed (COUNT(DISTINCT ?item) AS ?numItems)
    {
    ?item wdt:P156 [] ;
        wdt:P31 ?typeFollowed .
    }
    GROUP BY ?typeFollowed
    ORDER BY DESC(?numItems)
    LIMIT 100
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?numItems) Try it! Types of things that are followed by something else (P156) [edit] The following query uses these:Properties: followed by (P156)   , instance of (P31)   # Types of things that are followed by something else (P1366)
SELECT ?typeFollowed ?typeFollowedLabel ?numItems
WHERE {
  {
    SELECT ?typeFollowed (COUNT(DISTINCT ?item) AS ?numItems)
    {
    ?item wdt:P156 [] ;
        wdt:P31 ?typeFollowed .
    }
    GROUP BY ?typeFollowed
    ORDER BY DESC(?numItems)
    LIMIT 100
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?numItems) Try it! Types of things that follow something else (P155) [edit] The following query uses these:Properties: follows (P155)   , instance of (P31)   #SELECT ?item1 ?item1Label ?item1TypeLabel ?item2 ?item2Label ?item2TypeLabel
SELECT DISTINCT ?follow ?followLabel ?followTypeLabel ?precede ?precedeLabel ?precedeTypeLabel
WHERE {
  ?follow wdt:P155 ?precede ;
         wdt:P31 ?followType .
  ?precede wdt:P31 ?precedeType .
  FILTER NOT EXISTS {
    ?follow wdt:P31 ?precedeType
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
LIMIT 100 Try it! Nice example of using VALUES clause with multiple variables [edit] The following query uses these:Items: Jane Austen (Q36322)   , Benjamin Franklin (Q34969)   Properties: author (P50)   , main subject (P921)   SELECT ?item ?itemLabel ?p ?propLabel ?o ?oLabel
WHERE {
  ?item ?p ?o .
  VALUES (?p ?o) {
    (wdt:P50 wd:Q36322)
    (wdt:P921 wd:Q34969)
  }
  ?prop wikibase:directClaim ?p .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! VIAF Single Value Constraint violations [edit] The following query uses these:Items: single-value constraint (Q19474404)   Properties: VIAF ID (P214)   , property constraint (P2302)   SELECT ?item (COUNT(?s) AS ?count)
WHERE {
  ?s ps:P2302 wd:Q19474404.
  ?stmt wikibase:hasViolationForConstraint ?s .
  ?item p:P214 ?stmt .
}
GROUP BY ?item
ORDER BY DESC(?count) Try it! Fictional universes with the most related entities [edit] The following query uses these:Properties: from narrative universe (P1080)   #Fictional universes with the most related entities
SELECT DISTINCT ?universe ?universeLabel (COUNT(DISTINCT ?item) AS ?itemCount)
WHERE 
{
  ?item wdt:P1080 ?universe.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?universe ?universeLabel
ORDER BY DESC(?itemCount) Try it! Names according to the Discogs master database [edit] The following query uses these:Properties: Discogs master ID (P1954)   , subject named as (P1810)   SELECT ?item ?itemLabel ?discogsID ?discogsName 
WHERE {
  ?item p:P1954 [
    ps:P1954 ?discogsID; 
    pq:P1810 ?discogsName 
  ].
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Wikidata items with the most external ID associated labels [edit] The following query uses these:Properties: subject named as (P1810)   SELECT ?p ?propLabel (COUNT(?item) AS ?count)
  WHERE {
    {
    SELECT DISTINCT ?p ?prop
    WHERE {
      ?prop wikibase:propertyType wikibase:ExternalId ;
            wikibase:claim ?p .
    }
    }
    ?item ?p [
      pq:P1810 ?name
    ].
    SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
  }
  GROUP BY ?p ?propLabel
  ORDER BY DESC(?count)
  LIMIT 100 Try it! Things with the most names in external databases [edit] The following query uses these:Properties: subject named as (P1810)   SELECT ?item ?itemLabel ?count 
WHERE {
  {
SELECT ?item (COUNT(?name) AS ?count)
WHERE {
    ?item ?p [
      pq:P1810 ?name
    ].
}
GROUP BY ?item
ORDER BY DESC(?count)
LIMIT 100
  }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?count) Try it! Digital Collections [edit] Potentially a spin on the emerging Wikidata+Wikimedia Commons effort. Note that the Europeana Eagle Project, which is arguably(?) a digital collection, is running their own instance of Wikibase. Examples to follow... Digital Repository [edit] This can be imagined in terms of the emerging Wikidata+WikiSource effort: Wikidata perspective WikiSource perspective Examples to follow... Constraint violation [edit] Examples [edit] The following query uses these:Items: human (Q5)   , organization (Q43229)   , city (Q515)   Properties: instance of (P31)   , property constraint (P2302)   # Example constraint violations for various types
SELECT ?example ?itemLabel ?p ?numOccurs ?constraint ?constraintTypeLabel
WHERE {
  {
    SELECT (SAMPLE(?item) AS ?item) ?p ?constraint (COUNT(?stmt) AS ?numOccurs)
    WHERE {
      ?stmt wikibase:hasViolationForConstraint ?constraint.
      ?item ?p ?stmt ;
#          wdt:P31 wd:Q5 .
#          wdt:P31 wd:Q43229 .
            wdt:P31 wd:Q515 . # city
    } 
    GROUP BY ?p ?constraint
#    ORDER BY DESC(?numOccurs)
#    LIMIT 30
  }
  ?constraint ps:P2302 ?constraintType .
  BIND(URI(CONCAT(STR(?item), \"#\", STRAFTER(STR(?p), STR(p:)))) AS ?example)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?numOccurs) Try it! Misc [edit] Hybrid search/query example [edit] The following query uses these:Properties: subclass of (P279)   SELECT DISTINCT ?item ?itemLabel ?type ?typeLabel
WHERE {
  SERVICE wikibase:mwapi {
    bd:serviceParam wikibase:api \"EntitySearch\";
                    wikibase:endpoint \"www.wikidata.org\";
                    mwapi:search \"cheese\";
                    mwapi:language \"en\".
    ?item wikibase:apiOutputItem mwapi:item.
    }
  ?item (wdt:P279 Try it! OCN/page as claim references [edit] The following query uses these:Properties: religion or worldview (P140)   , date of birth (P569)   , military branch (P241)   , named after (P138)   , inception (P571)   , headquarters location (P159)   , dissolved, abolished or demolished date (P576)   , OCLC control number (P243)   , page(s) (P304)   SELECT (URI(CONCAT(STR(?item), '#', STRAFTER(STR(?p), STR(p:)))) AS ?example)
WHERE {
  VALUES ?p {
    p:P140  # religion
    p:P569  # date of birth
    p:P241  # military branch
    p:P138  # named after
    p:P571  # inception
    p:P159  # headquarter location
    p:P576  # dissolved, abolished, or demolished
  }
  ?ref pr:P243 ?ocn;
       pr:P304 ?pages.
  ?stmt prov:wasDerivedFrom ?ref.
  ?item ?p ?stmt.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
LIMIT 100 Try it! One-of constraints [edit] The following query uses these:Items: one-of constraint (Q21510859)   Properties: property constraint (P2302)   , item of property constraint (P2305)   SELECT ?prop ?propLabel (COUNT(?value) AS ?numValues)
WHERE {
  ?prop p:P2302 ?qual .
  ?qual ps:P2302 wd:Q21510859 ;
        pq:P2305 ?value .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?prop ?propLabel
ORDER BY DESC(?numValues) Try it! Languages with/without LCSH ID [edit] The following query uses these:Properties: ISO 639-2 code (P219)   , Library of Congress authority ID (P244)   SELECT ?item ?itemLabel ?lcsh
WHERE {
  ?item wdt:P219 ?iso.
  OPTIONAL {?item wdtn:P244 ?lcsh}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY ?itemLabel Try it! Who followed President Buchanan in various political offices? [edit] The following query uses these:Items: James Buchanan (Q12325)   Properties: position held (P39)   , replaced by (P1366)   SELECT ?positionLabel ?afterBuchananLabel
WHERE {
  wd:Q12325 p:P39 [
    ps:P39 ?position;
    pq:P1366 ?afterBuchanan
  ] .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! Family names with the most variants [edit] The following query uses these:Items: list of lists of people (Q845648)   , Aisin Gioro (Q934262)   , Strauss (Q10450274)   , Borjigin (Q1059073)   , Nagy (Q431758)   , Johansson (Q1699018)   , Kretschmer (Q127578)   , Chen (Q804988)   , Rasmussen (Q1634177)   , Lustig (Q1159973)   , Piccolomini (Q611733)   , Liu (Q804970)   , Jakobson (Q1679557)   , family name (Q101352)   Properties: instance of (P31)   SELECT ?item ?itemLabel ?itemDescription (COUNT(DISTINCT STR(?prefLabel)) AS ?strCount)
WHERE {
  VALUES ?item {
    wd:Q845648
    wd:Q934262
    wd:Q10450274
    wd:Q1059073
    wd:Q431758
    wd:Q1699018
    wd:Q127578
    wd:Q804988
    wd:Q1634177
    wd:Q1159973
    wd:Q611733
    wd:Q804970
    wd:Q1679557
  }
  ?item wdt:P31 wd:Q101352 ;
        rdfs:label ?prefLabel .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?item ?itemLabel ?itemDescription
ORDER BY DESC(?strCount) Try it! Wikidata -> BF Crosswalks [edit] I wouldn't suggest that SPARQL is the best mechanism to do these crosswalks, it's just a semi-convenient way to do it using online data and tools. Identifiers and Notes [edit] Crosswalk ISBN identifiers from Wikidata to BF 2.0 (method 1) [edit] Unfortunately, WDQS doesn't return Turtle and the RDF/XML option is pretty-much unreadable. Here's the output of the query, though, that runs through the RDF Translator service to re-serialize the RDF/XML into Turtle.http://rdf-translator.appspot.com/convert/xml/n3/html/http%3A%2F%2Fbit.ly%2F1MpDCGh The following query uses these:Properties: ISBN-10 (P957)   PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bf: <http://bibframe.org/vocab/>
Prefix identifier: <http://id.loc.gov/vocabulary/identifiers/>

CONSTRUCT {
  ?s bf:identifiedBy [
    a identifier:Isbn;
    rdf:value ?isbn
  ]
} WHERE {
  ?s wdt:P957 ?isbn
}
LIMIT 10 Try it! Crosswalk ISBN identifiers from Wikidata to BF 2.0 (method 2) [edit] Here's a variation where the bf:scheme is treated as text instead of an identifier. The following query uses these:Properties: ISBN-10 (P957)   PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bf: <http://bibframe.org/vocab/>
PREFIX identifier: <http://id.loc.gov/vocabulary/identifiers/>

CONSTRUCT {
  ?s bf:identifiedBy [
    a bf:Identifier;
    bf:scheme \"xyz\";
    rdf:value ?isbn
  ]
} WHERE {
  ?s wdt:P957 ?isbn
}
LIMIT 10 Try it! Crosswalk Wikidata into a BF 2.0 Note (example 1) [edit] The following query uses these:Properties: producer (P162)   PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
PREFIX bf: <http://bibframe.org/vocab/>
PREFIX identifier: <http://id.loc.gov/vocabulary/identifiers/>
PREFIX note: <http://id.loc.gov/vocabulary/noteTypes/>

CONSTRUCT {
  ?s bf:note [
    a note:Credits;
    rdf:value ?value
  ]
} WHERE {
  ?s wdt:P162 ?producer.
  ?producer rdfs:label ?producerLabel.
  BIND(CONCAT(\"Produced by \", ?producerLabel) AS ?value)
  FILTER (LANG(?producerLabel)='en')
}
LIMIT 10 Try it! Agents and Roles [edit] Crosswalk Wikidata contributor to BF 2.0 (combined methods) [edit] Pretty-printed Turle result: http://rdf-translator.appspot.com/convert/xml/n3/html/http%3A%2F%2Fbit.ly%2F22osPZv The following query uses these:Items: human (Q5)   , This Bridge Called My Back (Q7785623)   Properties: contributor to the creative work or subject (P767)   , instance of (P31)   , Library of Congress authority ID (P244)   PREFIX bf: <http://bibframe.org/vocab/>
PREFIX relators: <http://id.loc.gov/vocabulary/relators/>
CONSTRUCT {
  ?s bf:contributor ?lccnURI;
    relators:cbt ?lccnURI;
     bf:contributor [
       a bf:Contributor;
         bf:role \"creator\";
         bf:agent ?lccnURI
     ].
  ?lccnURI a bf:Person;
             rdfs:label ?contributorLabel;
} WHERE {
  ?s wdt:P767 ?contributor .
  ?contributor wdt:P31 wd:Q5;
               rdfs:label ?contributorLabel;
               wdt:P244 ?lccn .
  BIND(URI(CONCAT('http://id.loc.gov/rwo/', ?lccn)) AS ?lccnURI)
#  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
  FILTER (LANG(?contributorLabel)='en')
  FILTER (?s=wd:Q7785623)
}
LIMIT 100 Try it! Baseball [edit] Shortstops for the San Francisco Giants [edit] Shortstops for the San Francisco Giants and when they were born. The following query uses these:Items: shortstop (Q1143358)   , San Francisco Giants (Q308966)   Properties: position played on team / speciality (P413)   , member of sports team (P54)   , date of birth (P569)   PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?shortstop ?shortstopLabel ?birthdate ?evidence
WHERE
{
  ?evidence schema:about ?shortstop.
  ?shortstop wdt:P413 wd:Q1143358; # shortstop.
    wdt:P54 wd:Q308966;	# San Francisco Giants
  	wdt:P569 ?birthdate.
  FILTER regex(STR(?evidence), 'https://en.wikipedia.org/wiki/')
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?shortstopLabel Try it! All the shortstops, when they were born, and which teams they played for [edit] The following query uses these:Items: shortstop (Q1143358)   Properties: position played on team / speciality (P413)   , member of sports team (P54)   , date of birth (P569)   PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX wdt: <http://www.wikidata.org/prop/direct/>
PREFIX wd: <http://www.wikidata.org/entity/>
SELECT DISTINCT ?shortstop ?shortstopLabel ?birthdate ?teamLabel ?evidence
WHERE
{
  ?evidence schema:about ?shortstop.
  ?shortstop wdt:P413 wd:Q1143358; # shortstop
    wdt:P54 ?team;
    wdt:P569 ?birthdate.
  FILTER regex(STR(?evidence), 'https://en.wikipedia.org/wiki/')
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?teamLabel ?shortstopLabel Try it! operas [edit] The following query uses these:Items: opera (Q1344)   Properties: instance of (P31)   , subclass of (P279)   , composer (P86)   , inception (P571)   , based on (P144)   , date of first performance (P1191)   , language of work or name (P407)   , librettist (P87)   , full work available at URL (P953)   , dedicated to (P825)   # Traditional knowledge
SELECT ?opera ?operaLabel 
?composerLabel 
(YEAR(?inception) AS ?year) 
?basedOn ?basedOnLabel 
?firstPerformanceDate 
?languageLabel 
?librettistLabel 
?fullWork 
?dedicatedToLabel
(URI(REPLACE(STR(?enwiki), \"/wiki/\", \"/w/api.php?action=query&prop=extracts&format=json&exintro=&titles=\")) AS ?synopsis)
WHERE {
  ?opera wdt:P31/wdt:P279* wd:Q1344 .
  OPTIONAL {?opera wdt:P86 ?composer}
  OPTIONAL {?opera wdt:P571 ?inception}
  OPTIONAL {?opera wdt:P144 ?basedOn}
  OPTIONAL {?opera wdt:P1191 ?firstPerformanceDate}
  OPTIONAL {?opera wdt:P407 ?language}
  OPTIONAL {?opera wdt:P87 ?librettist}
  OPTIONAL {?opera wdt:P953 ?fullWork}
  ?enwiki schema:about ?opera;
          schema:isPartOf <https://en.wikipedia.org/>.
  OPTIONAL {?opera wdt:P825 ?dedicatedTo}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
} Try it! composers without a composition [edit] The following query uses these:Items: composer (Q36834)   Properties: occupation (P106)   , composer (P86)   SELECT ?composer ?composerLabel
WHERE {
  ?composer wdt:P106 wd:Q36834 ;
            wikibase:sitelinks ?sitelinks .
  MINUS {?work wdt:P86 ?composer}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY DESC(?sitelinks)
LIMIT 100 Try it! Network of Resources [edit] Wikidata doesn't have a tailored notion of these classes, but it's a place to start imagining and exploring the possibilities. Teams [edit] The following query uses these:Items: team (Q327245)   Properties: instance of (P31)   SELECT DISTINCT ?team ?teamLabel
WHERE {
  ?team wdt:P31 wd:Q327245;
     rdfs:label ?teamLabel
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
ORDER BY ?teamLabel
LIMIT 100 Try it! People [edit] The following query uses these:Items: human (Q5)   Properties: instance of (P31)   SELECT DISTINCT ?person ?personLabel
WHERE {
  ?person wdt:P31 wd:Q5;
          rdfs:label ?personLabel;
  FILTER (LANG(?personLabel) = 'en')
}
LIMIT 100 Try it! Systems [edit] The following query uses these:Items: system (Q58778)   Properties: instance of (P31)   SELECT DISTINCT ?system ?systemLabel ?additionalTypeLabel
WHERE {
  ?system wdt:P31 wd:Q58778;
          rdfs:label ?systemLabel;
          wdt:P31 ?additionalType.
  FILTER (?additionalType != wd:Q58778)
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 100 Try it! Roles [edit] In Linked Data, \"roles\" are expressed as named properties. For example: :Plan9 :evilGenius :Pinky . The list of roles that are useful and practical to maintain is often domain or application-specific. Reusing terms from existing vocabularies, whenever possible, is generally considered best practice. Skills [edit] The following query uses these:Items: skill (Q205961)   Properties: instance of (P31)   SELECT DISTINCT ?skill ?skillLabel
WHERE {
  ?skill wdt:P31 wd:Q205961;
          rdfs:label ?skillLabel.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 100 Try it! Products [edit] The following query uses these:Items: product (Q2424752)   Properties: instance of (P31)   SELECT DISTINCT ?product ?productLabel
WHERE {
  ?product wdt:P31 wd:Q2424752;
          rdfs:label ?productLabel.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 100 Try it! Work [edit] Some notions of \"work\" as a discrete identifiable/describable \"entity\" may be difficult. Here's a list based on the notion of \"work\" as a \"distinct intellectual or artistic creation\": The following query uses these:Items: work (Q386724)   Properties: instance of (P31)   SELECT DISTINCT ?work ?workLabel
WHERE {
  ?work wdt:P31 wd:Q386724;
          rdfs:label ?workLabel.
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"en\" }
}
LIMIT 100 Try it! Quality [edit] Treating \"quality\" as an existential class seems odd. It should be possible to quantify \"quality\" in various contexts, but the use cases would have to be examined. Here is the English Wikipedia disambiguation page for \"Quality\" that splits a few of those hairs: https://en.wikipedia.org/wiki/Quality Metrics/KPIs [edit] These would have to be analyzed for patterns. Variations of the the personal name \"Jeff\" [edit] The following query uses these:Items: Jeffrey (Q13028078)   Properties: said to be the same as (P460)   , language of work or name (P407)   SELECT ?item ?itemLabel ?languageLabel
WHERE {
  ?item wdt:P460* wd:Q13028078 .
  OPTIONAL {?item wdt:P407 ?language}
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
ORDER BY (?itemLabel) Try it! Lexical analysis [edit] Common properties for Lexemes [edit] The following query uses these:SELECT ?p ?propLabel (COUNT(?l) AS ?numOccurs) 
WHERE {
  ?l a ontolex:LexicalEntry ;
       ?p [] .
  OPTIONAL {?prop wikibase:directClaim ?p }
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?p ?propLabel
ORDER BY DESC(?numOccurs)
LIMIT 100 Try it! Lexeme languages [edit] The following query uses these:SELECT ?language ?languageLabel (COUNT(?le) AS ?numOccurs) 
WHERE {
  ?le a ontolex:LexicalEntry ;
       dct:language ?language .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?language ?languageLabel
ORDER BY DESC(?numOccurs)
LIMIT 100 Try it! Common lexical categories [edit] The following query uses these:SELECT ?lexicalCategory ?lexicalCategoryLabel (COUNT(?le) AS ?numOccurs) 
WHERE {
  ?le a ontolex:LexicalEntry ;
       wikibase:lexicalCategory ?lexicalCategory .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?lexicalCategory ?lexicalCategoryLabel
ORDER BY DESC(?numOccurs)
LIMIT 100 Try it! List of wikibase:grammaticalFeatures [edit] The following query uses these:SELECT DISTINCT ?grammaticalFeature ?grammaticalFeatureLabel (COUNT(DISTINCT ?s) AS ?numOccurs)
WHERE {
  ?s wikibase:grammaticalFeature ?grammaticalFeature .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?grammaticalFeature ?grammaticalFeatureLabel
ORDER BY DESC(?numOccurs) Try it! Book topics with their plural lexical form(s) [edit] The following query uses these:Items: book (Q571)   , English (Q1860)   , plural (Q146786)   Properties: instance of (P31)   , main subject (P921)   , item for this sense (P5137)   SELECT ?book ?bookLabel ?mainSubjectLabel ?sense ?lexeme ?pluralForm
WHERE {
  ?book wdt:P31 wd:Q571 ;
        wdt:P921 ?mainSubject .
  ?sense wdt:P5137 ?mainSubject .
  ?lexeme ontolex:sense ?sense ;
          dct:language wd:Q1860 ;
          ontolex:lexicalForm ?lexicalForm .
  ?lexicalForm wikibase:grammaticalFeature wd:Q146786; 
               ontolex:representation ?pluralForm .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
LIMIT 1000 Try it! Plural form of an Wikibase Item [edit] The following query uses these:Items: English (Q1860)   , plural (Q146786)   Properties: item for this sense (P5137)   SELECT ?item ?itemLabel ?sense ?senseDefinition ?lexeme ?pluralForm
WHERE {
  ?sense wdt:P5137 ?item ;
         skos:definition ?senseDefinition .
  FILTER(LANG(?senseDefinition)=\"en\")
  ?lexeme ontolex:sense ?sense ;
          dct:language wd:Q1860 ;
          ontolex:lexicalForm ?lexicalForm .
  ?lexicalForm wikibase:grammaticalFeature wd:Q146786; 
               ontolex:representation ?pluralForm .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
LIMIT 1000 Try it! Lexemes with the most senses [edit] The following query uses these:"""@en;
  dcterms:isPartOf <https://www.wikidata.org//wiki/User:Realworldobject/ShowTell>;
  dcterms:license <https://creativecommons.org/licenses/by-sa/4.0/>;
  sh:prefixes _:genid-4e694113159d4e3db4a1a913894a81d821539-wikidata_prefixes;
  schema:target <https://query.wikidata.org/sparql/>;
  sh:select """PREFIX wikibase: <http://wikiba.se/ontology#>
PREFIX ontolex: <http://www.w3.org/ns/lemon/ontolex#>
PREFIX dct: <http://purl.org/dc/terms/>
PREFIX bd: <http://www.bigdata.com/rdf#>
SELECT ?lexeme ?languageLabel ?lemma (COUNT(DISTINCT ?sense) AS ?numSenses)
WHERE {
  ?lexeme ontolex:sense ?sense ;
          wikibase:lemma ?lemma ;
          dct:language ?language .
  SERVICE wikibase:label { bd:serviceParam wikibase:language \"[AUTO_LANGUAGE],en\". }
}
GROUP BY ?lexeme ?lemma ?languageLabel
ORDER BY DESC(?numSenses)""" .
